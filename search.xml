<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BT提速方法：添加自定义Tracker</title>
    <url>/2019/07/18/BT%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89Tracker/</url>
    <content><![CDATA[<h1 id="tracker网址">Tracker网址</h1>
<ul>
<li><a href="https://trackerslist.com/#/zh">XIU2/TrackersListCollection</a></li>
<li><a href="https://github.com/ngosang/trackerslist">ngosang/trackerslist: Updated list of public BitTorrent trackers</a></li>
<li><a href="https://github.com/DeSireFire/animeTrackerList">DeSireFire/animeTrackerList: 动漫磁性链接加速方案（animeTrackerList）</a></li>
<li><a href="https://dns.icoa.cn/tracker/">BT Tracker 服务器地址大全与常用 BT 软件下载地址 Tracker List - DNS.iCoA.CN</a></li>
<li><a href="https://newtrackon.com/list">Stable Trackers List - newTrackon</a></li>
<li><a href="https://torrents.io/tracker-list/">Torrent Tracker List for 2019 - Torrents</a></li>
<li><a href="http://github.itzmx.com/1265578519/OpenTracker/master/tracker.txt">github.itzmx.com/1265578519/OpenTracker/master/tracker.txt</a></li>
<li><a href="https://torrenttrackerss.com/torrent-tracker-list/">Torrent Trackers List February 2020 (85+ Working Trackers)</a></li>
<li><a href="http://www.torrenttrackerlist.com/torrent-tracker-list">Torrent Tracker List February 2020 (160+ Trackers) to Increase Download Speed</a></li>
</ul>
<h1 id="问题">问题</h1>
<p>BT下载的一个常用工具是迅雷，不过迅雷有它的局限性，比如一些
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">审核不通过的</span>
  </span>资源，或者不开会员就没速度的资源。而在换其它工具（比如qBittorrent）来下载时会出现一直在下载元数据或者无法找到Peers来下载的情况。有时候这是因为我们无法连接上Tracker服务器的缘故。</p>
<h1 id="什么是tracker">什么是Tracker</h1>
<blockquote>
<p><strong>BitTorrent tracker</strong>（中文可称：<strong>BT服务器</strong>、<strong>tracker服务器</strong>等）是帮助<a href="https://zh.wikipedia.org/wiki/BitTorrent协议">BitTorrent协议</a>在节点与节点之间做连接的<a href="https://zh.wikipedia.org/wiki/服务器">服务器</a>。</p>
<p>BitTorrent客户端下载一开始就要连接到tracker，从tracker获得其他客户端<a href="https://zh.wikipedia.org/wiki/IP">IP</a>地址后，才能连接到其他客户端下载。在传输过程中，也会一直与tracker通信，上传自己的信息，获取其它客户端的信息。</p>
<p>一般<a href="https://zh.wikipedia.org/wiki/BitTorrent客户端">BitTorrent客户端</a>可以手动添加tracker。tracker也会提供很多<a href="https://zh.wikipedia.org/wiki/端口">端口</a>。</p>
<p>由于tracker对BT下载起到客户端协调和调控的重要作用，所以一旦被封锁会严重影响BT下载，如2009年12月，中华人民共和国广电总局对BTchina一系列的tracker进行打击，因此也促使新BT客户端支持<a href="https://zh.wikipedia.org/wiki/分布式散列表">DHT</a>网络实现无中心tracker，分布式资源分享的影响。</p>
<p>——<a href="https://zh.wikipedia.org/wiki/BitTorrent_tracker">BitTorrent tracker - 维基百科，自由的百科全书</a></p>
</blockquote>
<p>所以Tracker是很重要的，BT软件要开始下载，首先需要找到Tracker服务器，然后从服务器获取到其它拥有文件的主机地址。一个BT客户端在下载开始以及下载进行的过程中，要不停的与Tracker服务器进行通信，以报告自己的信息，并获取其它下载客户端的信息。也就是说一个Tracker服务器负责储存并处理提交到本服务器的BT种子所有用户的相关信息，但是Tracker服务器并没有官方一说，所有人都可以建立自己的Tracker服务器。因此，在下载BT文件的时候，优质的Tracker服务器地址，可以与更多的客户端进行数据交换，从而提高下载速度。而有时候种子内的Tracker被封禁，或者只有磁力链接的情况下，连接不上Tracker，就无法开始下载。所以这时候就可以采用添加自定义Tracker的方式。</p>
<h1 id="如何添加自定义tracker">如何添加自定义Tracker</h1>
<p>为了方便起见只以qBittorrent为例。</p>
<p>打开qBittorent的选项，找到BitTorrent菜单，最下方有一个“自动添加以下 trackers 到新的 torrents：”的复选框，勾上，然后下面的输入框就是用来填Trackers地址的地方。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_18_BT%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89Tracker_qBittorrent%E9%80%89%E9%A1%B9.png" alt="qBittorrent选项.png" /><figcaption aria-hidden="true">qBittorrent选项.png</figcaption>
</figure>
<p>文章开头列出了几个更新Tracker地址的网址。</p>
<p>在这些网站上找到类似于这样的服务器地址，复制粘贴到选项里的填地址的地方。</p>
<pre class="line-numbers language-none"><code class="language-none">udp:&#x2F;&#x2F;tracker.tiny-vps.com:6969&#x2F;announce

https:&#x2F;&#x2F;1337.abcvg.info&#x2F;announce

https:&#x2F;&#x2F;tracker.fastdownload.xyz:443&#x2F;announce

https:&#x2F;&#x2F;opentracker.xyz:443&#x2F;announce

http:&#x2F;&#x2F;open.trackerlist.xyz:80&#x2F;announce

...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>服务器地址的格式是空一行一个地址。填好了之后新添加的BT任务就会从这些Tracker获取下载信息了，更多的Tracker意味着能找到更多用户，下载速度也会更快，更不容易遇到死链的问题。</p>
<p>如果你的qBittorrent是Enhanced Edition的，那么你还可以设置成自动更新Trackers List。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_18_BT%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89Tracker_%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0trackers%20list.png" alt="自动更新trackers list.png" /><figcaption aria-hidden="true">自动更新trackers list.png</figcaption>
</figure>
<h1 id="其他设置">其他设置</h1>
<p>如果你的qBittorrent客户端遇到了大部分的Tracker都显示<strong>连接失败</strong>的问题，不要担心，不是这些服务器都被禁了，而是设置的问题，在qBittorrent的选项中找到下面这个设置，然后勾选。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_18_BT%E6%8F%90%E9%80%9F%E6%96%B9%E6%B3%95%EF%BC%9A%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89Tracker_%E6%80%BB%E6%98%AF%E5%90%91%E5%90%8C%E7%BA%A7%E7%9A%84%E6%89%80%E6%9C%89Tracker%E6%B1%87%E6%8A%A5.png" alt="总是向同级的所有Tracker汇报.png" /><figcaption aria-hidden="true">总是向同级的所有Tracker汇报.png</figcaption>
</figure>
<p>勾选了之后大部分的Tracker都能显示工作中了。相信这样设置了以后BT文件的下载速度肯定比设置之前有所提升。</p>
]]></content>
      <tags>
        <tag>BitTorrent</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（10）：灯光基础</title>
    <url>/2019/02/14/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8810%EF%BC%89%EF%BC%9A%E7%81%AF%E5%85%89%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li><p>灯光常用设置</p>
<ul>
<li>颜色</li>
<li>投影
<ul>
<li>区域效果最好</li>
<li>灯光是多个组合使用
<ul>
<li>只需要主光源加投影</li>
</ul></li>
</ul></li>
<li>衰减
<ul>
<li>近亮远暗</li>
<li>物理精度效果最好</li>
<li>泛光灯：无限大、没有衰减变化</li>
</ul></li>
<li>强度</li>
<li>排除
<ul>
<li>排除不被灯光影响的对象</li>
</ul></li>
</ul></li>
<li><p>工具-照明工具</p></li>
<li><p>场景搭建</p>
<ul>
<li>平台搭建
<ul>
<li>样条+矩形+扫描</li>
</ul></li>
<li>灯光设置
<ul>
<li>区域光</li>
<li>灯光的五个设置
<ul>
<li>颜色</li>
<li>强度
<ul>
<li>泛光灯：无限大、没有衰减变化</li>
</ul></li>
<li>投影
<ul>
<li>区域效果最好</li>
<li>只需要主光源加投影就可以了</li>
</ul></li>
<li>衰减
<ul>
<li>物理精度效果最好</li>
<li>近亮远暗</li>
</ul></li>
</ul></li>
<li>环境光</li>
</ul></li>
<li>材质球设置
<ul>
<li>置换
<ul>
<li>凹凸效果</li>
<li>对象要是可编辑对象</li>
</ul></li>
<li>Alpha
<ul>
<li>透明通道</li>
<li>黑遮白显</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11293671/">【优设C4D基础篇】NO .10灯光基础</a></li>
<li><a href="https://www.bilibili.com/video/av9745362">【训练营教你玩转C4D】30分钟快速掌握尖刺特效</a></li>
</ul>
<h1 id="我的成果">我的成果</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_14_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8810%EF%BC%89%EF%BC%9A%E7%81%AF%E5%85%89%E5%9F%BA%E7%A1%80_%E5%B0%96%E5%88%BA%E6%95%88%E6%9E%9C.png" alt="尖刺效果.png" /><figcaption aria-hidden="true">尖刺效果.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（11）：摄像机基础</title>
    <url>/2019/02/14/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8811%EF%BC%89%EF%BC%9A%E6%91%84%E5%83%8F%E6%9C%BA%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>对象</li>
<li>物理</li>
<li>细节</li>
<li>合成</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289675/">【优设C4D基础篇】NO .11摄像机基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（12）：渲染基础</title>
    <url>/2019/02/15/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8812%EF%BC%89%EF%BC%9A%E6%B8%B2%E6%9F%93%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>三点打光</li>
<li>灯光设置</li>
<li>渲染设置</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289655/">【优设C4D基础篇】NO .12渲染基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（13）：材质基础-上</title>
    <url>/2019/02/15/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8813%EF%BC%89%EF%BC%9A%E6%9D%90%E8%B4%A8%E5%9F%BA%E7%A1%80-%E4%B8%8A/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>基础操作</li>
<li>颜色</li>
<li>漫射</li>
<li>发光</li>
<li>透明</li>
<li>Alpha</li>
<li>置换</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11324865/">【优设C4D基础篇】NO .13材质基础-上</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（14）：材质基础-下</title>
    <url>/2019/02/15/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8814%EF%BC%89%EF%BC%9A%E6%9D%90%E8%B4%A8%E5%9F%BA%E7%A1%80-%E4%B8%8B/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>反射</li>
<li>凹凸</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11387619/">【优设C4D基础篇】NO .14材质基础-下</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（15）：克隆基础</title>
    <url>/2019/02/15/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8815%EF%BC%89%EF%BC%9A%E5%85%8B%E9%9A%86%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11387710/">【优设C4D基础篇】NO .15克隆基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（16）：Low poly风格</title>
    <url>/2019/02/17/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8816%EF%BC%89%EF%BC%9ALow-poly%E9%A3%8E%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>所用工具
<ul>
<li>形状工具</li>
<li>平滑标签</li>
<li>扭曲工具
<ul>
<li>减面：三角</li>
<li>置换：凹凸</li>
</ul></li>
<li>示范
<ul>
<li>树木</li>
<li>石头</li>
<li>山峰</li>
<li>云朵</li>
</ul></li>
</ul></li>
<li>类型与渲染
<ul>
<li>形式
<ul>
<li>平台
<ul>
<li>笔刷</li>
<li>挤压</li>
</ul></li>
<li>球体
<ul>
<li>挤压</li>
</ul></li>
<li>岛屿
<ul>
<li>布尔</li>
</ul></li>
</ul></li>
<li>灯光&amp;材质
<ul>
<li>物理天空</li>
<li>灯光设置</li>
<li>材质球的设置</li>
</ul></li>
<li>渲染
<ul>
<li>全局光照</li>
<li>环境吸收</li>
</ul></li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av9294536">【训练营教你玩转C4D】快速教你实现Low poly风格-上</a></li>
<li><a href="https://www.bilibili.com/video/av9413317">【训练营教你玩转C4D】快速教你实现Low poly风格-下</a></li>
</ul>
<h1 id="我的作品">我的作品</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_17_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8816%EF%BC%89%EF%BC%9ALow-poly%E9%A3%8E%E6%A0%BC_%E5%B1%B1.png" alt="山.png" /><figcaption aria-hidden="true">山.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（17）：制作立体地球</title>
    <url>/2019/02/18/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8817%EF%BC%89%EF%BC%9A%E5%88%B6%E4%BD%9C%E7%AB%8B%E4%BD%93%E5%9C%B0%E7%90%83/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av14446418/">【训练营教你玩转C4D】13分钟制作立体地球</a></li>
</ul>
<h1 id="我的作品">我的作品</h1>
<div id="dplayer0" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_18_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8817%EF%BC%89%EF%BC%9A%E5%88%B6%E4%BD%9C%E7%AB%8B%E4%BD%93%E5%9C%B0%E7%90%83_%E5%9C%B0%E7%90%83.mp4"}});</script><!-- dplayer used1 -->
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（18）：随机效果</title>
    <url>/2019/02/18/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8818%EF%BC%89%EF%BC%9A%E9%9A%8F%E6%9C%BA%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11387679/">【优设C4D基础篇】NO .16随机效果器</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（19）：常用运动模块</title>
    <url>/2019/02/18/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8819%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E8%BF%90%E5%8A%A8%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>生成器
<ul>
<li>分裂
<ul>
<li>将多个部分组成的对象分裂开来
<ul>
<li>组合随机效果器使用</li>
</ul></li>
</ul></li>
<li>实例
<ul>
<li>产生残影效果、拖尾效果</li>
</ul></li>
<li>运动挤压
<ul>
<li>加强版的矩阵挤压
<ul>
<li>增加了动画模块</li>
</ul></li>
</ul></li>
<li>多边形FX
<ul>
<li>每个面分裂开来
<ul>
<li>配合随机使用</li>
</ul></li>
</ul></li>
</ul></li>
<li>效果器
<ul>
<li>简易
<ul>
<li>原始效果器——简单的动画效果</li>
</ul></li>
<li>延迟
<ul>
<li>模式
<ul>
<li>混合</li>
<li>弹簧</li>
</ul></li>
</ul></li>
<li>着色</li>
<li>声音</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11534616/">【优设C4D基础篇】NO .17常用运动模块</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（1）：软件与界面介绍</title>
    <url>/2019/02/09/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89%EF%BC%9A%E8%BD%AF%E4%BB%B6%E4%B8%8E%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="写在开头">写在开头</h1>
<p>这个系列的文章主要是对自己学习C4D的过程中知识与心得的简要记录，并不是教程向。自己学习C4D没有明确的目的，只是好玩，仅此而已。粗略构想笔记分为几个组成部分，知识点结构、教程视频链接、补充与思考（如果有）。</p>
<p>主要教程来自<a href="https://uiiiuiii.com/cinema4d/12121653.html">优设C4D基础教程</a>。</p>
<h1 id="知识结构图">知识结构图</h1>
<ul>
<li><p>C4D软件功能介绍</p>
<ul>
<li><p>运行相对比较快、稳定的三维建模软件</p></li>
<li><p>POLY（多边形建模）
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">综合体</span>
  </span></p></li>
<li><p>NUPBS（曲面建模）
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">综合体</span>
  </span></p></li>
</ul></li>
<li><p>界面介绍</p>
<ul>
<li>菜单栏
<ul>
<li>所有的工具</li>
</ul></li>
<li>常用工具栏</li>
<li>常用模式栏</li>
<li>工作视图
<ul>
<li>视图工具
<ul>
<li>视图移动</li>
<li>视图缩放</li>
<li>视图旋转</li>
<li>切换视图</li>
</ul></li>
</ul></li>
<li>对象管理器</li>
<li>属性管理器</li>
<li>内容管理器</li>
<li>时间轴</li>
<li>材质管理器</li>
<li>坐标管理器</li>
<li>状态栏</li>
</ul></li>
<li><p>布局</p>
<ul>
<li>图标文本显示（底部）</li>
<li>自定义面板</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11288581/">【优设C4D基础篇】NO .1软件与界面介绍</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（20）：刚体动力学原理</title>
    <url>/2019/02/18/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8820%EF%BC%89%EF%BC%9A%E5%88%9A%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>动力学
<ul>
<li>激发
<ul>
<li>在峰速</li>
<li>开启碰撞</li>
</ul></li>
<li>自定义初始速度
<ul>
<li>模拟物体的抛物线</li>
</ul></li>
</ul></li>
<li>碰撞
<ul>
<li>继承标签
<ul>
<li>无
<ul>
<li>一个组的没有碰撞</li>
</ul></li>
<li>应用标签到子集
<ul>
<li>单独个体</li>
</ul></li>
<li>复合碰撞外形
<ul>
<li>一个整体</li>
</ul></li>
</ul></li>
<li>独立元素
<ul>
<li>将有多个层级的对象，在运算时、以独立或整体的进行运算</li>
</ul></li>
<li>本体碰撞
<ul>
<li>保持对象互补交融</li>
</ul></li>
<li>外形
<ul>
<li>对象的碰撞范围</li>
</ul></li>
</ul></li>
<li>质量
<ul>
<li>自定义质量
<ul>
<li>真实物体的重量在下坠碰撞以后的实际反应</li>
</ul></li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11586280/">【优设C4D基础篇】NO .18刚体动力学原理</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（21）：柔体动力学原理</title>
    <url>/2019/02/18/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8821%EF%BC%89%EF%BC%9A%E6%9F%94%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>弹簧
<ul>
<li>构造</li>
<li>斜切</li>
<li>弯曲</li>
<li>静止长度</li>
</ul></li>
<li>保持外形
<ul>
<li>硬度
<ul>
<li>增加柔体对象的硬度</li>
</ul></li>
</ul></li>
<li>压力
<ul>
<li>模拟充气效果
<ul>
<li>枕头案例</li>
</ul></li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av12608828/">【优设C4D基础篇】NO .19柔体动力学</a></li>
</ul>
<h1 id="我的作品">我的作品</h1>
<div id="dplayer1" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_18_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8821%EF%BC%89%EF%BC%9A%E6%9F%94%E4%BD%93%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86_%E5%88%9A%E4%BD%93%E4%B8%8E%E6%9F%94%E4%BD%93.mp4"}});</script><!-- dplayer used1 -->
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（22）：布料动力学原理</title>
    <url>/2019/02/19/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8822%EF%BC%89%EF%BC%9A%E5%B8%83%E6%96%99%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>操作注意事项
<ul>
<li>布料对象一定要是一个多边形对象</li>
<li>布料细分</li>
</ul></li>
<li>标签
<ul>
<li>迭代
<ul>
<li>请注意，迭代也有一个效果，较高的值也会增加刚度（这可以让您模拟由先前版本中将刚度设置为大于100%的值而产生的效果）</li>
<li>该参数基本上控制了织物的整体弹性。在R11.5之前的C4D版本中，这是内部自动定义的（主要是基于对象细分和刚度设置），但是它呈现了几个缺点。新的化身允许单独的手动定义。请注意，渲染时间将随着定义值的增加而增加，接近0的值可能导致不稳定的布料计算，从而实际上可能会“爆炸”。</li>
</ul></li>
<li>硬度
<ul>
<li>这个参数控制布料物体的整体硬度。随着这个值增加，内部弹簧将对几何形状的点施加更多的控制，使布更加坚固。</li>
</ul></li>
<li>橡皮
<ul>
<li>控制布料物体拉伸的程度
<ul>
<li>默认值为0%将不允许布拉伸</li>
<li>100%的值将允许布被拉伸</li>
</ul></li>
</ul></li>
</ul></li>
<li>修整
<ul>
<li>固定点</li>
<li>初始状态</li>
</ul></li>
<li>影响
<ul>
<li>重力</li>
<li>风力
<ul>
<li>风力强度</li>
<li>风力方向</li>
<li>湍流强度</li>
<li>本体排斥</li>
</ul></li>
</ul></li>
<li>高级
<ul>
<li>本体碰撞</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av12608892/">【优设C4D基础篇】NO .20布料动力学</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（23）：毛发动力学原理</title>
    <url>/2019/02/19/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8823%EF%BC%89%EF%BC%9A%E6%AF%9B%E5%8F%91%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av12795127/">【优设C4D基础篇】NO .21 毛发动力学</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（24）：粒子动力学原理</title>
    <url>/2019/02/19/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8824%EF%BC%89%EF%BC%9A%E7%B2%92%E5%AD%90%E5%8A%A8%E5%8A%9B%E5%AD%A6%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>显示对象：将生成对象实时显示出来</li>
<li>生成比率：粒子产生的数量</li>
<li>可见：粒子实时显示的数量</li>
<li>投射
<ul>
<li>起点：粒子开始生成的帧数</li>
<li>终点：粒子停止生成的帧数</li>
</ul></li>
<li>种子：随机数</li>
<li>三大属性
<ul>
<li>生命：粒子消失的帧数</li>
<li>速度：粒子发射的速度</li>
<li>旋转：粒子旋转的角度</li>
<li>终点缩放：逐渐消亡时逐渐缩放</li>
</ul></li>
<li>渲染实例
<ul>
<li>当渲染数量巨大时，对内存进行优化，以实现更快的渲染</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av12794580/">【优设C4D基础篇】NO .22粒子动力学</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（25）：常用标签</title>
    <url>/2019/02/19/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8825%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av13032976/">【优设C4D基础篇】NO .23常用标签</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（26）：动画基础</title>
    <url>/2019/02/19/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8826%EF%BC%89%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av14979302/">【优设C4D基础篇】NO .24动画基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（2）：基础工具及管理器</title>
    <url>/2019/02/09/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%882%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>基础工具
<ul>
<li>选择
<ul>
<li>注意：仅选择可见元素</li>
</ul></li>
<li>移动
<ul>
<li>注意：对象轴心</li>
</ul></li>
<li>缩放
<ul>
<li>注意：对象轴心</li>
</ul></li>
<li>旋转
<ul>
<li>注意：对象轴心</li>
</ul></li>
</ul></li>
<li>管理器
<ul>
<li>对象管理器
<ul>
<li>可见状态
<ul>
<li>基本：编辑器和渲染器的可见与否</li>
<li>高级：拖动与按住<code>Alt</code>可实现不同功能的批量调整</li>
</ul></li>
<li>对象启用状态✅</li>
<li>重命名
<ul>
<li>基础：方向键批量处理</li>
<li>高级：工具-命名工具</li>
</ul></li>
<li>标签
<ul>
<li>在附加一些效果的时候，就是用标签</li>
</ul></li>
<li>群组
<ul>
<li><code>Alt+G</code></li>
</ul></li>
</ul></li>
<li>内容浏览器
<ul>
<li>调选C4D的预置</li>
</ul></li>
</ul></li>
</ul>
<h1 id="补充">补充</h1>
<ul>
<li><code>Alt+鼠标左键</code>：旋转视图</li>
<li><code>Alt+鼠标中键</code>：移动视图</li>
<li><code>Alt+鼠标右键</code>：缩放视图</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11288818/">【优设C4D基础篇】NO .2基础工具及管理器</a></li>
<li><a href="https://www.bilibili.com/video/av8980832">【训练营教你玩转C4D】十分钟学会制作发光球体</a></li>
</ul>
<h1 id="我的成果">我的成果</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_09_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%882%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%AE%A1%E7%90%86%E5%99%A8_%E5%8F%91%E5%85%89%E7%90%83%E4%BD%93.png" alt="发光球体.png" /><figcaption aria-hidden="true">发光球体.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（3）：对象与对象轴，对齐与独显</title>
    <url>/2019/02/09/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%883%EF%BC%89%EF%BC%9A%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%AF%B9%E8%B1%A1%E8%BD%B4%EF%BC%8C%E5%AF%B9%E9%BD%90%E4%B8%8E%E7%8B%AC%E6%98%BE/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>对象工具
<ul>
<li>参数对象
<ul>
<li>对象参数
<ul>
<li>可以调整对象的特殊参数</li>
<li>分段：越多越平滑，渲染越慢</li>
</ul></li>
</ul></li>
<li>多边形对象
<ul>
<li>选择模式
<ul>
<li>模型模式</li>
<li>点模式</li>
<li>线模式</li>
<li>面模式</li>
</ul></li>
</ul></li>
</ul></li>
<li>对象轴
<ul>
<li>调整多边形对象的对象轴位置，类似于对象轴的开关
<ul>
<li>关闭时：锁定</li>
<li>开启时：解锁</li>
</ul></li>
</ul></li>
<li>网格-重置轴心</li>
<li>工具-环绕对象-居中
<ul>
<li>对齐对象，首次使用要点击【应用】才能启动【实时更新】功能</li>
</ul></li>
<li>独显模式
<ul>
<li>当画面有多个对象，不方便编辑时，可通过独显单独显示某个对象或对象组</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11288975/">【优设C4D基础篇】NO .3对象与对象轴对齐与独显</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（4）：坐标与创建工具组</title>
    <url>/2019/02/11/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%884%EF%BC%89%EF%BC%9A%E5%9D%90%E6%A0%87%E4%B8%8E%E5%88%9B%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%BB%84/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>坐标管理器</li>
<li>创建工具
<ul>
<li>切刀</li>
<li>倒角</li>
<li>挤压</li>
<li>桥接：线模式</li>
<li>焊接：点模式</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11288951/">【优设C4D基础篇】NO .4坐标与创建工具组</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（5）：移动与捕捉工具</title>
    <url>/2019/02/12/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%885%EF%BC%89%EF%BC%9A%E7%A7%BB%E5%8A%A8%E4%B8%8E%E6%8D%95%E6%8D%89%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>移动工具
<ul>
<li>笔刷：基础塑形</li>
<li>熨烫：平滑画面</li>
<li>镜像：倒映对象</li>
<li>滑动：调节分段</li>
</ul></li>
<li>捕捉工具
<ul>
<li>点、线、面、样条、轴心</li>
<li>启动量化</li>
</ul></li>
<li>对象周线-建立模型：按住Alt</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11288917/">【优设C4D基础篇】NO .5移动与捕捉工具组</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（6）：样条与生成器</title>
    <url>/2019/02/12/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%886%EF%BC%89%EF%BC%9A%E6%A0%B7%E6%9D%A1%E4%B8%8E%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>样条
<ul>
<li>路径（与效果器结合使用，可以通过调整样条的插值来调整分段）</li>
<li>样条工具与自带样条样式</li>
<li>回车结束勾画</li>
<li>选择点层级可以调整锚点</li>
<li>Ctrl+移动工具可以增加锚点</li>
</ul></li>
<li>生成器
<ul>
<li>细分曲面</li>
<li>挤压
<ul>
<li>对一个子集起作用</li>
<li>勾上层级后，对所有子集起作用</li>
<li>封顶控制倒角</li>
</ul></li>
<li>旋转
<ul>
<li>与样条组合可以方便地做出一个瓶子</li>
<li>对象内的移动和比例两个参数可以做出螺旋状的物体</li>
</ul></li>
<li>放样
<ul>
<li>类似于Ai的混合</li>
</ul></li>
<li>扫描
<ul>
<li>可以做出管状物</li>
<li>扫描的对象，上面一个是形状，下面是路径</li>
<li>细节曲线可以调整缩放与旋转</li>
<li>样条可以增加分段数量，使扫描更光滑</li>
</ul></li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289292/">【优设C4D基础篇】NO .6样条与生成器</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（7）：造型器基础</title>
    <url>/2019/02/12/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%887%EF%BC%89%EF%BC%9A%E9%80%A0%E5%9E%8B%E5%99%A8%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>阵列
<ul>
<li>以圆形为路径复制多个对象</li>
<li>半径控制圆心的大小</li>
<li>副本控制对象的个数</li>
<li>振幅控制对象错落的距离</li>
<li>频率控制起伏的速度</li>
<li>阵列频率控制错落起伏的数量</li>
</ul></li>
<li>晶格
<ul>
<li>能做出类似于分子的对象</li>
<li>把线变成圆柱，把点变成圆形</li>
</ul></li>
<li>布尔
<ul>
<li>类似于PS的布尔运算</li>
<li>隐藏新的边可以让布线更加好看</li>
</ul></li>
<li>样条布尔
<ul>
<li>样条之间的布尔运算</li>
</ul></li>
<li>连接
<ul>
<li>把两个对象连接在一起</li>
</ul></li>
<li>融球
<ul>
<li>可以让多个对象像水一样融合在一起</li>
<li>外壳数值控制物体之间的疏密，越大越稀疏</li>
<li>编辑器细分是控制渲染活动窗口的</li>
<li>渲染器细分才是控制渲染输出效果的</li>
</ul></li>
<li>对称
<ul>
<li>制作对称物体时，制作好一半，用对称将其形成另一半</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289296/">【优设C4D基础篇】NO .7造型器基础</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（8）：变形工具</title>
    <url>/2019/02/12/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%888%EF%BC%89%EF%BC%9A%E5%8F%98%E5%BD%A2%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>层级
<ul>
<li>模型的子层级</li>
<li>模型的同层级</li>
</ul></li>
<li>效果可以叠加
<ul>
<li>注意顺序</li>
</ul></li>
<li>常用变形工具
<ul>
<li>扭曲</li>
<li>膨胀</li>
<li>锥化</li>
<li>螺旋</li>
<li>FFD</li>
<li>溶解</li>
<li>爆炸</li>
<li>破碎</li>
<li>爆炸FX</li>
<li>置换</li>
<li>减面</li>
<li>样条约束</li>
</ul></li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289498/">【优设C4D基础篇】NO .8变形工具</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>C4D学习笔记（9）：场景工具</title>
    <url>/2019/02/12/C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%889%EF%BC%89%EF%BC%9A%E5%9C%BA%E6%99%AF%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="知识结构图">知识结构图</h1>
<ul>
<li>地面
<ul>
<li>无限延伸</li>
</ul></li>
<li>天空</li>
<li>环境
<ul>
<li>雾的效果</li>
</ul></li>
<li>背景、前景</li>
<li>物理天空
<ul>
<li>载入天空预置</li>
<li>绘制云</li>
</ul></li>
<li>生长草坪</li>
</ul>
<h1 id="视频链接">视频链接</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av11289601/">【优设C4D基础篇】NO .9场景工具</a></li>
</ul>
]]></content>
      <tags>
        <tag>C4D</tag>
      </tags>
  </entry>
  <entry>
    <title>Golang程序接收终止信号的方式</title>
    <url>/2021/04/23/Golang%E7%A8%8B%E5%BA%8F%E6%8E%A5%E6%94%B6%E7%BB%88%E6%AD%A2%E4%BF%A1%E5%8F%B7%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="使用signal.notify">使用signal.Notify</h2>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    sigs <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span>
    
    <span class="token comment">// signal.Notify(sigs, os.Interrupt)</span>
    signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">)</span>
    
    sig <span class="token operator">:=</span> <span class="token operator">&lt;-</span>sigs
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>sig<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用signal.notifycontext">使用signal.NotifyContext</h2>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> signal<span class="token punctuation">.</span><span class="token function">NotifyContext</span><span class="token punctuation">(</span>
        context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        os<span class="token punctuation">.</span>Interrupt<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">&lt;-</span>ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用signal.notify配合context">使用signal.Notify配合Context</h2>
<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithCancel</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    sigs <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span>
    signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> os<span class="token punctuation">.</span>Interrupt<span class="token punctuation">)</span>
    
    <span class="token operator">&lt;-</span>sigs
    <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.flysnow.org/2017/05/12/go-in-action-go-context.html#context%E6%8E%A7%E5%88%B6%E5%A4%9A%E4%B8%AAgoroutine">Go语言实战笔记（二十）| Go Context | 飞雪无情的博客</a></li>
<li><a href="https://segmentfault.com/a/1190000039800720">使用 Go 1.16 的 signal.NotifyContext 让你的服务重启更优雅 - SegmentFault 思否</a></li>
<li><a href="https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-context/">Go 语言并发编程与 Context | Go 语言设计与实现</a></li>
<li><a href="https://juejin.cn/post/6844903598216871943">在Golang中各种永远阻塞的姿势</a></li>
<li><a href="https://gobyexample-cn.github.io/signals">Go by Example 中文版: 信号</a></li>
</ul>
]]></content>
      <tags>
        <tag>Golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo主题Alpha Dust</title>
    <url>/2019/07/11/Hexo%E4%B8%BB%E9%A2%98Alpha-Dust/</url>
    <content><![CDATA[<p>最近浏览博客的时候发现了一个很有科技感的博客，拉到网页底部一看还是一个Hexo的博客，于是我搜索了一下这个博客网站的主题，也就是这篇文章要介绍的Hexo主题：Alpha Dust。</p>
<h1 id="作者">作者</h1>
<p>这个主题的作者名叫Jonathan Klughertz，是一个全栈工程师。除了Alpha Dust以外，他还制作了很多Hexo的主题，这都可以在他的博客上找到。（<a href="http://www.codeblocq.com">点此访问Jonathan的博客</a>）</p>
<h1 id="主题概览">主题概览</h1>
<p>这个主题的博客介绍和Github项目链接下面给出：</p>
<ul>
<li>博客：<a href="http://www.codeblocq.com/2016/07/New-Hexo-Theme-Alpha-Dust/">New Hexo Theme Alpha Dust - CodeBlocQ</a></li>
<li>Github：<a href="https://github.com/klugjo/hexo-theme-alpha-dust">klugjo/hexo-theme-alpha-dust: 🌠 Original Futuristic Hexo Theme</a></li>
</ul>
<p>网站的demo可以访问下面的链接：</p>
<ul>
<li><a href="http://www.codeblocq.com/assets/projects/hexo-theme-alpha-dust/">Alpha Dust</a></li>
</ul>
<p>这是截图，可以感受一下：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_Alpha%20Dust.jpg" alt="Alpha Dust.jpg" /><figcaption aria-hidden="true">Alpha Dust.jpg</figcaption>
</figure>
<h1 id="安装">安装</h1>
<p>和安装NexT时候类似，都是直接把Github上的项目克隆到本地。</p>
<p>在博客根目录下执行下面的指令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/klugjo/hexo-theme-alpha-dust themes/alpha-dust<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后更新<strong>站点配置文件</strong><code>_config.yml</code>来将主题设为Alpha Dust。如下所示：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span>
<span class="token comment">## Plugins: https://hexo.io/plugins/</span>
<span class="token comment">## Themes: https://hexo.io/themes/</span>
<span class="token comment"># theme: next</span>
<span class="token key atrule">theme</span><span class="token punctuation">:</span> alpha<span class="token punctuation">-</span>dust<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>重新部署一下博客，就能看到这个新的主题了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="我的博客显示效果.png" /><figcaption aria-hidden="true">我的博客显示效果.png</figcaption>
</figure>
<h1 id="常用配置">常用配置</h1>
<p>配置也是和其它主题一样靠编辑<strong>主题配置文件</strong><code>themes/alpha-dust/_config.yml</code>实现。</p>
<h2 id="menu">Menu</h2>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Header</span>
<span class="token key atrule">menu</span><span class="token punctuation">:</span>
  <span class="token key atrule">Home</span><span class="token punctuation">:</span> /
  <span class="token key atrule">Archives</span><span class="token punctuation">:</span> /archives
  <span class="token comment"># About: /about.html</span>
  <span class="token key atrule">Tags</span><span class="token punctuation">:</span> /tags
  <span class="token key atrule">Categories</span><span class="token punctuation">:</span> /categories
  <span class="token comment"># Contact: /contact.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以用来控制菜单栏的显示内容，key是label，value是网页的路径。比如说像上面的代码一样注释掉一些不需要的菜单，博客的效果会变成这样：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_menu.png" alt="menu.png" /><figcaption aria-hidden="true">menu.png</figcaption>
</figure>
<h2 id="logo">Logo</h2>
<p>上图中博客标题上的logo实际上是<a href="https://fontawesome.com/icons?from=io">Font Awesome class</a>字体，任何合法的字体都可以来替换默认的logo，只要更改下面的片段，比如我随便在Font Awesome网站上选一个：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Logo (Font Awesome Class)</span>
<span class="token comment"># fa_logo: fa-cube</span>
<span class="token key atrule">fa_logo</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>eye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>网页的logo就换成了下面的样子：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_logo.png" alt="logo.png" /><figcaption aria-hidden="true">logo.png</figcaption>
</figure>
<h2 id="页脚">页脚</h2>
<p>页脚的关于和版权部分的文字可以通过下面的片段来编辑：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Footer About Text</span>
<span class="token key atrule">footer_about</span><span class="token punctuation">:</span> <span class="token string">"This theme was developed by &lt;a href=\"https://github.com/klugjo\">Jonathan Klughertz&lt;/a>. The source code is available on Github. Create Websites. Make Magic."</span>

<span class="token comment"># Footer Copyright Line</span>
<span class="token key atrule">footer_copyright</span><span class="token punctuation">:</span> <span class="token string">"@Untitled. All right reserved | Design &amp; Hexo &lt;a href=\"http://www.codeblocq.com/\">Jonathan Klughertz&lt;/a>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对应的是页脚About部分的显示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_footer.png" alt="footer.png" /><figcaption aria-hidden="true">footer.png</figcaption>
</figure>
<h2 id="社交账户图标">社交账户图标</h2>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Social Accounts</span>
<span class="token key atrule">twitter_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//twitter.com/<span class="token punctuation">?</span>lang=en
<span class="token key atrule">facebook_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.facebook.com/
<span class="token key atrule">instagram_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.instagram.com/
<span class="token key atrule">dribble_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//dribbble.com/
<span class="token key atrule">github_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/klugjo/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>alpha<span class="token punctuation">-</span>dust
<span class="token key atrule">googleplus_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//plus.google.com/
<span class="token key atrule">behance_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.behance.net/
<span class="token key atrule">fivehundredpx_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//500px.com/
<span class="token key atrule">email_url</span><span class="token punctuation">:</span> test@example.com
<span class="token key atrule">rss_url</span><span class="token punctuation">:</span> \<span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这会更改同样在页脚的社交图标的显示和链接，如果没有链接就不显示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_Hexo%E4%B8%BB%E9%A2%98Alpha-Dust_social%20account.png" alt="social account.png" /><figcaption aria-hidden="true">social account.png</figcaption>
</figure>
<h1 id="评价">评价</h1>
<p>由于这是个人作品，从主题配置文件就可以看得出功能偏少，另外，网页的排版还不够灵活，比如全屏网页时文章左右没有留白，这样看起来不是很舒服，还有首页上的文章都是全文显示，不方便浏览，代码框没有复制按钮等等，就高级功能来说，NexT还是更胜一筹，所以玩了之后，我还是打算换回NexT。如果需要实现这些功能需要自己进一步改进主题，目前自己暂时没有这个能力。不过这个主题还是很好看的，期待作者后续能够给主题加入更多功能。</p>
<h1 id="相关网站">相关网站</h1>
<ul>
<li><a href="https://mlln.cn/">DataScience</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Alpha Dust</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo黑科技：你看不清了</title>
    <url>/2019/01/08/Hexo%E9%BB%91%E7%A7%91%E6%8A%80%EF%BC%9A%E4%BD%A0%E7%9C%8B%E4%B8%8D%E6%B8%85%E4%BA%86/</url>
    <content><![CDATA[<p>偶然在一个博客发现Hexo的黑科技，据说你
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">撸多了</span>
  </span>会视物模糊？</p>
<h1 id="怎么做到的">怎么做到的？</h1>
<p>实际上这是Hexo的一个有趣的插件实现的。模糊的文字点击即可查看，再次点击则又会模糊。首先来安装插件。</p>
<h2 id="安装">安装</h2>
<p>在博客目录下输入</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">yarn</span> <span class="token function">add</span> hexo-spoiler<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> hexo-spoiler --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>完成安装。</p>
<h2 id="使用">使用</h2>
<p>在你写博客的时候，如果想马赛克某段文字，你可以这么使用。</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;% spoiler 没错，你眼睛花了。 %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>效果嘛就是这样的：</p>

  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">没错，你眼睛花了。</span>
  </span>
<h1 id="什么地方可以用">什么地方可以用</h1>
<ul>
<li><p>正常文本：
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></p></li>
<li><p>带格式的文本：</p>
<ul>
<li><p>斜体：<em>
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></em></p></li>
<li><p>粗体：<strong>
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></strong></p></li>
<li><p>下标：<sub>
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></sub></p></li>
<li><p>删除线：<del>
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></del></p></li>
<li><p>下划线：<u>
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span></u></p></li>
<li><p>行内代码：<code>&#123;% spoiler 可以遮蔽 %&#125;</code></p></li>
<li><p>超链接：<a href="https://www.baidu.com">
  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽，不过点我会被驱逐至百度</span>
  </span></a></p></li>
<li><p>引用：</p>
<blockquote>

  <span class="spoiler" onclick="this.classList.toggle('spoiler')">
    <span class="spoiler-blur ">可以遮蔽</span>
  </span>
</blockquote></li>
</ul></li>
</ul>
<p>带格式的文本需要把格式符放在外面，像这样：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span><span class="token content">&#123;% spoiler 把粗体格式的符号放在外面 %&#125;</span><span class="token punctuation">**</span></span>
<span class="token url">[<span class="token content">&#123;% spoiler 把超链接的符号放在外面 %&#125;</span>](<span class="token url">https://www.baidu.com</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>不知道是不是markdown渲染引擎的缘故，如果格式符放在里面是没有格式效果的。另外，行内公式还无法使用马赛克。</p>
<p>就是这么简单~目前除了好玩之外也想不到有什么用处了，也许以后可以在出问题的时候把答案遮住？嗯，似乎是个不错的主意。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="http://blog.caoxl.com/2018/08/02/Hexo-Black-Screen/">hexo 黑科技 | Caoxl’s Blog</a></li>
<li><a href="https://unnamed42.github.io/2016-06-25-hexo-spoiler%E6%8F%92%E4%BB%B6.html">hexo spoiler插件 - BUG研发中心</a></li>
<li><a href="https://github.com/unnamed42/hexo-spoiler">GitHub - unnamed42/hexo-spoiler: A spoiler tag for Hexo</a></li>
</ul>
<p>另外还有两个类似的插件也很有趣，不过我自己没有尝试过。</p>
<ul>
<li><a href="https://github.com/MaoKwen/hexo-black-cover">GitHub - MaoKwen/hexo-black-cover: Black cover of text tag for Hexo</a></li>
<li><a href="https://github.com/JamesPan/hexo-ruby-character">GitHub - jamespan/hexo-ruby-character: Ruby character tag for Hexo</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX数学公式符号备忘</title>
    <url>/2019/11/01/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E7%AC%A6%E5%8F%B7%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<p>这里收录一些常用的数学公式和符号的<span class="math inline">\(\LaTeX\)</span>表示，需要的一些新的符号也会继续更新。</p>
<h1 id="字体">字体</h1>
<ul>
<li><p>数学斜体（math italic）</p>
<p>变量的默认字体。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mit{0123456789}\\
\mit{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mit{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>罗马体（roman）</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathrm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathrm{0123456789}\\
\mathrm{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathrm{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>意大利体（italic）</p>
<p>比数学斜体稍微窄一些。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathit{0123456789}\\
\mathit{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathit{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>书法体（calligraphic）</p>
<p>有时候用大写字母来表示一些集合。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathcal</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathcal{0123456789}\\
\mathcal{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathcal{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>粗体（boldface）</p>
<p>小写字母常用来表示向量。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathbf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathbf{0123456789}\\
\mathbf{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathbf{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>黑板粗体（blackboard bold）</p>
<p>有时用来代表一些特殊的集合，比如实数集<span class="math inline">\(\mathbb R\)</span>。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathbb</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathbb{0123456789}\\
\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathbb{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>哥特体（fraktur）</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathfrak</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathfrak{0123456789}\\
\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathfrak{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>无衬线体（sans-serif）</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathsf</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathsf{0123456789}\\
\mathsf{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathsf{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>打字机体（typewriter）</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathtt</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathtt{0123456789}\\
\mathtt{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathtt{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
<li><p>手写体（script）</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\mathscr</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\mathscr{0123456789}\\
\mathscr{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\
\mathscr{abcdefghijklmnopqrstuvwxyz}\\
\]</span></p></li>
</ul>
<h1 id="希腊字母">希腊字母</h1>
<div class="note info"><p>需要注意的是，那些对应了大写英文字母的大写希腊字母是没有办法用名称打出来的，比如<span class="math inline">\(\Alpha\)</span>，对于这些字母，可以用罗马体的英文字母代替。</p>
</div>
<table>
<thead>
<tr class="header">
<th>LaTeX语法</th>
<th>显示</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>\mathrm A \alpha</td>
<td><span class="math inline">\(\mathrm A\ \alpha\)</span></td>
</tr>
<tr class="even">
<td>\mathrm B \beta</td>
<td><span class="math inline">\(\mathrm B\ \beta\)</span></td>
</tr>
<tr class="odd">
<td>\Gamma \gamma</td>
<td><span class="math inline">\(\Gamma\ \gamma\)</span></td>
</tr>
<tr class="even">
<td>\Delta \delta</td>
<td><span class="math inline">\(\Delta\ \delta\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm E \epsilon</td>
<td><span class="math inline">\(\mathrm E\ \epsilon\)</span></td>
</tr>
<tr class="even">
<td>\mathrm Z \zeta</td>
<td><span class="math inline">\(\mathrm Z\ \zeta\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm H \eta</td>
<td><span class="math inline">\(\mathrm H\ \eta\)</span></td>
</tr>
<tr class="even">
<td>\Theta \theta \vartheta</td>
<td><span class="math inline">\(\Theta\ \theta\ \vartheta\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm I \iota</td>
<td><span class="math inline">\(\mathrm I\ \iota\)</span></td>
</tr>
<tr class="even">
<td>\mathrm K \kappa \varkappa</td>
<td><span class="math inline">\(\mathrm K\ \kappa\ \varkappa\)</span></td>
</tr>
<tr class="odd">
<td>\Lambda \lambda</td>
<td><span class="math inline">\(\Lambda\ \lambda\)</span></td>
</tr>
<tr class="even">
<td>\mathrm M \mu</td>
<td><span class="math inline">\(\mathrm M\ \mu\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm N \nu</td>
<td><span class="math inline">\(\mathrm N\ \nu\)</span></td>
</tr>
<tr class="even">
<td>\Xi \xi</td>
<td><span class="math inline">\(\Xi\ \xi\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm O \omicron</td>
<td><span class="math inline">\(\mathrm O\ \omicron\)</span></td>
</tr>
<tr class="even">
<td>\Pi \pi \varpi</td>
<td><span class="math inline">\(\Pi\ \pi\)</span> <span class="math inline">\(\varpi\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm P \rho \varrho</td>
<td><span class="math inline">\(\mathrm P\ \rho\ \varrho\)</span></td>
</tr>
<tr class="even">
<td>\Sigma \sigma \varsigma</td>
<td><span class="math inline">\(\Sigma\ \sigma\)</span> <span class="math inline">\(\varsigma\)</span></td>
</tr>
<tr class="odd">
<td>\mathrm T \tau</td>
<td><span class="math inline">\(\mathrm T\ \tau\)</span></td>
</tr>
<tr class="even">
<td>\Upsilon \upsilon</td>
<td><span class="math inline">\(\Upsilon\ \upsilon\)</span></td>
</tr>
<tr class="odd">
<td>\Phi \phi \varphi</td>
<td><span class="math inline">\(\Phi\ \phi\ \varphi\)</span></td>
</tr>
<tr class="even">
<td>\mathrm X \chi</td>
<td><span class="math inline">\(\mathrm X\ \chi\)</span></td>
</tr>
<tr class="odd">
<td>\Psi \psi</td>
<td><span class="math inline">\(\Psi\ \psi\)</span></td>
</tr>
<tr class="even">
<td>\Omega \omega</td>
<td><span class="math inline">\(\Omega\ \omega\)</span></td>
</tr>
</tbody>
</table>
<h1 id="上下标">上下标</h1>
<table>
<colgroup>
<col style="width: 48%" />
<col style="width: 51%" />
</colgroup>
<thead>
<tr class="header">
<th>LaTeX语法</th>
<th>显示</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>{}^a_b\!x^c_d</td>
<td><span class="math inline">\({}^a_b\!x^c_d\)</span></td>
</tr>
<tr class="even">
<td>\bar{a}</td>
<td><span class="math inline">\(\bar{a}\)</span></td>
</tr>
<tr class="odd">
<td>\acute{a}</td>
<td><span class="math inline">\(\acute{a}\)</span></td>
</tr>
<tr class="even">
<td>\check{a}</td>
<td><span class="math inline">\(\check{a}\)</span></td>
</tr>
<tr class="odd">
<td>\grave{a}</td>
<td><span class="math inline">\(\grave{a}\)</span></td>
</tr>
<tr class="even">
<td>\dot{a} \ddot{a} \dddot{a} \ddddot{a}</td>
<td><span class="math inline">\(\dot{a}\)</span> <span class="math inline">\(\ddot{a}\)</span> <span class="math inline">\(\dddot{a}\)</span> <span class="math inline">\(\ddddot{a}\)</span></td>
</tr>
<tr class="odd">
<td>\hat{a}</td>
<td><span class="math inline">\(\hat{a}\)</span></td>
</tr>
<tr class="even">
<td>\breve{a}</td>
<td><span class="math inline">\(\breve{a}\)</span></td>
</tr>
<tr class="odd">
<td>\tilde{a}</td>
<td><span class="math inline">\(\tilde{a}\)</span></td>
</tr>
<tr class="even">
<td>a' a'' a''' …</td>
<td><span class="math inline">\(a&#39;\)</span> <span class="math inline">\(a&#39;&#39;\)</span> <span class="math inline">\(a&#39;&#39;&#39;\dots\)</span></td>
</tr>
<tr class="odd">
<td>\vec{a}</td>
<td><span class="math inline">\(\vec{a}\)</span></td>
</tr>
<tr class="even">
<td>\not{a}</td>
<td><span class="math inline">\(\not{a}\)</span></td>
</tr>
<tr class="odd">
<td>\mathring{a}</td>
<td><span class="math inline">\(\mathring{a}\)</span></td>
</tr>
<tr class="even">
<td>\overline{abc}</td>
<td><span class="math inline">\(\overline{abc}\)</span></td>
</tr>
<tr class="odd">
<td>\widehat{abc}</td>
<td><span class="math inline">\(\widehat{abc}\)</span></td>
</tr>
<tr class="even">
<td>\widetilde{abc}</td>
<td><span class="math inline">\(\widetilde{abc}\)</span></td>
</tr>
<tr class="odd">
<td>\overleftarrow{abc} \overrightarrow{abc}</td>
<td><span class="math inline">\(\overleftarrow{abc}\)</span> <span class="math inline">\(\overrightarrow{abc}\)</span></td>
</tr>
<tr class="even">
<td>\overbrace{abc}</td>
<td><span class="math inline">\(\overbrace{abc}\)</span></td>
</tr>
<tr class="odd">
<td>\overset{ti\bar an}{兲}</td>
<td><span class="math inline">\(\overset{ti\bar an}{兲}\)</span></td>
</tr>
<tr class="even">
<td>\underline{abc}</td>
<td><span class="math inline">\(\underline{abc}\)</span></td>
</tr>
<tr class="odd">
<td>\underbrace{abc}</td>
<td><span class="math inline">\(\underbrace{abc}\)</span></td>
</tr>
</tbody>
</table>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://my.oschina.net/davelet/blog/1831306">LaTeX 各种写法 - WeiXiaodong的个人空间 - OSCHINA</a></li>
<li><a href="https://zh.wikibooks.org/zh-cn/LaTeX/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">LaTeX/数学公式 - 维基教科书，自由的教学读本</a></li>
<li><a href="http://aming.xyz/2019/05/27/latex/">mathjax latex简介 | 阿明</a></li>
<li><a href="http://appblog.cn/2019/02/11/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Mathjax%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%94%AF%E6%8C%81/">给Hexo博客添加Mathjax数学公式支持 | APP开发技术博客</a></li>
<li><a href="https://www.jianshu.com/p/03b2fc9ac4f4">markdown MathJax - 介绍 - 简书</a></li>
<li><a href="https://oysz2016.github.io/post/8611e6fb.html">数学公式语法——Mathjax教程 | 冲弱's Blog</a></li>
<li><a href="https://artofproblemsolving.com/wiki/index.php/LaTeX:Symbols">Art of Problem Solving</a></li>
</ul>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Listary Pro 注册码</title>
    <url>/2020/11/08/Listary-Pro-%E6%B3%A8%E5%86%8C%E7%A0%81/</url>
    <content><![CDATA[<p>Name:</p>
<pre class="line-numbers language-none"><code class="language-none">Mike Rountree<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Email:</p>
<pre class="line-numbers language-none"><code class="language-none">soft@instant-demo.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Activation key:</p>
<pre class="line-numbers language-none"><code class="language-none">JE4V8T3M96PWT4SUCNZNVZ37XKLBU2QW
N64LEJQ3VHY7MPL6KY2R5SQZ76QFFTKP
VVE8JBVEAME8MMBRHRGF2P6MAJG7ZSQY
MUY2PGTQ2EG3W2YHTU2CFWL7SE6THU3Q
TAL3U894S2BWA9629EFCXYYYG3S65WEQ
5R234G26AT52UWD27PNENP4GR2EKKDK6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <tags>
        <tag>Listary</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB使用入门</title>
    <url>/2021/03/20/MATLAB%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="matlab工具箱">MATLAB工具箱</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_03_20_MATLAB%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8_MATLAB%E5%B7%A5%E5%85%B7%E7%AE%B1.png" alt="MATLAB工具箱.png" /><figcaption aria-hidden="true">MATLAB工具箱.png</figcaption>
</figure>
<p>工具箱内容位于APP菜单栏内。</p>
<h1 id="matlab数值变量">MATLAB数值变量</h1>
<h2 id="数值变量">数值变量</h2>
<p>MATLAB各种数据类型都以矩阵的形式存在，矩阵是MATLAB最基本的数据对象，并且矩阵的运算都是定义在复数域上的。</p>
<h2 id="数值类型">数值类型</h2>
<ul>
<li>有符号整型：int8、int16、int32、int64</li>
<li>无符号整型：uint8、uint16、uint32、uint64</li>
<li>单精度浮点型：single</li>
<li>双精度浮点型：double</li>
</ul>
<p>系统默认的数值类型是double，所以使用double时可以省略double符号。</p>
<h2 id="系统格式设置">系统格式设置</h2>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">format style<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>format的style参数</p>
<table>
<colgroup>
<col style="width: 14%" />
<col style="width: 63%" />
<col style="width: 22%" />
</colgroup>
<thead>
<tr class="header">
<th>style</th>
<th>结果</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>short(default)</td>
<td>固定十进制短格式，小数点后包含4位数。</td>
<td>3.1416</td>
</tr>
<tr class="even">
<td>long</td>
<td>长固定小数格式，double值的小数点后包含15位数，single值的小数点后包含7位数。</td>
<td>3.141592653589793</td>
</tr>
<tr class="odd">
<td>shortE</td>
<td>短科学计数法，小数点后包含4位数。</td>
<td>3.1416e+00</td>
</tr>
<tr class="even">
<td>longE</td>
<td>长科学计数法，double值的小数点后包含15位数，single值的小数点后包含7位数。</td>
<td>3.141592653589793e+00</td>
</tr>
<tr class="odd">
<td>shortG</td>
<td>短固定小数格式或科学计数法（取更紧凑的一个），总共5位。</td>
<td>3.1416</td>
</tr>
<tr class="even">
<td>longG</td>
<td>长固定小数格式或科学计数法（取更紧凑的一个），对于double值，总共15位；对于single值，总共7位。</td>
<td>3.14159265358979</td>
</tr>
<tr class="odd">
<td>shortEng</td>
<td>短工程计数法，包含5位有效位数，指数为3的倍数。</td>
<td>3.1416e+000</td>
</tr>
<tr class="even">
<td>longEng</td>
<td>长工程计数法，包含15位有效位数，指数为3的倍数。</td>
<td>3.14159265358979e+000</td>
</tr>
<tr class="odd">
<td>+</td>
<td>正/负格式，对正、负和零元分别显示+、-和空白字符</td>
<td>+</td>
</tr>
<tr class="even">
<td>bank</td>
<td>货币格式，小数点后包含2位数。</td>
<td>3.14</td>
</tr>
<tr class="odd">
<td>hex</td>
<td>二进制双精度数字的十六进制表示形式。</td>
<td>400921fb54442d18</td>
</tr>
<tr class="even">
<td>rat</td>
<td>小整数的比率。</td>
<td>355/113</td>
</tr>
<tr class="odd">
<td>compact</td>
<td>设置压缩模式，即隐藏过多的空白行以便在一个屏幕上显示更多输出</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="数值的记述">数值的记述</h2>
<p>MATLAB的数只采用习惯的十进制表示，可以带小数点和负号；缺省的数据类型为double。</p>
<p>例如：3、-10、0.001、1.3e10、1.256e-6。</p>
<h2 id="变量命名规则">变量命名规则</h2>
<ul>
<li>变量名、函数名对字母的大小写敏感。</li>
<li><strong>变量名的第一个符号必须是英文字母。</strong></li>
<li>变量名可以包含英文字母、下划线和数字。</li>
<li>变量名不能包含空格、标点。</li>
<li>变量名最多可包含63个字符。</li>
</ul>
<h2 id="预定义的变量">预定义的变量</h2>
<table>
<thead>
<tr class="header">
<th>变量名</th>
<th>意义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ans</td>
<td>最近的计算结果的变量名</td>
</tr>
<tr class="even">
<td>eps</td>
<td>浮点相对精度<span class="math inline">\(\varepsilon=2^{52}\)</span></td>
</tr>
<tr class="odd">
<td>pi</td>
<td>圆周率<span class="math inline">\(\pi\)</span></td>
</tr>
<tr class="even">
<td>inf</td>
<td><span class="math inline">\(\infty\)</span>，无限大</td>
</tr>
<tr class="odd">
<td>i或j</td>
<td>虚数单元，<span class="math inline">\(\sqrt{-1}\)</span></td>
</tr>
<tr class="even">
<td>NaN</td>
<td>非数字，0/0、<span class="math inline">\(\infty/\infty\)</span></td>
</tr>
<tr class="odd">
<td>realmin</td>
<td>最小浮点数<span class="math inline">\(2^{-1022}\)</span></td>
</tr>
<tr class="even">
<td>realmax</td>
<td>最大浮点数<span class="math inline">\((2-\varepsilon)^{1023}\)</span></td>
</tr>
</tbody>
</table>
<p>这些变量在MATLAB启动时产生。用户只能临时覆盖这些值，clear或重启MATLAB可以恢复其值。</p>
<h2 id="运算符和表达式">运算符和表达式</h2>
<table>
<thead>
<tr class="header">
<th>运算</th>
<th>数学表达式</th>
<th>MATLAB运算符</th>
<th>MATLAB表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>加</td>
<td>a+b</td>
<td>+</td>
<td>a+b</td>
</tr>
<tr class="even">
<td>减</td>
<td>a-b</td>
<td>-</td>
<td>a-b</td>
</tr>
<tr class="odd">
<td>乘</td>
<td>a×b</td>
<td>*</td>
<td>a*b</td>
</tr>
<tr class="even">
<td>除</td>
<td>a/b或a /或\</td>
<td>a/b或a</td>
<td></td>
</tr>
<tr class="odd">
<td>幂</td>
<td><span class="math inline">\(a^b\)</span></td>
<td>^</td>
<td>a^b</td>
</tr>
</tbody>
</table>
<p>/和“左除”和“右除”。对标量没有区别。对矩阵而言<span class="math inline">\(A/B=AB^{-1}\)</span>，<span class="math inline">\(A\backslash B=A^{-1}B\)</span>。</p>
<h2 id="常用标点符号">常用标点符号</h2>
<table>
<thead>
<tr class="header">
<th>名称</th>
<th>标点</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>空格</td>
<td></td>
<td>分隔输入量；分隔数组元素</td>
</tr>
<tr class="even">
<td>逗号</td>
<td>,</td>
<td>作为要显示结果的指令的末尾；分隔输入量；分隔数组元素</td>
</tr>
<tr class="odd">
<td>黑点</td>
<td>.</td>
<td>小数点</td>
</tr>
<tr class="even">
<td>分号</td>
<td>;</td>
<td>命令结束；作为不显示结果的指令的结尾；分隔数组中的行</td>
</tr>
<tr class="odd">
<td>冒号</td>
<td>:</td>
<td>用作生成一维数组；用作下标时表示该堆上的所有元素</td>
</tr>
<tr class="even">
<td>注释号</td>
<td>%</td>
<td>其后内容为注释内容</td>
</tr>
<tr class="odd">
<td>单引号</td>
<td>' '</td>
<td>其内容为字符串</td>
</tr>
<tr class="even">
<td>圆括号</td>
<td>()</td>
<td>用作数组标识；表示函数输入向量列表时用</td>
</tr>
<tr class="odd">
<td>方括号</td>
<td>[]</td>
<td>输入数组时用；表示函数输出向量列表时用</td>
</tr>
<tr class="even">
<td>花括号</td>
<td>{}</td>
<td>用作元胞数组标识</td>
</tr>
<tr class="odd">
<td>下划线</td>
<td>_</td>
<td>用在变量、函数或文件名中</td>
</tr>
<tr class="even">
<td>续行号</td>
<td>...</td>
<td>将长指令分成两行输入，保持两行的逻辑连续</td>
</tr>
</tbody>
</table>
<p>标点符号必须在英文状态下输入。</p>
<h3 id="冒号的作用">冒号的作用</h3>
<ul>
<li><p>用于生成等间隔的向量，默认间隔为1。例如</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span>
A <span class="token operator">=</span>
     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>

<span class="token operator">></span><span class="token operator">></span> B<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0.5</span><span class="token operator">:</span><span class="token number">3</span>
B <span class="token operator">=</span>
    <span class="token number">1.0000</span>    <span class="token number">1.5000</span>    <span class="token number">2.0000</span>    <span class="token number">2.5000</span>    <span class="token number">3.0000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>用于选出矩阵指定行、列及元素。例如</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A<span class="token operator">=</span><span class="token function">B</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>表示选出B的第i行元素。</p></li>
<li><p>循环语句。例如</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="复数及其运算">复数及其运算</h2>
<p>MATLAB中复数的表达：z=a+bi，其中a、b为实数。例如</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> z1<span class="token operator">=</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4i</span><span class="token punctuation">,</span>z2<span class="token operator">=</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">2i</span><span class="token punctuation">,</span>z3<span class="token operator">=</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>z<span class="token operator">=</span>z1<span class="token operator">*</span>z2<span class="token operator">/</span>z3
z1 <span class="token operator">=</span>
   <span class="token number">3.0000</span> <span class="token operator">+</span> <span class="token number">4.0000i</span>
z2 <span class="token operator">=</span>
   <span class="token number">1.0000</span> <span class="token operator">+</span> <span class="token number">2.0000i</span>
z3 <span class="token operator">=</span>
   <span class="token number">0.8660</span> <span class="token operator">+</span> <span class="token number">0.5000i</span>
z <span class="token operator">=</span>
   <span class="token number">0.6699</span> <span class="token operator">+</span><span class="token number">11.1603i</span>

<span class="token operator">></span><span class="token operator">></span> z_real<span class="token operator">=</span><span class="token function">real</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span>z_image<span class="token operator">=</span><span class="token function">imag</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span>z_angle<span class="token operator">=</span><span class="token function">angle</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span>z_length<span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>
z_real <span class="token operator">=</span>
    <span class="token number">0.6699</span>
z_image <span class="token operator">=</span>
   <span class="token number">11.1603</span>
z_angle <span class="token operator">=</span>
    <span class="token number">1.5108</span>
z_length <span class="token operator">=</span>
   <span class="token number">11.1803</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="matlab矩阵操作">MATLAB矩阵操作</h1>
<h2 id="数组定义">数组定义</h2>
<p>按行（row）和列（column）顺序排列的实数或复数的有序集，被称为数组。</p>
<p>数组中的任何一个数都被称为这个数组的元素，由其所在的行和列标识，这个标识也被称为数组元素的下标或索引。MATLAB将标量视为1×1的数组。</p>
<h2 id="数组的分类">数组的分类</h2>
<ul>
<li>一维数组，也称为向量（vector）。
<ul>
<li>行向量</li>
<li>列向量</li>
</ul></li>
<li>二维数组，也称为矩阵（matrix）。</li>
<li>多维数组</li>
</ul>
<h2 id="有效矩阵">有效矩阵</h2>
<p>每行元素的个数必须相同，每列元素的个数也必须相同。</p>
<h2 id="矩阵定义">矩阵定义</h2>
<p>默认情况下，MATLAB中所有的变量都是双精度矩阵。</p>
<p>要创建一个矩阵变量，只需为其分配值即可，例如2×2矩阵A：</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>
A <span class="token operator">=</span>
     <span class="token number">1</span>     <span class="token number">2</span>
     <span class="token number">3</span>     <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="矩阵基本运算">矩阵基本运算</h2>
<p>MATLAB可以简单地对没有特殊语法定义的矩阵进行加减乘除等运算。矩阵必须符合所请求的线性运算的正确大小。如：D = B + C。</p>
<p>使用单引号后缀表示转置，如：A'。</p>
<p>使用^表示矩阵幂运算，如：A^2。</p>
<p>默认情况下，每个变量都属于数值变量。可以使用zeros、ones、eye或rand等函数将矩阵初始化为给定值，分别为0、1、单位矩阵或随机数。</p>
<h2 id="创建二维数组变量">创建二维数组变量</h2>
<p>第一种方法：使用方括号“[]”操作符。行与行之间用分号“;”间隔，也可以在分行处用回车键间隔。行内元素用空格或逗号“,”间隔。</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
A2 <span class="token operator">=</span>
     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>
     <span class="token number">4</span>     <span class="token number">5</span>     <span class="token number">6</span>
     <span class="token number">7</span>     <span class="token number">8</span>     <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>由向量也能构成二维数组。</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token operator">></span><span class="token operator">></span> C <span class="token operator">=</span> <span class="token punctuation">[</span>A<span class="token punctuation">;</span>B<span class="token punctuation">]</span>
C <span class="token operator">=</span>
     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>
     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span>
<span class="token operator">></span><span class="token operator">></span> D <span class="token operator">=</span> <span class="token punctuation">[</span>A B<span class="token punctuation">]</span>
D <span class="token operator">=</span>
     <span class="token number">1</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">2</span>     <span class="token number">3</span>     <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="matlab数学函数">MATLAB数学函数</h1>
<h2 id="求最大值最小值">求最大值最小值</h2>
]]></content>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>Mermaid 语法备忘</title>
    <url>/2020/08/14/Mermaid-%E8%AF%AD%E6%B3%95%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<h1 id="mermaid-简介">Mermaid 简介</h1>
<p>Mermaid 是一个用于画流程图、状态图、时序图、甘特图的库，使用 JS 进行本地渲染，广泛集成于许多 Markdown 编辑器中。</p>
<p>通过 mermaid 可以实现以纯文本的方式绘制流程图，序列图，甘特图等。</p>
<h1 id="mermaid-语法">Mermaid 语法</h1>
<h2 id="流程图">流程图</h2>
<p>因为 mermaid 支持不同图表，所以所有的流程图需要以 <code>graph</code> 开头。</p>
<h3 id="图表方向">图表方向</h3>
<p>在 <code>graph</code> 的后方添加流程图的显示方向</p>
<ul>
<li>TB：从上到下</li>
<li>BT：从下到上</li>
<li>RL：从右到左</li>
<li>LR：从左到右</li>
<li>TD：跟 TB 一样，从上到下</li>
</ul>
<p>示例：</p>
<pre class="line-numbers language-none"><code class="language-none">graph TB &#x2F;&#x2F; 从上往下
start --&gt; stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
start --&gt; stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="结点形状">结点形状</h3>
<h4 id="默认结点矩形">默认结点（矩形）</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB 
id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="带文字说明的结点">带文字说明的结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id[text]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id[text]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="圆角结点">圆角结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id(text)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id(text)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="圆形结点">圆形结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id((text))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id((text))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="飘带结点">飘带结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id&gt;text]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id&gt;text]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="菱形结点">菱形结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id&#123;text&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id&#123;text&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="六边形结点">六边形结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
id&#123;&#123;text&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
id&#123;&#123;text&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="平行四边形结点">平行四边形结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id1[&#x2F;text1&#x2F;]
id2[\text2\]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id1[&#x2F;text1&#x2F;]
id2[\text2\]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="梯形结点">梯形结点</h4>
<pre class="line-numbers language-none"><code class="language-none">graph TB
id1[&#x2F;text1\]
id2[\text2&#x2F;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
id1[&#x2F;text1\]
id2[\text2&#x2F;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="连线">连线</h3>
<h4 id="箭头">箭头</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A --&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A --&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="直线">直线</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A --- B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A --- B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="带文字的直线">带文字的直线</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A -- text --- B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A -- text --- B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>或者</p>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A ---|text| B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A ---|text| B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="带文字的箭头">带文字的箭头</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A -- text --&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A -- text --&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>或者</p>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A --&gt;|text| B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A --&gt;|text| B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="虚线">虚线</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A -.-&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A -.-&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="粗箭头可能没用">粗箭头（可能没用）</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A &#x3D;&#x3D;&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A &#x3D;&#x3D;&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="带文字的粗箭头">带文字的粗箭头</h4>
<pre class="line-numbers language-none"><code class="language-none">graph LR
A &#x3D;&#x3D; text &#x3D;&#x3D;&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR
A &#x3D;&#x3D; text &#x3D;&#x3D;&gt; B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="子图">子图</h3>
<pre class="line-numbers language-none"><code class="language-none">graph TB
c1--&gt;a2
subgraph one
a1--&gt;a2
end
subgraph two
b1--&gt;b2
end
subgraph three
c1--&gt;c2
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TB
c1--&gt;a2
subgraph one
a1--&gt;a2
end
subgraph two
b1--&gt;b2
end
subgraph three
c1--&gt;c2
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://mermaid-js.github.io/mermaid/#/flowchart">Flowchart - mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.</a></li>
</ul>
]]></content>
      <tags>
        <tag>Markdown</tag>
        <tag>Mermaid</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT主题的Bootstrap Callout标签简介</title>
    <url>/2019/06/29/NexT%E4%B8%BB%E9%A2%98%E7%9A%84Bootstrap-Callout%E6%A0%87%E7%AD%BE%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>在Hexo博客里想要重点标示一段文字有很多种方式。</p>
<p><code>比如可以这样</code></p>
<blockquote>
<p>或者这样</p>
</blockquote>
<p>代码：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token code-snippet code keyword">`比如可以这样`</span>
<span class="token blockquote punctuation">></span> 或者这样<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这些方法是Markdown自带的。不过下面要介绍的方法并不是Markdown的基本语法，而是NexT主题特有的扩充语法。</p>
<h1 id="什么是标签插件">什么是标签插件</h1>
<p>首先来简单了解一下Hexo提供了什么额外的显示格式。</p>
<p>为了扩充Markdown的表现能力（也许），Hexo提出了“标签插件”的概念，根据官方文档的说法，标签插件是用于在文章中快速插入特定内容的插件，比如引言、代码等内容，虽然有些内容Markdown自身的语法就有，不过Hexo提供了另外一种插入它们这些内容的解决方案。</p>
<blockquote><p>「标签」(Tag Plugin) 是 Hexo 提供的一种快速生成特定内容的方式。 例如，在标准 Markdown 语法中，我们无法指定图片的大小。这种情景，我们即可使用标签来解决。 Hexo 内置来许多标签来帮助写作者可以更快的书写，完整的标签列表可以参考 Hexo 官网。 另外，Hexo 也开放来接口给主题，使主题有可能提供给写作者更简便的写作方法。</p>
<footer><strong>内置标签</strong><cite><a href="https://theme-next.iissnan.com/tag-plugins.html">NexT 使用文档</a></cite></footer></blockquote>
<p>因为Hexo开放了接口，所以NexT主题也有自己的标签插件，其中一种，就是接下来要介绍的Bootstrap Callout，接下来来看看它的显示效果是怎样的。</p>
<h1 id="什么是bootstrap-callout">什么是Bootstrap Callout</h1>
<p>Bootstrap Callout就是NexT主题内置的一种标签格式，你可以使用它来标示出你想突出的文字，它的使用方式和效果如下所示：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note <span class="token url">[<span class="token content">class_name</span>] [<span class="token variable">no-icon</span>]</span> %&#125;
这里写你需要写的内容
&#123;% endnote %&#125;

// 注意上面的class_name和no-icon属性是可以选择的
[no-icon] : Disable icon in note.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中，<code>class_name</code>可以是以下列表中的一个值：</p>
<ul>
<li><p>不填</p>
<div class="note "><p>Content (without define class style).</p>
</div></li>
<li><p>default</p>
<div class="note default"><p>Content (default style).</p>
</div></li>
<li><p>primary</p>
<div class="note primary"><p>Content (primary style).</p>
</div></li>
<li><p>success</p>
<div class="note success"><p>Content (success style).</p>
</div></li>
<li><p>info</p>
<div class="note info"><p>Content (info style).</p>
</div></li>
<li><p>warning</p>
<div class="note warning"><p>Content (warning style).</p>
</div></li>
<li><p>danger</p>
<div class="note danger"><p>Content (danger style).</p>
</div></li>
</ul>
<p>效果在编辑文档的时候是看不到的，只有发布到博客上之后才能看见。</p>
<h1 id="更改样式">更改样式</h1>
<p>样式的更改在主题目录下的<code>_config.yml</code>文件里（不是根目录下那个）。找到下面的部分，按需修改即可。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Note tag (bs-callout)</span>
<span class="token key atrule">note</span><span class="token punctuation">:</span>
  <span class="token comment"># Note tag style values:</span>
  <span class="token comment">#  - simple    bs-callout old alert style. Default.</span>
  <span class="token comment">#  - modern    bs-callout new (v2-v3) alert style.</span>
  <span class="token comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span>
  <span class="token comment">#  - disabled  disable all CSS styles import of note tag.</span>
  <span class="token comment"># style: simple</span>
  <span class="token key atrule">style</span><span class="token punctuation">:</span> modern
  <span class="token comment"># icons: false</span>
  <span class="token key atrule">icons</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">border_radius</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span>
  <span class="token comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span>
  <span class="token key atrule">light_bg_offset</span><span class="token punctuation">:</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="踩坑">踩坑</h1>
<ol type="1">
<li><p>Bootstrap Callout标签的格式一定要特别注意，不能把<code>&#123; % note %&#125;</code>、内容和<code>&#123; % endnote %&#125;</code>放在同一行，应该每一部分单独成行，否则会出现渲染上的问题（比如和Markdown的语法冲突）。举个例子：</p>
<ol type="1">
<li><p>这样写是错的：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note %&#125;Content&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>这样写也是错误的：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% note %&#125;Content
&#123;% endnote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
</ol></li>
<li><p>标签的内容部分目前似乎并不支持Markdown格式，如果真的需要可以用HTML的标签来替代（比如<code># 标题</code>用<code>&lt;h1&gt;标题&lt;/h1&gt;</code>代替）。</p></li>
</ol>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://hexo.io/zh-cn/docs/tag-plugins.html">标签插件（Tag Plugins）| Hexo</a></li>
<li><a href="https://theme-next.iissnan.com/tag-plugins.html">内置标签 - NexT 使用文档</a></li>
<li><a href="https://bestzuo.cn/posts/3147047336.html">hexo博客Next主题进阶写作技巧 - Sanarous的博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu如何安装tar.gz版的Flash Player</title>
    <url>/2019/02/16/Ubuntu%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85tar-gz%E7%89%88%E7%9A%84Flash-Player/</url>
    <content><![CDATA[<p>在Ubuntu 18.04里打开Firefox，发现视频看不了，需要安装Flash Player，但是在Flash Player的下载页面下载时出现了问题，弹出一个错误提示框，显示“未知频道‘bionic-partner’。所幸Flash Player提供了tar.gz的安装方式。</p>
<ol type="1">
<li><p>将tar.gz安装包下载下来解压。</p></li>
<li><p>将libflashplayer.so文件拷贝到Firefox的plugins目录，我的电脑Firefox的plugins目录是：<code>/usr/lib/firefox-addons/plugins</code>。如果通过界面操作无法操作，可以使用命令行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> libflashlayer.so /usr/lib/firefox-addons/plugins<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>将安装包的usr文件夹下的所有文件拷贝到/usr目录下，可以通过命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> -r usr/* /usr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>重新打开Firefox浏览器，Flash player就可以使用了。</p></li>
</ol>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://blog.csdn.net/wangyuchun_799/article/details/46995675">UBUNTU如何安装tar.gz版的flash - 飞鱼 - CSDN博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Flash Player</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim指令备忘</title>
    <url>/2020/10/07/Vim%E6%8C%87%E4%BB%A4%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<h1 id="普通模式">普通模式</h1>
<ul>
<li><code>&lt;Esc&gt;</code>：回到普通模式，并取消不需要的和部分完成的命令。</li>
<li><code>K</code>：在任何一个词上输入K来查找其文档。</li>
<li><code>.</code>：重复上次的修改。</li>
<li><code>i</code>：在光标之前进入插入模式。</li>
<li><code>I</code>：在该行的第一个非空字符之前进入插入模式。等价于<code>^i</code>。</li>
<li><code>a</code>：在光标之后进入插入模式。等价于<code>$a</code>。</li>
<li><code>A</code>：在行尾进入插入模式。</li>
<li><code>o</code>：在光标下方添加一行，并进入插入模式。</li>
<li><code>O</code>：在光标下方添加一行，并进入插入模式。</li>
<li><code>r</code>：替换光标处的字符，比如键入<code>rx</code>将光标处的字符替换为x，键入<code>rb</code>将光标处的字符替换为b。</li>
<li><code>R</code>： 进入替换模式，替换一个以上的字符。按<code>&lt;Esc&gt;</code>键退出替换模式。</li>
<li><code>&lt;F1&gt;</code>：打开帮助文档。</li>
<li><code>&lt;C-a&gt;</code>：把当前光标之上或之后（本行）的数字加上给定的数（默认为1）。比如<code>10&lt;C-a&gt;</code>会把当前行光标后的第一个数字加10。</li>
<li><code>&lt;C-x&gt;</code>：和<code>&lt;C-a&gt;</code>相反，会从数字里减去给定的数。</li>
</ul>
<h2 id="移动光标motion动作">移动光标（motion，动作）</h2>
<p>在动作前加上数字表示动作重复的次数（count），比如输入<code>2w</code>将光标向前移动两个词，输入<code>3e</code>将光标向前移动到第三个词的末尾。输入数字的时候，可以使用<code>&lt;Del&gt;</code>来删除最后一位数字。</p>
<ul>
<li><code>j</code>：下移一个实际行。</li>
<li><code>k</code>：上移一个实际行。</li>
<li><code>h</code>：左移一列。</li>
<li><code>l</code>：右移一列。</li>
<li><code>gj</code>：下移一个屏幕行。</li>
<li><code>gk</code>：上移一个屏幕行。</li>
<li><code>w</code>：移动到下一个单词的开头。</li>
<li><code>W</code>：移动到下一个字串的开头。</li>
<li><code>e</code>：移动到当前单词的结尾，如果已经位于当前单词的结尾，则移动到下一个单词的结尾。</li>
<li><code>E</code>：移动到当前字串的结尾，如果已经位于当前字串的结尾，则移动到下一个字串的结尾。</li>
<li><code>ge</code>：移动到上一个单词的结尾。</li>
<li><code>gE</code>：移动到上一个字串的结尾。</li>
<li><code>b</code>：移动到当前单词的开头，如果已经位于当前单词的开头，则移动到上一个单词的开头。</li>
<li><code>B</code>：移动到当前字串的开头，如果已经位于当前字串的开头，则移动到上一个字串的开头。</li>
<li><code>$</code>：移动到实际行的行尾。</li>
<li><code>g$</code>：移动到屏幕行的行尾。</li>
<li><code>0</code>：移动到实际行的行首。</li>
<li><code>g0</code>：移动到屏幕行的行首。</li>
<li><code>^</code>：移动到实际行的第一个非空白字符。</li>
<li><code>g^</code>：移动到屏幕行的第一个非空白字符。</li>
<li><code>&lt;C-g&gt;</code>：显示你在文件中的位置和文件状态。</li>
<li><code>G</code>：移动到文件中的某一行，如果前面没有数字，则移动到文件的底部。
<ul>
<li><code>10G</code>：移动到文件的第10行。</li>
</ul></li>
<li><code>gg</code>：移动到文件的开头。</li>
<li><code>&lt;C-o&gt;</code>：跳转到上一个跳转的位置。</li>
<li><code>&lt;C-i&gt;</code>：跳转到下一个跳转的位置。</li>
<li><code>&lt;C-]&gt;</code>：跳转到光标下的函数的定义处。需要ctags或者vscode。</li>
<li><code>&lt;C-t&gt;</code>：回到使用<code>&lt;C-]&gt;</code>跳转之前的位置。</li>
</ul>
<h2 id="删除变更与复制">删除、变更与复制</h2>
<ul>
<li><code>x</code>：删除光标下的字符。</li>
<li><code>d</code>：删除操作符（operator），后可跟动作。
<ul>
<li><code>dw</code>：删除从光标到下一个词的开头的内容。</li>
<li><code>d$</code>：删除从光标到行尾的内容。</li>
<li><code>de</code>：删除从光标到词尾的内容。</li>
<li><code>dd</code>：删除光标所在行。</li>
<li><code>daw</code>：删除光标下的单词，包括之后的空格。</li>
<li><code>diw</code>：删除光标下的单词，不包括之后的空格。</li>
</ul></li>
<li><code>c</code>：变更操作符，删除指定的文本，然后进入插入模式，后可跟动作。
<ul>
<li><code>ce</code>：要改变从光标到一个词的结尾的内容。</li>
<li><code>cw</code>：要改变从光标到下一个词的开头的内容。</li>
<li><code>c$</code>：要改变从光标到行尾的内容。等价于<code>C</code>。</li>
<li><code>cl</code>：删除光标下的字符。等价于<code>s</code>。</li>
<li><code>cc</code>：删除当前行的内容（保持缩进）。等价于<code>S</code>。</li>
</ul></li>
<li><code>C</code>：删除从光标到行尾的内容，然后进入插入模式。等价于<code>c$</code>。</li>
<li><code>s</code>：删除光标下的字符，然后进入插入模式。等价于<code>cl</code>。</li>
<li><code>S</code>：删除当前行的内容（保持缩进），然后进入插入模式。等价于<code>cc</code>或<code>^C</code>。</li>
<li><code>y</code>：复制操作符。
<ul>
<li><code>yw</code>：复制从光标到下一个词开头的内容。</li>
</ul></li>
<li><code>p</code>：将之前删除（<code>x</code>、<code>d</code>）或复制（<code>y</code>）的文本放在光标之后。</li>
</ul>
<h2 id="撤销与重做">撤销与重做</h2>
<ul>
<li><code>u</code>：撤销最后一个操作。</li>
<li><code>U</code>：撤销一行的所有更改。</li>
<li><code>&lt;C-r&gt;</code>：重做最后一个操作，即撤销“撤销”操作。</li>
</ul>
<h2 id="搜索">搜索</h2>
<ul>
<li><code>/</code>：输入<code>/</code>后跟一个短语来向下搜索短语。比如<code>/error</code>会搜索单词error。
<ul>
<li><code>/error\c</code>：会在这一次搜索error时忽略大小写。</li>
</ul></li>
<li><code>?</code>：向上搜索一个短语，比如<code>?error</code>会向上搜索单词error。</li>
<li><code>n</code>：以相同的方向再次搜索下一个相同的短语。也可用于<code>*</code>查找的单词。</li>
<li><code>N</code>：以相反的方向再次搜索下一个相同的短语。</li>
<li><code>%</code>：跳转到匹配的)，]，或}。</li>
<li><code>f&#123;char&#125;</code>：跳转到当前行下一个{char}所在之处。比如<code>f+</code>跳转到当前行下一处+出现的位置。</li>
<li><code>F&#123;char&#125;</code>：跳转到当前行上一个{char}所在之处。</li>
<li><code>t&#123;char&#125;</code>：跳转到当前行下一个{char}所在之处的前一个字符上。</li>
<li><code>T&#123;char&#125;</code>：跳转到当前行上一个{char}所在之处的后一个字符上。</li>
<li><code>;</code>：重复上次<code>f</code>、<code>F</code>、<code>t</code>、<code>T</code>命令。</li>
<li><code>,</code>：反方向重复上次<code>f</code>、<code>F</code>、<code>t</code>、<code>T</code>命令。</li>
<li><code>*</code>：查找当前光标下的单词。</li>
</ul>
<h2 id="窗口">窗口</h2>
<ul>
<li><code>&lt;C-w&gt;w</code>：在窗口间循环切换。实际上<code>&lt;C-w&gt;&lt;C-w&gt;</code>的功能相同，也就是说可以一直按住<code>&lt;Ctrl&gt;</code>，然后输入<code>ww</code>。可以理解为<code>&lt;C-ww&gt;</code>。</li>
</ul>
<h1 id="插入模式">插入模式</h1>
<ul>
<li><code>&lt;Backspace&gt;</code>：您可以在输入时使用Backspace键来纠正错误。</li>
</ul>
<h1 id="可视模式">可视模式</h1>
<ul>
<li><code>v</code>：进入可视模式进行选择，可以移动光标，使选区变大或变小。然后可以使用操作符对文本进行操作。
<ul>
<li><code>d</code>：删除选中文本。</li>
<li><code>y</code>：复制选中文本。</li>
<li><code>:w FILENAME</code>：保存选中的部分到文件FILENAME中，会显示为<code>:'&lt;,'&gt;w FILENAME</code>。</li>
</ul></li>
</ul>
<h1 id="命令行模式">命令行模式</h1>
<ul>
<li><code>:q</code>：退出编辑器，丢弃您所做的任何更改。
<ul>
<li><code>:q!</code>：加<code>!</code>表示强制执行。</li>
</ul></li>
<li><code>:Tutor</code>：进入Vim Tutor文档。</li>
<li><code>:w</code>：保存文件
<ul>
<li><code>:w FILENAME</code>：将文件保存为FILENAME。</li>
</ul></li>
<li><code>:s</code>：替换命令
<ul>
<li><code>:s/old/new</code>：将行内第一个找到的old替换成new。</li>
<li><code>:s/old/new/g</code>：将行内所有的old替换成new。</li>
<li><code>:#,#s/old/new/g</code>：将两行之间每一个old替换成new，其中#,#为要进行替换的行号范围。</li>
<li><code>:%s/old/new/g</code>：将整个文件中的old替换成new。</li>
<li><code>:%s/old/new/gc</code>：每次要求确认时加<code>c</code>。</li>
</ul></li>
<li><code>:!</code>：输入<code>:!</code>，后面跟着一个外部命令来执行该命令。
<ul>
<li><code>:!ls</code>：列出目录下的文件列表。</li>
<li><code>:!rm FILE</code>：删除名为FILE的文件。</li>
</ul></li>
<li><code>:r</code>：将内容插入到当前文件中。
<ul>
<li><code>:r FILENAME</code>：将文件FILENAME中的内容插入到当前文件的光标下方。</li>
<li><code>:r !ls</code>：也可以将外部命令的输出插入到当前文件的光标下方，比如将<code>ls</code>的结果插入到光标下方。</li>
</ul></li>
<li><code>:h</code>：打开帮助文档。通过提供一个参数，你可以找到关于任何主题的帮助。
<ul>
<li><code>w</code>：查看w键的帮助。</li>
<li><code>c_CTRL-D</code>：查看命令行模式下<code>&lt;C-d&gt;</code>的帮助。</li>
<li><code>insert-index</code>：查看插入模式下的快捷键列表。</li>
<li><code>user-manual</code>：查看用户手册的目录。</li>
<li><code>key-notation</code>：查看键盘按键的标记方式。这些键的名称在文档中使用。它们也可以在<code>:map</code>命令中使用。</li>
<li><code>operator</code>：查看操作符列表。</li>
</ul></li>
<li><code>:nohlsearch</code>、<code>:nohls</code>：移除匹配项的高亮显示。</li>
<li><code>&lt;C-d&gt;</code>：在命令行模式中列出与光标前的模式相匹配的名称。当显示文件名时，目录会被高亮显示（见高亮组）。 后缀匹配的名称会被移到最后。</li>
<li><code>&lt;Tab&gt;</code>：显示下一个补全。</li>
<li><code>:set option</code>
<ul>
<li><code>ruler</code>、<code>ru</code>：在屏幕右下角看到光标的位置。</li>
<li><code>wrapscan</code>、<code>ws</code>：搜索到文件结束的时候重新从开头开始搜索。</li>
<li><code>ignorecase</code>、<code>ic</code>：忽略搜索模式中的大小写。</li>
<li><code>hlsearch</code>、<code>hls</code>：高亮显示所有匹配项。</li>
<li><code>incsearch</code>、<code>is</code>：在输入搜索命令的同时，显示搜索词组的部分匹配项。</li>
<li><code>nrformats=</code>：决定<code>&lt;C-a&gt;</code>和<code>&lt;C-x&gt;</code>命令对数字的解释方式。详细设置可以查看帮助文档。</li>
<li><code>no</code>：在option前加no来关闭一个设置，比如<code>:set noic</code>。</li>
<li><code>inv</code>：在option前加inv来切换一个设置，比如<code>:set invic</code>。</li>
</ul></li>
</ul>
<h1 id="终端">终端</h1>
<ul>
<li><code>$ nvim FILENAME</code>：在Shell下启动neovim，并打开名为FILENAME的文件，如果没有则会新建一个。</li>
</ul>
<h1 id="配置文件">配置文件</h1>
<ul>
<li><code>~/.config/nvim/init.vim</code>相当于<code>~/.vimrc</code>。</li>
</ul>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://blog.csdn.net/ballack_linux/article/details/71036072">vim之函数跳转功能_ballack_linux的专栏-CSDN博客_vim 函数跳转</a></li>
</ul>
]]></content>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>WGestures按键序列指南</title>
    <url>/2020/04/12/WGestures%E6%8C%89%E9%94%AE%E5%BA%8F%E5%88%97%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p><a href="http://www.yingdev.com/projects/wgestures">WGestures</a>是Windows上一款全局鼠标手势软件，可以支持通过按键序列自定义鼠标手势的功能。不过官方并没有如何编写按键序列的相关文档。这里根据网上收集的资料整理一份按键序列的编写指南。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_04_12_WGestures%E6%8C%89%E9%94%AE%E5%BA%8F%E5%88%97%E6%8C%87%E5%8D%97_%E6%8C%89%E9%94%AE%E5%BA%8F%E5%88%97%E5%8A%9F%E8%83%BD.png" alt="按键序列功能.png" /><figcaption aria-hidden="true">按键序列功能.png</figcaption>
</figure>
<div class="note info"><p>以下指南不一定全部有效，放出来只是提供一个可能的思路，具体效果还需要尝试。</p>
</div>
<h1 id="指南">指南</h1>
<p>每个键由一个或多个字符表示。若要指定单个键盘字符，请使用字符本身。例如，若要表示敲击键盘<code>A</code>，直接在按键序列中写<code>A</code>即可。若要表示多个字符，请将每个附加字符追加到其前面的字符。若要表示连续按键<code>A</code>、<code>B</code>和<code>C</code>，就在按键序列中直接写<code>ABC</code>。如果不加修饰按键，那么按键序列是区分大小写的，也就是说，<code>abc</code>和<code>ABC</code>是不同的。</p>
<p><code>+</code>、<code>^</code>、<code>%</code>、<code>~</code>、<code>&#123;&#125;</code>和<code>()</code>有特殊含义。若要指定其中一个字符，请将其括在<code>&#123;&#125;</code>中。例如，若要指定加号，请使用<code>&#123;+&#125;</code>。若要指定括号字符，请使用<code>&#123;(&#125;</code>以及<code>&#123;)&#125;</code>。</p>
<p>若要指定在按某个键（例如<code>Enter</code>或<code>Tab</code>）时不显示的字符以及代表操作而不是字符的键，请使用下表中的代码。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">键</th>
<th style="text-align: left;">按键序列</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Backspace</td>
<td style="text-align: left;">{BACKSPACE}, {BS}, or {BKSP}</td>
</tr>
<tr class="even">
<td style="text-align: left;">Break</td>
<td style="text-align: left;">{BREAK}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Caps Lock</td>
<td style="text-align: left;">{CAPSLOCK}</td>
</tr>
<tr class="even">
<td style="text-align: left;">Delete</td>
<td style="text-align: left;">{DELETE} or {DEL}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">↓</td>
<td style="text-align: left;">{DOWN}</td>
</tr>
<tr class="even">
<td style="text-align: left;">End</td>
<td style="text-align: left;">{END}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Enter</td>
<td style="text-align: left;">{ENTER} or ~</td>
</tr>
<tr class="even">
<td style="text-align: left;">Esc</td>
<td style="text-align: left;">{ESC}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Help</td>
<td style="text-align: left;">{HELP}</td>
</tr>
<tr class="even">
<td style="text-align: left;">Home</td>
<td style="text-align: left;">{HOME}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Insert</td>
<td style="text-align: left;">{INSERT} or {INS}</td>
</tr>
<tr class="even">
<td style="text-align: left;">←</td>
<td style="text-align: left;">{LEFT}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Num Lock</td>
<td style="text-align: left;">{NUMLOCK}</td>
</tr>
<tr class="even">
<td style="text-align: left;">PgDn</td>
<td style="text-align: left;">{PGDN}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">PgUp</td>
<td style="text-align: left;">{PGUP}</td>
</tr>
<tr class="even">
<td style="text-align: left;">PrtScr</td>
<td style="text-align: left;">{PRTSC}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">→</td>
<td style="text-align: left;">{RIGHT}</td>
</tr>
<tr class="even">
<td style="text-align: left;">Scroll Lock</td>
<td style="text-align: left;">{SCROLLLOCK}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Tab</td>
<td style="text-align: left;">{TAB}</td>
</tr>
<tr class="even">
<td style="text-align: left;">↑</td>
<td style="text-align: left;">{UP}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F1</td>
<td style="text-align: left;">{F1}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F2</td>
<td style="text-align: left;">{F2}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F3</td>
<td style="text-align: left;">{F3}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F4</td>
<td style="text-align: left;">{F4}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F5</td>
<td style="text-align: left;">{F5}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F6</td>
<td style="text-align: left;">{F6}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F7</td>
<td style="text-align: left;">{F7}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F8</td>
<td style="text-align: left;">{F8}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F9</td>
<td style="text-align: left;">{F9}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F10</td>
<td style="text-align: left;">{F10}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F11</td>
<td style="text-align: left;">{F11}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F12</td>
<td style="text-align: left;">{F12}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F13</td>
<td style="text-align: left;">{F13}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F14</td>
<td style="text-align: left;">{F14}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">F15</td>
<td style="text-align: left;">{F15}</td>
</tr>
<tr class="even">
<td style="text-align: left;">F16</td>
<td style="text-align: left;">{F16}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">小键盘 +</td>
<td style="text-align: left;">{ADD}</td>
</tr>
<tr class="even">
<td style="text-align: left;">小键盘 -</td>
<td style="text-align: left;">{SUBTRACT}</td>
</tr>
<tr class="odd">
<td style="text-align: left;">小键盘 *</td>
<td style="text-align: left;">{MULTIPLY}</td>
</tr>
<tr class="even">
<td style="text-align: left;">小键盘 /</td>
<td style="text-align: left;">{DIVIDE}</td>
</tr>
</tbody>
</table>
<p>若要指定与<code>Shift</code>、<code>Ctrl</code>和<code>Alt</code>键的任意组合组合的键，请在键代码前面加上一个或多个以下代码。例如<code>Ctrl+Shift+V</code>的按键序列是<code>^+v</code>。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">键</th>
<th style="text-align: left;">按键序列</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Shift</td>
<td style="text-align: left;">+</td>
</tr>
<tr class="even">
<td style="text-align: left;">Ctrl</td>
<td style="text-align: left;">^</td>
</tr>
<tr class="odd">
<td style="text-align: left;">Alt</td>
<td style="text-align: left;">%</td>
</tr>
</tbody>
</table>
<p>若要指定在按下其他几个键的同时按住<code>Shift</code>、<code>Ctrl</code>和<code>Alt</code>的任意组合，请将这些键的代码括在括号中。例如，要指定在按住<code>Shift</code>的同时按住<code>E</code>和<code>C</code>，请使用<code>+(EC)</code>。若要指定在按住<code>Shift</code>的同时按住<code>E</code>，然后松开<code>Shift</code>再按<code>C</code>，请使用<code>+EC</code>。</p>
<p>要指定重复键，请使用<code>&#123;key number&#125;</code>格式。您必须在键和数字之间留一个空格。例如，<code>&#123;LEFT 42&#125;</code>表示按42次左键；<code>&#123;h 10&#125;</code>表示按<code>H</code>10次。</p>
<p>如果要在两个按键中间插入延时，可以用<code>&#123;SLEEP number&#125;</code>格式，比如<code>a&#123;SLEEP 1000&#125;b</code>表示输入a，延时1秒，再输入b。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://tieba.baidu.com/p/4650311982">没有官方文档叫我们怎么写按键序列，自己摸索出的写法【wgestures吧】_百度贴吧</a></li>
<li><a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.windows.forms.sendkeys">SendKeys 类 (System.Windows.Forms) | Microsoft Docs</a></li>
</ul>
]]></content>
      <tags>
        <tag>WGestures</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows自带工具查看文件MD5</title>
    <url>/2019/08/26/Windows%E8%87%AA%E5%B8%A6%E5%B7%A5%E5%85%B7%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6MD5/</url>
    <content><![CDATA[<h1 id="md5是什么">MD5是什么</h1>
<p>MD5，是Message-Digest Algorithm 5的缩写，是一种散列函数，它可以用来将数据（比如各种文件）运算变成一个固定长度的数值。</p>
<blockquote>
<p>MD5已经广泛使用在为文件传输提供一定的可靠性方面。例如，服务器预先提供一个MD5校验和，用户下载完文件以后，用MD5算法计算下载文件的MD5校验和，然后通过检查这两个校验和是否一致，就能判断下载的文件是否出错。</p>
<p>——维基百科</p>
</blockquote>
<h1 id="md5校验工具是什么">MD5校验工具是什么</h1>
<p>实际上就是个计算MD5的软件，将一个文件（比如文档、软件等等）输入给软件，软件就会输出一串MD5代码，相当于文件的“身份证”，拿着它去跟你下载的网站提供的MD5比对，就能判断下载文件的对错。</p>
<h1 id="certutil是什么">certutil是什么</h1>
<p>certutil是Windows自带的命令行工具，用于列出，生成，修改和删除 证书和更改证书密码，生成新的公共和私有密钥对。</p>
<p>它是一个功能非常多的工具，如果你想查看它的全部功能，可以在命令行输入</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">certutil -v -?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="用certutil查看md5">用certutil查看MD5</h1>
<p>这个工具不需要安装，只要你是Windows的电脑就可以使用，我们要用这个工具来计算文件的MD5。</p>
<p>用法如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">CertUtil -hashfile InFile <span class="token punctuation">[</span>HashAlgorithm<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>InFile：文件名</p>
<p>[HashAlgorithm]：MD2、MD4、MD5、SHA1、SHA256、SHA384、SHA512</p>
<p>举个例子，比如我从<a href="http://mediacoder.com.cn/getfile_zh.htm?site=mediatronic.com.au/download&amp;file=MediaCoder-x64-0.8.58.exe">这个网站</a>下载了一个叫MediaCoder的软件。网站上给出了文件的MD5。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_08_26_%E7%BD%91%E9%A1%B5%E6%98%BE%E7%A4%BA%E7%9A%84MD5.png" alt="网页显示的MD5.png" /><figcaption aria-hidden="true">网页显示的MD5.png</figcaption>
</figure>
<p>接下来，打开命令行，进入到文件存放的路径，然后输入下面的命令</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_08_26_%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%A1%E7%AE%97%E7%9A%84MD5.png" alt="命令行计算的MD5.png" /><figcaption aria-hidden="true">命令行计算的MD5.png</figcaption>
</figure>
<p>最后对比发现，两个MD5相同，所以下载的文件没有出错。</p>
<p>这种方法不需要单独下载MD5校验工具，是不是非常方便呢？</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://blog.csdn.net/lanchunhui/article/details/71439550">新技能 get —— 如何校验 md5（windows） - Zhang's Wikipedia - CSDN博客</a></li>
<li><a href="https://blog.csdn.net/cc20032706/article/details/70548461">Md5是什么？MD5怎么校验？Md5校验工具怎么用？ - 学无止境~ - CSDN博客</a></li>
<li><a href="https://zh.wikipedia.org/wiki/MD5">MD5 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.jianshu.com/p/b1cdd594c67a">certutil命令详解 - 简书</a></li>
</ul>
]]></content>
      <tags>
        <tag>MD5</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/07/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>mdx、mdd与css之间的关系</title>
    <url>/2020/12/18/mdx%E3%80%81mdd%E4%B8%8Ecss%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<blockquote>
<p>MDict是一款用于PC及移动设备的电子辞典软件，可以用于查看mdx格式的词典文件。</p>
<p>——维基百科</p>
</blockquote>
<p>MDict本身并不提供词库，不过可以从网上下载到热心网友为MDict制作的词库，包括各大著名词典比如牛津、剑桥、朗文等等。</p>
<p>我们从网上下载词库文件，一般会下载到后缀为<code>.mdx</code>、<code>.mdd</code>和<code>.css</code>后缀的文件。<code>.css</code>是给<code>.mdx</code>排版的文件。</p>
<p><code>.mdx</code>和<code>.mdd</code>文件是MDict的词库文件，其中<code>.mdx</code>文件是存文字的词库文件，实质上是由成千上万个由HTML语言编写的词条排列压缩构成的，它包含了一部词典几乎所有的文本。<code>.mdd</code>是词库资源包，存除文字以外的全部内容，包括CSS、JavaScript、音频、图片、视频等等，任何文件都可以打包到<code>.mdd</code>里去，能不能和<code>.mdx</code>联合起来查看另说，所以一般来说，<code>.mdd</code>文件都会比<code>.mdx</code>文件大很多，不过<code>.mdd</code>文件是可选的。</p>
<p><code>.css</code>是外部层叠样式表，控制<code>.mdx</code>中HTML文本的</p>
<p>排版，有了它，可以让原本灰头土脸的词典瞬间焕发出绚丽的色彩。CSS可以打包进<code>.mdd</code>，也可以外置成单独的一个文件。如果<code>.mdx</code>要链接上CSS，内容里必须有<code>&lt;link href="content://xxx.css"&gt;</code>这样的代码。但是对MDict而言，有一种特殊情况：比如<code>A.mdx</code>的没有<code>&lt;link href="content://xxx.css"&gt;</code>，可以建一个同名文件<code>A.css</code>来控制<code>A.mdx</code>的排版（在GoldenDict下似乎暂时不可行）。另外，如果<code>A.mdx</code>有<code>&lt;link href="content://B.css"&gt;</code>，那么这个<code>B.css</code>可以打包进<code>A.mdd</code>，也可以外置和<code>A.mdx</code>、<code>A.mdd</code>放在一起，但是不能改名（如果改名成<code>A.css</code>，在MDict下还是可以的，其他软件不保证效果）。</p>
<p>从网上下载的<code>.mdx</code>、<code>.mdd</code>文件，可以随意改名，只要文件名一致就行，但是<code>.css</code>不能随便更改，必须是制作者提供的那个名字，除非自己修改，链接了另一个名字的<code>.css</code>。有部分制作者，<code>.mdd</code>里打包了CSS，不过为了方便其他人修改，又提供了一个外置的CSS，所以这种情况下，删除了外置的CSS，排版效果仍在。而根据参考网页的说法，外置的CSS优先级是高于内置的CSS的，也就是说如果你修改了外置的CSS，那相应的<code>.mdx</code>文件的排版是会改变的。</p>
<p>如果要更换CSS，首先需要<strong>备份原CSS文件</strong>。然后将新的CSS文件直接覆盖原CSS文件即可（文件名要保持相同）。而且，一部词典的CSS是为该词典量身定做的，使用其它词典的CSS可能会导致各方面的问题，所以不要拿其它词典的CSS套用在自己想要的词典上。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/MDict">MDict - 维基百科，自由的百科全书</a></li>
<li><a href="http://www.360doc.cn/article/49565591_863866110.html">mdx、mdd及css三者关系以及欧路中应如何安装css</a></li>
<li><a href="https://www.pdawiki.com/forum/thread-15487-1-1.html">新人求解mdx,mdd,css之间的关系...? - 词库制作交流区 - Dictionary-Making - 掌上百科 - PDAWIKI - Powered by Discuz!</a></li>
</ul>
]]></content>
      <tags>
        <tag>MDict</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2018/07/26/test/</url>
    <content><![CDATA[<p>My first test article.</p>
]]></content>
  </entry>
  <entry>
    <title>tmux笔记</title>
    <url>/2021/04/28/tmux%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="tmux快捷键速查">tmux快捷键速查</h1>
<h2 id="会话">会话</h2>
<table>
<thead>
<tr class="header">
<th>快捷键</th>
<th>功能</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ctrl+b d</td>
<td>分离当前会话</td>
<td>tmux detach</td>
</tr>
<tr class="even">
<td>Ctrl+b D</td>
<td>选择要分离的会话</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b s</td>
<td>列出所有会话用于选择并切换</td>
<td>tmux ls/tmux list-session</td>
</tr>
<tr class="even">
<td>Ctrl+b $</td>
<td>重命名当前会话</td>
<td>tmux rename-session -t &lt;current-session&gt; &lt;new-name&gt;</td>
</tr>
<tr class="odd">
<td>Ctrl+b ?</td>
<td>显示快捷键帮助文档</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b :</td>
<td>进入命令行模式</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="窗口">窗口</h2>
<table>
<colgroup>
<col style="width: 14%" />
<col style="width: 51%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th>快捷键</th>
<th>功能</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ctrl+b c</td>
<td>创建一个新窗口，状态栏会显示多个窗口的信息。</td>
<td>tmux new-window</td>
</tr>
<tr class="even">
<td>Ctrl+b p</td>
<td>切换到上一个窗口（按照状态栏上的顺序）。</td>
<td>tmux select-window -t :-</td>
</tr>
<tr class="odd">
<td>Ctrl+b n</td>
<td>切换到下一个窗口。</td>
<td>tmux select-window -t :+</td>
</tr>
<tr class="even">
<td>Ctrl+b &lt;number&gt;</td>
<td>切换到指定编号的窗口，其中的&lt;number&gt;是状态栏上的窗口编号。</td>
<td>tmux select-window -t &lt;window-number&gt;</td>
</tr>
<tr class="odd">
<td>Ctrl+b w</td>
<td>从列表中选择并切换窗口。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b ,</td>
<td>重命名当前窗口。</td>
<td>tmux rename-window &lt;new-name&gt;</td>
</tr>
<tr class="odd">
<td>Ctrl+b .</td>
<td>修改当前窗口编号（适用于窗口重新排序）。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b f</td>
<td>快速定位到窗口（输入关键字匹配窗口名称）。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b &amp;</td>
<td>关闭当前窗口。</td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="窗格">窗格</h2>
<table>
<colgroup>
<col style="width: 23%" />
<col style="width: 57%" />
<col style="width: 19%" />
</colgroup>
<thead>
<tr class="header">
<th>快捷键</th>
<th>功能</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Ctrl+b %</td>
<td>划分左右两个窗格。</td>
<td>tmux split-window -h</td>
</tr>
<tr class="even">
<td>Ctrl+b "</td>
<td>划分上下两个窗格。</td>
<td>tmux split-window</td>
</tr>
<tr class="odd">
<td>Ctrl+b &lt;arrow-key&gt;</td>
<td>光标移动到其他窗格。比如切换到下方窗格，就按方向键↓。</td>
<td>tmux select-pane</td>
</tr>
<tr class="even">
<td>Ctrl+b ;</td>
<td>光标切换到上一个窗格。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b o</td>
<td>光标切换到下一个窗格。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b {</td>
<td>当前窗格与上一个窗格交换位置。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b }</td>
<td>当前窗格与下一个窗格交换位置。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b Ctrl+o</td>
<td>所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b Alt+o</td>
<td>所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b x</td>
<td>关闭当前窗格。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b !</td>
<td>将当前窗格拆分成一个独立窗口。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b z</td>
<td>当前窗格全屏显示，再使用一次变回原来大小。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b Ctrl+&lt;arrow-key&gt;</td>
<td>按箭头方向调整窗格大小。</td>
<td></td>
</tr>
<tr class="even">
<td>Ctrl+b q</td>
<td>显示窗格编号。</td>
<td></td>
</tr>
<tr class="odd">
<td>Ctrl+b &lt;Space&gt;</td>
<td>在预置的面板布局中循环切换，包括even-horizontal、even-vertial、main-vertical、tiled</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="接触tmux的原因">接触tmux的原因</h1>
<p>最近在做项目，正好项目中需要ssh连接很多个树莓派，然后需要同时给它们发送命令，我目前在用的Windows Terminal可以分屏连接ssh，但是做不到同时发送命令，于是我上网搜索了一下，发现有一些Windows终端实现了类似的功能，比如XShell、SecureCRT等等，不过这些终端都不是免费的，我也不想因为这个需求多安装比较大的软件，找来找去最后发现大名鼎鼎的tmux居然有这个功能（记录在其他命令中）。</p>
<p>我听说tmux已经有很久的时间了，不过一直没有硬性使用tmux的需求，只是听说它是Linux终端上的神器。正好趁着这次机会来详细了解一下tmux的用法，看看它能否像vim一样成为我的工具链里的又一个神器。</p>
<h1 id="tmux是什么">tmux是什么</h1>
<p>根据tmux官方GitHub仓库Wiki的介绍，tmux是一个终端复用器（terminal multiplexer）。什么意思呢？我们知道Linux的终端一次只能显示一个程序，切换起来比较麻烦，tmux可以让终端像图形化界面一样把屏幕分成很多个部分，每个部分显示一个程序，达到所谓复用的效果。并且tmux还允许你方便地在一个终端中的多个程序间切换，暂时分离（让这些窗口保持在后台运行），并在另一个终端重新连接它们（这样可以把你的屏幕布局带到另一个终端上）。</p>
<p>有了tmux之后，在vim中编写代码之后，不再需要保存退出再在命令行中运行调试，ssh连接断开也不用担心布局丢失。下图就是使用了tmux之后实现的炫酷效果。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_04_28_tmux%E7%AC%94%E8%AE%B0_tmux%E7%82%AB%E9%85%B7%E6%95%88%E6%9E%9C.jpg" alt="tmux炫酷效果.jpg" /><figcaption aria-hidden="true">tmux炫酷效果.jpg</figcaption>
</figure>
<h1 id="tmux核心概念">tmux核心概念</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_04_28_tmux%E7%AC%94%E8%AE%B0_tmux%E7%BB%93%E6%9E%84.jpg" alt="tmux结构.jpg" /><figcaption aria-hidden="true">tmux结构.jpg</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_04_28_tmux%E7%AC%94%E8%AE%B0_tmux%E4%BC%9A%E8%AF%9D%E7%AA%97%E5%8F%A3%E5%92%8C%E7%AA%97%E6%A0%BC%E7%9A%84%E6%A6%82%E5%BF%B5.jpg" alt="tmux会话窗口和窗格的概念.jpg" /><figcaption aria-hidden="true">tmux会话窗口和窗格的概念.jpg</figcaption>
</figure>
<p>在使用tmux之前，首先需要熟悉tmux的几个重要概念，不然你会觉得云里雾里，而且会感觉tmux的使用很复杂、不方便。</p>
<p>可以从图中看到，tmux的结构分为三层，分别是：</p>
<ul>
<li>窗格（pane）：这是tmux的最小单位，每个窗格都是一个独立的命令行，可以运行各种命令。</li>
<li>窗口（window）：每个窗口都会占满终端屏幕，可以容纳多个窗格。因此我们可以在窗口中把屏幕分成许多个窗格来完成屏幕的复用。</li>
<li>会话（session）：这是比较难理解的一个层级，从图中可以看出，每个会话可以包含多个窗口。不过会话有什么存在的必要呢？我的理解是，会话最重要的作用，就是和窗口解绑。什么意思呢？首先，会话是来自命令行的一个词语：命令行的典型使用方式，是打开一个终端窗口，在里面输入命令，这样的用户和计算机的临时交互，称为一次会话。因为传统的终端中，窗口和启动的进程是连在一起的，打开窗口，就开始一个会话；关闭窗口，会话就结束了，会话内部的进程也就随之停止，这就是为什么关闭命令行时，如果有还在运行的进程，系统会弹出警告。而tmux的会话，可以实现和窗口的解绑，在窗口关闭时，会话不会终止，而是继续运行，等到以后需要的时候，再回来重新绑定窗口。当然会话还有其它很多花哨的用法，这个之后再说。</li>
</ul>
<p>有的地方认为tmux的第四层是服务端Server，它指的是整个tmux的后台服务，这就是tmux的会话可以和窗口解绑的原因。有时候更了配置不生效，就可以重启tmux的服务（tmux kill-server）。</p>
<h1 id="tmux用法">tmux用法</h1>
<p>一个最重要的一点是，tmux的所有快捷键都有一个前缀<code>Ctrl+b</code>。比如说帮助命令的快捷键是<code>Ctrl+b ?</code>，指的是在tmux窗口中，先按下<code>Ctrl+b</code>，再按下<code>?</code>，就会显示帮助信息。</p>
<h2 id="基本用法">基本用法</h2>
<h3 id="启动">启动</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会启动一个tmux窗口，底部有一个状态栏，左侧是窗口信息（编号和名称），右侧是系统信息。</p>
<h3 id="退出">退出</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>按下<code>Ctrl+d</code>或显式输入<code>exit</code>都可以退出tmux窗口。</p>
<h2 id="会话管理">会话管理</h2>
<p>我们可以按照tmux的层级结构来介绍tmux的使用方法。首先从会话层级开始。</p>
<h3 id="新建会话">新建会话</h3>
<p>之前启动tmux的命令会新建一个会话，不过这个会话是以编号命名的，更好的方法是为会话起名。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux new -s <span class="token operator">&lt;</span>session-name<span class="token operator">></span>

<span class="token comment"># 在后台新建会话</span>
tmux new -s <span class="token operator">&lt;</span>session-name<span class="token operator">></span> -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>这条命令新建一个指定名称的会话。</p>
<h3 id="分离会话">分离会话</h3>
<p>之前提到过，tmux会话的精髓就是能和终端窗口分离。</p>
<p>按下<code>Ctrl+b d</code>或者输入<code>tmux detach</code>命令，就会将当前会话和窗口分离。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux detach<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>上面的命令执行后，就会退出当前的tmux窗口，但是会话和里面的进程仍然在后台运行。</p>
<h3 id="列出会话">列出会话</h3>
<p><code>tmux ls</code>命令可以查看当前所有的tmux会话。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux <span class="token function">ls</span>
<span class="token comment"># or</span>
tmux list-session<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="接入会话">接入会话</h3>
<p><code>tmux attach</code>命令用于重新接入某个已经存在的会话。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用会话编号</span>
tmux attach -t <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
tmux attach -t <span class="token operator">&lt;</span>session-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="杀死会话">杀死会话</h3>
<p><code>tmux kill-session</code>命令用于杀死某个会话。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用会话编号</span>
tmux kill-session -t <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
tmux kill-session -t <span class="token operator">&lt;</span>session-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="切换会话">切换会话</h3>
<p><code>tmux switch</code>命令用于切换会话。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用会话编号</span>
tmux switch -t <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
tmux switch -t <span class="token operator">&lt;</span>session-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重命名会话">重命名会话</h3>
<p><code>tmux rename-session</code>命令用于重命名会话。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux rename-session -t <span class="token number">0</span> <span class="token operator">&lt;</span>new-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>上面的命令将0号会话重命名。</p>
<h2 id="窗口管理">窗口管理</h2>
<h3 id="新建窗口">新建窗口</h3>
<p><code>tmux new-window</code>命令用来创建新窗口。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux new-window

<span class="token comment"># 新建一个指定名称的窗口</span>
tmux new-window -n <span class="token operator">&lt;</span>window-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="切换窗口">切换窗口</h3>
<p><code>tmux select-window</code>命令用来切换窗口。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 切换到指定编号的窗口</span>
tmux select-window -t <span class="token operator">&lt;</span>window-number<span class="token operator">></span>

<span class="token comment"># 切换到指定名称的窗口</span>
tmux select-window -t <span class="token operator">&lt;</span>window-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="重命名窗口">重命名窗口</h3>
<p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tmux rename-window <span class="token operator">&lt;</span>new-name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="窗格管理">窗格管理</h2>
<h3 id="划分窗格">划分窗格</h3>
<p><code>tmux split-window</code>命令用来划分窗格。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 划分上下两个窗格</span>
tmux split-window

<span class="token comment"># 划分左右两个窗格</span>
tmux split-window -h<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="移动光标">移动光标</h3>
<p><code>tmux select-pane</code>命令用来在窗格间移动光标。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 光标移动到上方窗格</span>
tmux select-pane -U

<span class="token comment"># 光标移动到下方窗格</span>
tmux select-pane -D

<span class="token comment"># 光标移动到左边窗格</span>
tmux select-pane -L

<span class="token comment"># 光标移动到右边窗格</span>
tmux select-pame -R<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="交换窗格位置">交换窗格位置</h3>
<p><code>tmux swap-pane</code>命令用来交换窗格位置。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 当前窗格上移</span>
tmux swap-pane -U

<span class="token comment"># 当前窗格下移</span>
tmux swap-pane -D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="其他命令">其他命令</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有快捷键，及其对应的 Tmux 命令</span>
tmux list-keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出所有 Tmux 命令及其参数</span>
tmux list-commands<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 列出当前所有 Tmux 会话的信息</span>
tmux info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 重新加载当前的 Tmux 配置</span>
tmux source-file ~/.tmux.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 向tmux中的所有窗格发送命令</span>
<span class="token comment"># 打开命令行模式</span>
Ctrl+b <span class="token builtin class-name">:</span>
<span class="token comment"># 切换同步窗格</span>
setw synchronize-panes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="配置">配置</h1>
<p>tmux的配置文件需要自己创建。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> ~/.tmux.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在<code>.tmux.conf</code>文件里，我们使用<code>set-option</code>命令来设置选项，缩写为<code>set</code>，比如重新定义前缀键：</p>
<pre class="line-numbers language-none"><code class="language-none">set -g prefix C-a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>-g</code>表示全局配置，能让设置在所有创建的tmux会话生效。</p>
<p><code>unbind-key</code>或<code>unbind</code>可以移除之前绑定的组合键。比如移除原来的前缀键：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">unbind C-b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>tmux并不会实时地自动从配置文件读取你所做的修改。因此如果你在使用tmux的过程中修改了 <code>.tmux.conf</code> 文件，要想让所做的配置修改生效的话，你需要关闭所有的tmux会话，或者在 tmux 快捷键<code>Ctrl+b :</code>进入命令行模式然后输入以下内容：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">source-file ~/.tmux.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果需要配置与窗口进行交互的选项，需要使用<code>set-window-option</code>命令，简写为<code>setw</code>。</p>
<p><code>bind-keys</code>或<code>bind</code>可以定义新的快捷键，先指定按下的键，后面跟着要执行的命令。通过在命令之间加<code>\;</code>可以使一个键绑定执行多个命令。<code>-n</code>参数可以定义一个不需要前缀键的快捷键，不过这会让tmux会话里的任何程序都禁用组合键，因此需要特别小心。<code>-r</code>参数可以让快捷键变得“可重复”，这意味着只要按下前缀键一次，就可以在一定时间内连续按下自定义的快捷键。默认时间限制是500毫秒，可以通过设置<code>repeat-time</code>把这个时间更改为更大的数值。</p>
<p>常用的配置：</p>
<pre class="line-numbers language-none"><code class="language-none"># 重新绑定前缀键，最后一行是为了把这个组合键发送给需要的程序，这样在配置生效之后可以按两次Ctrl-a把Ctrl-a发送给tmux里的程序。
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# 使用prefix r重载配置
bind-key r source-file ~&#x2F;.tmux.conf\; display-message &quot;tmux.conf reloaded&quot;

# 使用Alt-方向键切换窗格
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
unbind Left
unbind Right
unbind Up
unbind Down

# 使用Shift-方向键切换窗口
bind -n S-Left previous-window
bind -n S-Right next-window
unbind n
unbind p

# 更直观的切分窗口
bind | split-window -h
bind - split-window -v

# 允许鼠标选择窗格
set -g mouse-select-pane on

# 切换窗格同步
bind &#x3D; setw synchronize-panes\; display-message &quot;synchronize-panes #&#123;?pane_synchronized, on, off&#125;&quot;

# 设置窗格编号显示时间
set -g display-panes-time 5000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://github.com/tmux/tmux/wiki">Home · tmux/tmux Wiki</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/43687973">手把手教你使用终端复用神器 Tmux，丢掉鼠标不是梦[视频] - 知乎</a></li>
<li><a href="https://www.bilibili.com/video/BV1KW411Z7W3">手把手教你使用终端复用神器 tmux_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">Tmux 使用教程 - 阮一峰的网络日志</a></li>
<li><a href="https://qastack.cn/programming/16325449/how-to-send-a-command-to-all-panes-in-tmux">如何向tmux中的所有窗格发送命令？</a></li>
<li><a href="https://www.jianshu.com/p/fd3bbdba9dc9">tmux简洁教程及config关键配置 - 简书</a></li>
<li><a href="https://www.w3cschool.cn/tmux/huevcozt.html">第2章 配置 tmux_w3cschool</a></li>
<li><a href="https://xiaozhou.net/learn-the-command-line-tmux-2018-04-27.html">程序员内功系列--Tmux篇 | iTimothy</a></li>
</ul>
]]></content>
      <tags>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】桌面用PDF重排工具：K2pdfopt简明教程</title>
    <url>/2020/06/16/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_k2pdfopt.png" alt="k2pdfopt.png" /><figcaption aria-hidden="true">k2pdfopt.png</figcaption>
</figure>
<p>用 Kindle 阅读 PDF 一直以来都遭到小伙伴们的无限吐槽，在那 Kindle 还能越狱的时代，我们有 Koreader 之类优秀的 Kindle 第三方插件实现 PDF 文档的实时重排，但是随着 Kindle 固件版本升级的频率加快，越狱已经跟不上进度了，所以 Koreader 等第三方插件也失去了着力点。好在现在有了 K2pdfopt，这是一款可以直接在桌面环境下运行的软件，桌面系统比 Kindle 的性能强劲，在重排 PDF 的时候更快速，也从根本上脱离了越狱的限制。</p>
<h1 id="一k2pdfopt-的重排效果">一、K2pdfopt 的重排效果</h1>
<table>
<colgroup>
<col style="width: 6%" />
<col style="width: 31%" />
<col style="width: 31%" />
<col style="width: 31%" />
</colgroup>
<thead>
<tr class="header">
<th><strong>示例类型</strong></th>
<th><strong>原始文件</strong></th>
<th><strong>为 Kindle 优化</strong> (默认设置)</th>
<th><strong>为智能手机优化</strong> (<a href="http://www.willus.com/k2pdfopt/help/dpi.shtml">-odpi 250</a>)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>四栏内容：</td>
<td><a href="http://www.willus.com/k2pdfopt/examples/original/declaration.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example1_1.png" alt="Example1_1.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/kindle/declaration_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example1_2.png" alt="Example1_2.png" /></a> (must use <strong>-col 4</strong>)</td>
<td><a href="http://www.willus.com/k2pdfopt/examples/smartphone/declaration_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example1_3.png" alt="Example1_3.png" /></a> (must use <strong>-col 4</strong>)</td>
</tr>
<tr class="even">
<td>扫描内容：</td>
<td><a href="http://www.willus.com/k2pdfopt/examples/original/pooh.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example2_1.png" alt="Example2_1.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/kindle/pooh_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example2_2.png" alt="Example2_2.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/smartphone/pooh_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example2_3.png" alt="Example2_3.png" /></a></td>
</tr>
<tr class="odd">
<td>两栏内容：</td>
<td><a href="http://www.willus.com/k2pdfopt/examples/original/sig-alternate.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example3_1.png" alt="Example3_1.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/kindle/sig-alternate_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example3_2.png" alt="Example3_2.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/smartphone/sig-alternate_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example3_3.png" alt="Example3_3.png" /></a></td>
</tr>
<tr class="even">
<td>一栏内容：</td>
<td><a href="http://www.willus.com/k2pdfopt/examples/original/PDF-Example-Fonts-1.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example4_1.png" alt="Example4_1.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/kindle/PDF-Example-Fonts-1_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example4_2.png" alt="Example4_2.png" /></a></td>
<td><a href="http://www.willus.com/k2pdfopt/examples/smartphone/PDF-Example-Fonts-1_k2opt.pdf"><img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_Example4_3.png" alt="Example4_3.png" /></a></td>
</tr>
</tbody>
</table>
<h1 id="二下载软件-k2pdfopt">二、下载软件 K2pdfopt</h1>
<p>K2pdfopt 支持 Windows、Mac OS X、Linux 系统，请下载适用于自己系统的版本：</p>
<p>软件下载页面：<a href="http://www.willus.com/k2pdfopt/download/">官方下载页面</a></p>
<p>*<strong>注意：</strong>在使用 K2pdfopt 时，请避免路径、文件名出现中文字符。</p>
<h1 id="三windows-版-带gui-版本操作步骤">三、Windows 版 带GUI 版本操作步骤</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_k2pdfopt_gui_win.png" alt="k2pdfopt_gui_win.png" /><figcaption aria-hidden="true">k2pdfopt_gui_win.png</figcaption>
</figure>
<p>仅有 Windows 版 K2pdfopt 集成了带界面的 GUI 版本，使用方法也很简单：</p>
<ol type="1">
<li>点击“ADD FILE”或直接通过鼠标将 PDF 文档导入到“File list”。支持导入多个 PDF 文档。</li>
<li>在“Env. var”栏填写转换后文档的输出路径。留空代表输出转换后的文档到源文件所在目录。</li>
<li>在“Additional opions”栏填写“-ws -1”。据网友经验，填写此项可改善排版。</li>
<li>选择设备“Device”。每一种设备的尺寸和 DPI 是不同的，请根据你的设备选择。</li>
<li>选择转换模式“Conversion Mode”，一般使用默认“default”即可。可在左侧面板微调参数。</li>
<li>设置好后可点击右下角的“Preview”预览效果。最后点击“Convert All Files”进行开始转换。</li>
</ol>
<p><strong>官方使用引导视频（英文）：</strong><a href="http://v.youku.com/v_show/id_XMTI4Nzg5NzM0MA==.html">优酷视频</a></p>
<h1 id="四命令行版本操作步骤">四、命令行版本操作步骤</h1>
<p>K2pdfopt 在 Windows、Mac OS X、Linux 系统中均有命令行版本。</p>
<h2 id="windows-系统">1、Windows 系统：</h2>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_k2pdfopt_win.png" alt="k2pdfopt_win.png" /><figcaption aria-hidden="true">k2pdfopt_win.png</figcaption>
</figure>
<p>Windows 版 K2pdfopt 默认是打开 GUI 版本的。如果想要在 Windows 下使用命令行版本的 K2pdfopt，需要进行以下操作：</p>
<ol type="1">
<li>在可执行文件“K2pdfopt.exe”上点击鼠标右键，在弹出的菜单中选择“创建快捷方式”。</li>
<li>在创建的快捷方式上点击鼠标右键，在弹出的菜单中选择“属性”，在弹出的对话框中，在“目标”栏中的路径后面添加“ -gui-”（注意要有空格），点击“确定”。</li>
<li>双击修改后的快捷方式运行命令行模式的 K2pdfopt。</li>
<li>可根据提示填写参数。比如“-ws -1”，回车确认（使用默认设置可忽略此步）。</li>
<li>把 PDF 文档拖放到命令提示符上(或输入 PDF 路径)，回车确认。然后再次回车开始转换。</li>
<li>最后生成名称类似“file_k2opt.pdf”的最终文档。</li>
</ol>
<h2 id="mac-os-x-系统">2、Mac OS X 系统：</h2>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_06_16_%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%A1%8C%E9%9D%A2%E7%94%A8PDF%E9%87%8D%E6%8E%92%E5%B7%A5%E5%85%B7%EF%BC%9AK2pdfopt%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B_k2pdfopt_mac.png" alt="k2pdfopt_mac.png" /><figcaption aria-hidden="true">k2pdfopt_mac.png</figcaption>
</figure>
<ol type="1">
<li>下载 K2pdfopt 到桌面；</li>
<li>打开“终端”，输入 <code>cd ~/desktop</code>；</li>
<li>接着输入 <code>chmod 755 k2pdfopt</code>，按回车键将 K2pdfopt 变成可执行文件；</li>
<li>双击运行 K2pdfopt；</li>
<li>可根据提示填写参数。比如“-ws -1”，回车确认（使用默认设置可忽略此步）；</li>
<li>然后把 PDF 文档拖放到命令提示符上，点击回车确认。然后再次点回车开始转换；</li>
<li>最后生成名称类似“file_k2opt.pdf”的最终文档。</li>
</ol>
<h2 id="linux-系统">3、Linux 系统：</h2>
<p>在 Linux 系统中，需要将下载的 k2pdfopt 文件移动到你自己的路径，并将其修改为可执行，然后再通过终端运行它。具体步骤请打开一个终端然后参照下面的命令依次输入：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/Downloads/ <span class="token comment">#这里的“/Downloads/”是指下载 K2pdfopt 所在的路径</span>
<span class="token function">sudo</span> <span class="token function">mv</span> k2pdfopt /usr/bin <span class="token comment">#这里的路径可以按照你的喜好设置</span>
<span class="token function">chmod</span> +x /usr/bin/k2pdfopt <span class="token comment">#将 k2pdfopt 变成可执行文件</span>
<span class="token builtin class-name">cd</span> /my/pdf/folder <span class="token comment">#定位到 PDF 文档所在目录</span>
k2pdfopt myfile.pdf <span class="token comment">#开始转换 PDF 文档</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>你可以创建一个脚本。具体操作请<a href="http://www.willus.com/k2pdfopt/help/linux.shtml">移步这里</a>。</p>
<h1 id="转载来源">转载来源</h1>
<p><a href="https://bookfere.com/post/134.html">强大的桌面用 PDF 重排工具：K2pdfopt 简明教程 – 书伴</a></p>
]]></content>
      <tags>
        <tag>转载</tag>
        <tag>Kindle</tag>
        <tag>PDF</tag>
      </tags>
  </entry>
  <entry>
    <title>一键脚本</title>
    <url>/2021/09/03/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="cb29213d4a2cbfec108a9c243053f414b2f457504a676e9b850e2b774352dc0b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-flip">
      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="请输入密码">请输入密码</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>不翻墙就能使用Google搜索</title>
    <url>/2019/01/03/%E4%B8%8D%E7%BF%BB%E5%A2%99%E5%B0%B1%E8%83%BD%E4%BD%BF%E7%94%A8Google%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<p><code>注：此方法目前失效中（2019-3-5）</code></p>
<h1 id="忽然感冒google搜索的原因">忽然感冒Google搜索的原因</h1>
<p>我一直都是用搜狗搜索作为默认搜索引擎。因为相比百度，搜狗的知乎搜索比较方便，但是搜狗搜索也有一些时候并不能搜出我想要的内容，因此我想换成Google的搜索。遗憾的是，在天朝，目前还无法直接使用Google搜索，而我非常懒，不想自己每次需要使用Google的时候都花一些精力用来翻墙。能不能让Google也变得和搜狗一样，随时搜索不需要翻墙呢？</p>
<p>办法还是有的，其实很早以前就有了，就是更改hosts。</p>
<h1 id="关于hosts">关于hosts</h1>
<blockquote>
<p>hosts文件（域名解析文件）是一个用于储存计算机网络中各节点信息的计算机文件。这个文件负责将主机名称映射到相应的IP地址。hosts文件通常用于补充或取代网络中DNS的功能。和DNS不同的是，计算机的用户可以直接对hosts文件进行控制。</p>
<p>hosts文件也可以用于其它情况，例如可以将已知的广告服务器重定向到无广告的机器（通常是该计算机自身的IP地址：127.0.0.1）上来过滤广告。同时也可以通过不下载网络广告，从而减少带宽。使用hosts文件还可以减少对DNS服务器的访问来加快访问速度并减少带宽消耗。</p>
<p>hosts文件的另一个重要用途就是用于拦截一些恶意网站的请求，从而防止访问欺诈网站或感染一些病毒或恶意软件。但同时，这个文件也可能被病毒或恶意软件所利用来阻止用户更新杀毒软件或访问特定网站。</p>
<p>在中国大陆，由于防火长城的DNS劫持，有一些网民也借使用hosts文件来强制将特定网站指定到未屏蔽的IP上。但自2018年8月24日起，防火长城开始启用基于SNI检测和TCP连接重置的手段进行封锁。所以修改Hosts绕过封锁的方法，绝大多数网站不再完全适用。</p>
<p>——维基百科</p>
</blockquote>
<h1 id="自动更新hosts">自动更新hosts</h1>
<p>通过改hosts访问谷歌的方式有效期非常短，因为GFW封锁IP的速度非常快，因此需要时常更新hosts，我找到了一个专门用来更新hosts的软件<code>SwitchHosts!</code>。</p>
<blockquote>
<p>SwitchHosts! 是一个管理、切换多个 hosts 方案的工具。</p>
<p>它是一个免费开源软件。</p>
<p>——SwitchHosts!官网</p>
</blockquote>
<p>下面来介绍一下使用方式。</p>
<h2 id="下载switchhosts">下载<code>SwitchHosts!</code></h2>
<p>从<code>SwitchHosts!</code>官网下载最新的软件，根据当前操作系统选择对应的版本。<a href="https://oldj.github.io/SwitchHosts/#cn">点击这里访问官网</a></p>
<p>软件下载完以后解压即可，不需要安装。</p>
<h2 id="使用switchhosts">使用<code>SwitchHosts!</code></h2>
<p>以Windows系统为例，进入解压的目录，<strong>以管理员身份运行</strong>。</p>
<p>软件界面如下所示。如果是英文界面，可以在设置里修改语言为中文。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_01_03_%E4%B8%8D%E7%BF%BB%E5%A2%99%E5%B0%B1%E8%83%BD%E4%BD%BF%E7%94%A8Google%E6%90%9C%E7%B4%A2_SwitchHosts!%E4%B8%BB%E7%95%8C%E9%9D%A2.png" alt="SwitchHosts!主界面.png" /><figcaption aria-hidden="true">SwitchHosts!主界面.png</figcaption>
</figure>
<p>软件左侧最上方的<code>系统 Hosts</code>，点击就可以在右边看到当前系统上正在使用的hosts文件内容，下面的<code>my hosts</code>是自己手动添加的IP地址，在这里我们不会使用它；<code>backup</code>里保存的是默认的hosts内容；下面的三个就是我添加的hosts规则。右边的开关打开（绿色）表示将这个规则应用到系统hosts，就是说会把规则里的内容复制到系统的hosts中，如果开关没有打开，那么这个规则是不生效的。接下来我会介绍如何添加规则。</p>
<p>点击左下角的+号，添加host规则。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_01_03_%E4%B8%8D%E7%BF%BB%E5%A2%99%E5%B0%B1%E8%83%BD%E4%BD%BF%E7%94%A8Google%E6%90%9C%E7%B4%A2_%E6%B7%BB%E5%8A%A0host%E8%A7%84%E5%88%99.png" alt="添加host规则.png" /><figcaption aria-hidden="true">添加host规则.png</figcaption>
</figure>
<p>我们需要的是远程规则，也就是那些其他人一直在维护的IP列表，我在GitHub上找到了3个可用的hosts表。</p>
<ul>
<li><a href="https://github.com/googlehosts/hosts">GitHub - googlehosts/hosts: 镜像：https://coding.net/u/scaffrey/p/hosts/git</a></li>
<li><a href="https://github.com/lennylxx/ipv6-hosts">GitHub - lennylxx/ipv6-hosts: Fork of https://code.google.com/archive/p/ipv6-hosts/</a></li>
<li><a href="https://github.com/popcorner/cernet-ipv6-hosts">GitHub - popcorner/cernet-ipv6-hosts: Lightweight IPv6 hosts! Access to Google, YouTube, Facebook, Wikipedia via IPv6 and avoid unnecessary block.</a></li>
</ul>
<p>不过要填写的URL地址并不是上面的链接，以第一个连接为例，我们需要从仓库列表里找到hosts文件，然后点击下图中所示的Raw按钮，就会跳转到一个纯文本的页面。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_01_03_%E4%B8%8D%E7%BF%BB%E5%A2%99%E5%B0%B1%E8%83%BD%E4%BD%BF%E7%94%A8Google%E6%90%9C%E7%B4%A2_%E8%8E%B7%E5%8F%96URL%E5%9C%B0%E5%9D%80.png" alt="获取URL地址.png" /><figcaption aria-hidden="true">获取URL地址.png</figcaption>
</figure>
<p>这时候页面的URL（也就是地址栏里面的网址）就是我们需要填写的URL地址，对于第一个链接，我得到的URL地址是https://raw.githubusercontent.com/googlehosts/hosts/master/hosts-files/hosts。</p>
<p>将这个地址填写到添加host规则的URL地址一栏，并且设定一个自动更新的频率，点击确定，就成功添加了。这时只要打开开关，就成功修改hosts文件了。</p>
<h2 id="刷新dns">刷新DNS</h2>
<p>修改好了以后需要刷新一下DNS缓存，这里我只介绍Windows的刷新方法。</p>
<p>打开命令提示符，输入：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ipconfig /flushdns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>刷新完以后打开浏览器，是不是能够使用Google搜索了呢？</p>
<p>之后只需要时不时使用<code>SwitchHosts!</code>更新一下hosts文件就可以不翻墙使用Google搜索了！</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="http://shaofan.org/google-hosts/">利用SwitchHosts!工具自动更新Google Hosts</a></li>
<li>如果第一个链接遇到问题，参考老D的博客。<a href="https://laod.cn/hosts/">hosts | 老D博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>hosts</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（一）：解决LaTeX无法显示的问题、更换主题</title>
    <url>/2018/09/04/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p>写博客的时候遇到了一些问题，在本地可以渲染的LaTeX语法，到了网上就无法显示了。就像下面这个样子。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E6%9C%AC%E5%9C%B0%E6%B2%A1%E9%97%AE%E9%A2%98.png" alt="本地没问题.png" /><figcaption aria-hidden="true">本地没问题.png</figcaption>
</figure>
<p>本地渲染正常。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E7%BD%91%E4%B8%8A%E6%9C%89%E9%97%AE%E9%A2%98.png" alt="网上有问题.png" /><figcaption aria-hidden="true">网上有问题.png</figcaption>
</figure>
<p>网上渲染不正常。</p>
<p>网上有通过安装hexo-math包来解决的文章，但是自己尝试后由于npm出了毛病，并没有成功。</p>
<p>网上的数学公式大多是用MathJax（适用于所有浏览器的数学JavaScript显示引擎——<a href="https://www.mathjax.org/">MathJax官网</a>）来渲染显示的。后来听说NexT主题已经集成了MathJax，我最终打算通过安装NexT主题来解决这个问题。</p>
<h1 id="安装next主题">安装NexT主题</h1>
<p>在博客根目录下执行如下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/next-theme/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>意思是用Git把next主题克隆到themes文件夹下。这样安装的好处是之后的更新比较方便。更新时在<code>themes/next</code>文件夹里使用如下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Git就会拉取最新的分支到本地。</p>
<p>也可以使用子模块功能：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/next-theme/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>随后到博客根目录下打开<code>_config.yml</code>，找到theme属性，并将默认的landscape改为next。</p>
<p>之后清理缓存：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并像之前一样部署，就可以在网站上看到新的主题了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E6%96%B0%E4%B8%BB%E9%A2%98.png" alt="新主题.png" /><figcaption aria-hidden="true">新主题.png</figcaption>
</figure>
<h1 id="配置mathjax">配置MathJax</h1>
<p>主题更换完了，但是MathJax默认没有打开，要更改配置文件来打开它。</p>
<p>进入<code>themes/next</code>目录，找到目录下的<code>_config.yml</code>文件（注意不是根目录下的那个！），打开它，定位到<code>math</code>，把<code>enable</code>的值由默认的false改为true，这样MathJax就打开了，也可以将下面的<code>per_page</code>选项改为false，如果这个值为true，那么MathJax只会渲染在文章开头打了特定标签的文章。如下图所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE.png" alt="修改配置.png" /><figcaption aria-hidden="true">修改配置.png</figcaption>
</figure>
<p>重新部署博客，公式终于显示出来了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E9%83%A8%E5%88%86%E5%85%AC%E5%BC%8F%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF.png" alt="部分公式显示错误.png" /><figcaption aria-hidden="true">部分公式显示错误.png</figcaption>
</figure>
<p>但是新的问题出现了，有部分公式无法正常显示。查阅网上资料得知是由于MathJax与Markdown默认渲染冲突。</p>
<h1 id="更换hexo的markdown引擎">更换Hexo的Markdown引擎</h1>
<p>尝试了修改Hexo渲染源码，也就是修改<code>nodes_modules/marked/lib/marked.js</code>文件的方法失效后，我选择了另外一种方法，就是把Hexo默认的Markdown渲染引擎<code>hexo-renderer-marked</code>换成了<code>hexo-renderer-pandoc</code>。也有教程建议换成<code>hexo-renderer-kramed</code>或者<code>hexo-renderer-markdown-it</code>的，个人认为还是<code>hexo-renderer-pandoc</code>更好一些，基本上完美解决问题，其它的都还存在部分问题。</p>
<h2 id="安装pandoc">安装Pandoc</h2>
<p>首先需要安装Pandoc，因为<code>hexo-renderer-pandoc</code>是借助Pandoc来渲染Markdown的。Pandoc是一个类似于格式工厂一样的工具，专门转换标记语言。<a href="http://www.pandoc.org/">前往Pandoc官网</a></p>
<p>安装过程比较简单，基本上一路默认就行了。</p>
<h2 id="更换引擎">更换引擎</h2>
<p>就是卸载默认的，再安装新的：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall --save hexo-renderer-marked
<span class="token function">npm</span> <span class="token function">install</span> --save hexo-renderer-pandoc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果出现了<code>npm ERR!</code>的问题，可以改用Yarn来代替npm，具体更改方式见这一篇文章<a href="https://xfdj.github.io/2018/09/05/%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7yarn/">使用Node.js包管理工具Yarn</a>。如果用Yarn，命令就变成：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> remove hexo-renderer-marked
<span class="token function">yarn</span> <span class="token function">add</span> hexo-renderer-pandoc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>现在重新部署博客查看效果：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E8%A7%A3%E5%86%B3LaTeX%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%81%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98_%E6%98%BE%E7%A4%BA%E6%AD%A3%E5%B8%B8.png" alt="显示正常.png" /><figcaption aria-hidden="true">显示正常.png</figcaption>
</figure>
<p><code>hexo-renderer-pandoc</code>有个副作用，就是原来文章里的图片是不会显示图片说明文字的，不过这个插件把说明文字放在图片下面（就像上面的图片一样），影响不是很大，今后看看有没有什么办法去掉了。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>Git</tag>
        <tag>MathJax</tag>
        <tag>Pandoc</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（七）：放一只看板娘</title>
    <url>/2018/10/06/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9A%E6%94%BE%E4%B8%80%E5%8F%AA%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
    <content><![CDATA[<p>要问我为啥需要一只看板娘？因为萌啊~</p>
<p>看板娘的GitHub主页<a href="https://github.com/EYHN/hexo-helper-live2d">点此进入</a>。</p>
<h1 id="安装">安装</h1>
<p>安装模块：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="配置">配置</h1>
<p>向Hexo的<code>_config.yml</code>站点配置文件或主题的<code>_config.yml</code>文件添加如下配置：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Live2D</span>
<span class="token comment">## https://github.com/EYHN/hexo-helper-live2d</span>
<span class="token key atrule">live2d</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># enable: false</span>
  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local <span class="token comment"># 默认</span>
  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/ <span class="token comment"># 插件在站点上的根目录(相对路径)</span>
  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/ <span class="token comment"># 脚本文件相对与插件根目录路径</span>
  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/ <span class="token comment"># 模型文件相对与插件根目录路径</span>
  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>
  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 调试, 是否在控制台输出日志</span>
  <span class="token key atrule">model</span><span class="token punctuation">:</span>
    <span class="token comment"># yarn add package name</span>
    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>koharu
    <span class="token key atrule">scale</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 模型与canvas的缩放</span>
    <span class="token key atrule">hHeadPos</span><span class="token punctuation">:</span> <span class="token number">0.5</span> <span class="token comment"># 模型头部横坐标</span>
    <span class="token key atrule">vHeadPos</span><span class="token punctuation">:</span> <span class="token number">0.618</span> <span class="token comment"># 模型头部纵坐标</span>
  <span class="token key atrule">display</span><span class="token punctuation">:</span>
    <span class="token key atrule">superSample</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment"># 超采样等级</span>
    <span class="token key atrule">hOffset</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment"># canvas水平偏移</span>
    <span class="token key atrule">vOffset</span><span class="token punctuation">:</span> <span class="token number">-40</span> <span class="token comment"># canvas垂直偏移</span>
    <span class="token key atrule">position</span><span class="token punctuation">:</span> left <span class="token comment"># 显示位置：left或right</span>
    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">100</span> <span class="token comment"># canvas的长度</span>
    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">200</span> <span class="token comment"># canvas的高度</span>
  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>
    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否在移动设备上显示</span>
    <span class="token key atrule">scale</span><span class="token punctuation">:</span> <span class="token number">0.2</span> <span class="token comment"># 移动设备上的缩放</span>
  <span class="token key atrule">react</span><span class="token punctuation">:</span>
    <span class="token key atrule">opacityDefault</span><span class="token punctuation">:</span> <span class="token number">0.5</span> <span class="token comment"># 默认透明度</span>
    <span class="token key atrule">opacityOnHover</span><span class="token punctuation">:</span> <span class="token number">0.2</span> <span class="token comment"># 鼠标移上透明度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配置里<code>model:</code>之前的选项保持默认就好，<code>model:</code>下面的参数可以自定义。</p>
<h1 id="模型">模型</h1>
<p>推荐使用现有的模型（<a href="https://github.com/xiazeyu/live2d-widget-models">去看看现有的模型</a>）。</p>
<p>你需要先使用下面的指令安装模型（以<code>live2d-widget-model-koharu</code>为例）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> live2d-widget-model-koharu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后将模型的名字填入刚才配置文件中的<code>use:</code>后，就像上面贴出的配置文件一样。</p>
<p>重新部署博客就会出现一只萌萌的看板娘啦~</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9A%E6%94%BE%E4%B8%80%E5%8F%AA%E7%9C%8B%E6%9D%BF%E5%A8%98_koharu%E7%9C%8B%E6%9D%BF%E5%A8%98.png" alt="koharu看板娘.png" /><figcaption aria-hidden="true">koharu看板娘.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（三）：添加本地搜索功能</title>
    <url>/2018/10/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>随着文章的增加，搜索功能也变得越来越重要，不过搜索功能一般是需要数据库支持的，所以WordPress一类动态博客默认都支持搜索，但是Hexo等静态博客由于没有后端数据库，所以添加搜索需要花一点心思。</p>
<p>本地搜索，是指通过插件生成序列化数据，前端调用脚本处理数据，返回搜索结果。看不懂没关系，<del>因为我也不懂</del>因为只需要安装一个插件就完事了。</p>
<p><code>注：本方法基于NexT主题。</code></p>
<h1 id="安装hexo-generator-searchdb插件">安装hexo-generator-searchdb插件</h1>
<p>从NexT主题的配置文件中了解到，NexT使用<code>hexo-generator-searchdb</code>插件提供本地搜索支持，所以首先需要安装这款插件，方法很简单，只需要在博客根目录下运行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-generator-searchdb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果有安装另一款包管理工具Yarn，也可以运行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-generator-searchdb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>效果是相同的。</p>
<h1 id="修改主题配置文件">修改主题配置文件</h1>
<p>进入NexT主题所在的目录（我这里的目录是<code>themes/next</code>）打开<code>_config.yml</code>。找到<code>local_search</code>，把<code>enable: false</code>改为<code>enable: true</code>，保存退出。</p>
<p>最后更新一下博客，搜索按钮就出现啦。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD_%E6%90%9C%E7%B4%A2%E7%95%8C%E9%9D%A2.png" alt="搜索界面.png" /><figcaption aria-hidden="true">搜索界面.png</figcaption>
</figure>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://theme-next.js.org/docs/third-party-services/search-services.html">Search Services | NexT</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（九）：七牛云的图床之殇</title>
    <url>/2018/12/06/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87/</url>
    <content><![CDATA[<p>我搭建起现在看到的博客，也是在网上搜索了很多教程，对比着一步步搭建出来的。原本以为一旦建好就万事大吉，后来发生的事情告诉我，我还是太年轻了。</p>
<h1 id="七牛云图床出现的问题">七牛云图床出现的问题</h1>
<p>博客的图片我参照着网上的大部分教程，存储在了七牛云上。</p>
<p>不过最近重新查看我的博客时，却发现图片全都打不开了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5.png" alt="图片显示不出来.png" /><figcaption aria-hidden="true">图片显示不出来.png</figcaption>
</figure>
<p>然后我去七牛云的对象存储里查看，发现我的图片都在，就是博客里无法显示。</p>
<p>为什么会这样呢？</p>
<p>原因很简单：<del>没氪金</del>当时使用七牛云的对象存储当图床使用的时候，本着搭博客不花一分钱的精神，使用的是免费的套餐，然而当时没有注意的是，七牛为免费的服务分配的是测试域名，而测试域名到期之后被回收了，所以博客里面的图片解析失效了，就没办法显示。（坑爹啊）</p>
<h1 id="解决方案">解决方案</h1>
<p>图片都显示不出来了，那肯定影响很大。我到网上去搜索解决方法，总结起来大致有以下几种：</p>
<ul>
<li>和文章一起保存：回归没有图床时的解决方案，发布的时候图片和文章全部存到GitHub上。
<ul>
<li>好处：免费，文章能看在图片就能看。</li>
<li>坏处：GitHub的容量不大，保存文章绰绰有余，但是图片会有超过容量的风险。</li>
</ul></li>
<li>买一个域名：给七牛云提供一个自己的域名，就可以恢复解析。
<ul>
<li>好处：不用迁移图片。</li>
<li>坏处：需要钱。</li>
</ul></li>
<li>获取新的测试域名：在七牛云新开一个存储桶，然后把图片从原来的存储桶批量移动到新的存储桶去。
<ul>
<li>好处：免费。</li>
<li>坏处：不能根本解决问题，过一段时间新的测试域名也会失效。</li>
</ul></li>
<li>寻找新的图床：当然，如果有和七牛云类似的图床最好了。
<ul>
<li>好处：一劳永逸。</li>
<li>坏处：迁移图片比较麻烦。</li>
</ul></li>
</ul>
<p>对我来说，最后一个方案显然是最适合的，而和七牛云类似还免费的图床有没有呢？有！它就是马化腾爸爸的腾讯云。（有个哥们独辟蹊径用QQ空间当免费图床，也是非常不错的解决方案，感兴趣的可以参考<a href="https://blog.csdn.net/Mondobongoo/article/details/83905361">七牛云测试域名过期失效后の自救指南 - Mondobongoo的博客 - CSDN博客</a>，也许在本文的方法失效后，就该用QQ空间了。</p>
<p><code>注：从2019年开始，腾讯云的对象存储免费额度从永久变为只剩6个月了。意味着如果你想要免费的图床得另辟蹊径。</code></p>
<h2 id="注册登录腾讯云cos">注册登录腾讯云COS</h2>
<blockquote>
<p>什么是对象存储COS？</p>
<p>对象存储（Cloud Object Storage，COS）是面向企业和个人开发者提供的高可用，高稳定，强安全的云端存储服务。您可以将任意数量和形式的非结构化数据放入COS，并在其中实现数据的管理和处理。</p>
</blockquote>
<p>之前存储图片使用的七牛云也是使用它的对象存储。为了使用腾讯云的对象存储COS，首先我们需要注册并登录腾讯云。</p>
<p>打开腾讯云对象存储COS的网站（https://cloud.tencent.com/product/cos），网页如下所示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_%E8%85%BE%E8%AE%AF%E4%BA%91COS%E7%BD%91%E9%A1%B5.png" alt="腾讯云COS网页.png" /><figcaption aria-hidden="true">腾讯云COS网页.png</figcaption>
</figure>
<p>点击<code>立即使用</code>按钮，转到登录界面</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_%E8%85%BE%E8%AE%AF%E4%BA%91COS%E7%99%BB%E5%BD%95%E9%A1%B5.png" alt="腾讯云COS登录页.png" /><figcaption aria-hidden="true">腾讯云COS登录页.png</figcaption>
</figure>
<p>这里我使用微信扫码登录。如果是第一次登录，需要进行实名认证，认证过程中如实填写自己的信息，并且用微信向账号里转1分钱就好（这也是我为什么直接使用微信账号的原因，并且请放心，这1分钱是整个过程里唯一的花钱项目），认证完成并且绑定了微信之后，就可以开始使用COS的功能了。</p>
<h2 id="将图片从七牛云下载到本地">将图片从七牛云下载到本地</h2>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_%E4%B8%83%E7%89%9B%E4%BA%91%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%BD%91%E9%A1%B5.png" alt="七牛云对象存储内容管理网页.png" /><figcaption aria-hidden="true">七牛云对象存储内容管理网页.png</figcaption>
</figure>
<p>如果图片不多，可以直接在七牛云的内容管理网页一张一张下载，但是如果图片的量比较大，那么可以通过七牛云提供的小工具<code>qshell</code>来批量下载图片，<code>qshell</code>是一个命令行小工具，提供了<code>qdownload</code>命令批量下载图片，不过很遗憾，这个命令是需要钱的，为了规避掉这个麻烦，我们需要绕一点点弯路。</p>
<p><code>注：以下过程需要一点编程基础</code></p>
<p>首先是从七牛的开发者中心（https://developer.qiniu.com/kodo/tools/1302/qshell）下载这个小工具。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_qshell%E4%B8%8B%E8%BD%BD%E9%A1%B5%E9%9D%A2.png" alt="qshell下载页面.png" /><figcaption aria-hidden="true">qshell下载页面.png</figcaption>
</figure>
<p>下载完成之后解压，然后进入解压出来的目录，里面应该有很多个文件，分别对应在不同的操作系统下的<code>qshell</code>程序，根据下面的表格选择在你的操作系统上运行的文件。</p>
<table>
<thead>
<tr class="header">
<th>文件名</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>qshell_linux_x86</td>
<td>Linux 32位系统</td>
</tr>
<tr class="even">
<td>qshell_linux_x64</td>
<td>Linux 64位系统</td>
</tr>
<tr class="odd">
<td>qshell_linux_arm</td>
<td>Linux ARM CPU</td>
</tr>
<tr class="even">
<td>qshell_windows_x86.exe</td>
<td>Windows 32位系统</td>
</tr>
<tr class="odd">
<td>qshell_windows_x64.exe</td>
<td>Windows 64位系统</td>
</tr>
<tr class="even">
<td>qshell_darwin_x64</td>
<td>Mac 64位系统</td>
</tr>
</tbody>
</table>
<p>比如我是Windows 64位系统，所以我会删掉其他的文件，只保留<code>qshell_windows_x64.exe</code>，为了方便将其更名为<code>qshell.exe</code>。</p>
<p>之后，在命令行下进入<code>qshell.exe</code>所在的目录，运行这个命令。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qshell account <span class="token operator">&lt;</span>AK<span class="token operator">></span> <span class="token operator">&lt;</span>SK<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个命令是用来添加账号的，否则没有办法获取图片信息，命令中的<code>&lt;AK&gt;</code>和<code>&lt;SK&gt;</code>需要在个人中心的密钥管理标签下找到对应的一串字符来替换，如下图所示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_12_06_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B9%9D%EF%BC%89%EF%BC%9A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E5%9B%BE%E5%BA%8A%E4%B9%8B%E6%AE%87_%E4%B8%83%E7%89%9B%E4%BA%91%E5%AF%86%E9%92%A5%E7%AE%A1%E7%90%86%E7%BD%91%E9%A1%B5.png" alt="七牛云密钥管理网页.png" /><figcaption aria-hidden="true">七牛云密钥管理网页.png</figcaption>
</figure>
<p>接下来需要获取图片的文件名，在刚才的命令行中运行以下指令。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qshell listbucket <span class="token operator">&lt;</span>name<span class="token operator">></span> -o <span class="token operator">&lt;</span>output<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中的<code>&lt;name&gt;</code>替换成存储桶的名字，<code>&lt;output&gt;</code>则是输出的文件名，比如<code>names.txt</code>。执行完之后，在目录下就会多出来一个文件<code>names.txt</code>，里面是图片的信息。获取的文件列表组织格式如下（每个字段用Tab分隔）：</p>
<pre class="line-numbers language-none"><code class="language-none">Key\tSize\tHash\tPutTime\tMimeType\tFileType\tEndUser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我们只需要每一行的Key，也就是文件名。</p>
<p>为了防止文件过期导致无法下载，首先需要把存储桶中的文件移动到新的存储桶中去。</p>
<p>然后使用qshell的get命令分别下载图片，命令格式如下：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">qshell get <span class="token operator">&lt;</span>Bucket<span class="token operator">></span> <span class="token operator">&lt;</span>Key<span class="token operator">></span> <span class="token punctuation">[</span>-o <span class="token operator">&lt;</span>OutFile<span class="token operator">></span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>&lt;Bucket&gt;</code>是存储空间的名称，<code>&lt;Key&gt;</code>就是刚才获取的文件的名字，后面是保存在本地的名字，如果不指定默认使用存储空间中的名字。需要用这样的方法一张一张图片下载，如果有编程能力，可以利用刚才的<code>names.txt</code>文件批量生成下载命令。我就是这么干的。</p>
<h2 id="上传这些图片到腾讯云">上传这些图片到腾讯云</h2>
<p>这个部分很简单，只要在浏览器打开网址，登录腾讯云COS的账号，新建一个存储桶用来保存你的图片，最后把图片上传即可，都是图形化的操作，比较直观。</p>
<p><code>注：腾讯云的存储桶不支持文件名中带斜杠符号。</code></p>
<h2 id="修改博客文章中的图片链接">修改博客文章中的图片链接</h2>
<p>最后一个比较麻烦的工作是修改博客中图片链接的地址，新的图片的地址可以在存储桶中文件列表的详情链接中找到。</p>
<p>等到修改完之后就大功告成了，至此七牛云中的图片就已经全部转移到了腾讯云上，可以继续愉快地写博客了~</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://wdd.js.org/the-hard-way-of-markdown-insert-images.html">markdown博客图床上传的艰辛之路 | 洞香春</a></li>
<li><a href="https://blog.csdn.net/u010648555/article/details/84405003">【教程】使用gitee搭建免费的图床 - 阿飞(dufyun)的博客 - CSDN博客</a></li>
<li><a href="https://blog.liyuans.com/archives/free-img-host-collection.html">收集控: 免费图床收集 - Leonn 的博客</a></li>
<li><a href="https://blog.liyuans.com/archives/free-cloud-storage-collection.html">收集控: 免费云存储收集 - Leonn 的博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（二十一）：加密博客文章</title>
    <url>/2021/09/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%E5%8D%81%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8A%A0%E5%AF%86%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="背景">背景</h1>
<p>有时候需要写一些私密博客，输入密码才可以查看。在WordPress之类的动态博客上很好实现，因为网站有服务器可以处理加密请求。Hexo是一个静态博客框架，为了解决这个需求，需要安装一个插件：hexo-blog-encrypt。</p>
<h1 id="安装">安装</h1>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-blog-encrypt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="快速使用">快速使用</h1>
<p>单独对某篇文章使用，可以将password字段加到文章的front matter，如下：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> Hello world
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-01 14:00:00</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> hello
<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="高级设置">高级设置</h1>
<h2 id="文章">文章</h2>
<p>如果想修改显示的方式，可以将下面的一些字段加入文章的front matter。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> Hello world
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-01 14:00:00</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> hello
<span class="token key atrule">abstract</span><span class="token punctuation">:</span> 加密后首页显示的摘要
<span class="token key atrule">message</span><span class="token punctuation">:</span> 密码框的提示信息
<span class="token key atrule">wrong_pass_message</span><span class="token punctuation">:</span> 输入错误密码弹出的提示信息
<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="全局">全局</h2>
<p>还可以在博客配置文件<code>_config.yml</code>中设置全局配置。这里可以修改默认的摘要信息、提示信息，还可以配置要加密的标签。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">encrypt</span><span class="token punctuation">:</span>
  <span class="token key atrule">abstract</span><span class="token punctuation">:</span> 加密文章，请输入密码查看
  <span class="token key atrule">message</span><span class="token punctuation">:</span> 请输入密码查看文章内容
  <span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> 加密标签A<span class="token punctuation">,</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> passwordA<span class="token punctuation">&#125;</span>
    <span class="token punctuation">-</span> <span class="token punctuation">&#123;</span><span class="token key atrule">name</span><span class="token punctuation">:</span> 加密标签B<span class="token punctuation">,</span> <span class="token key atrule">password</span><span class="token punctuation">:</span> passwordB<span class="token punctuation">&#125;</span>
  <span class="token key atrule">wrong_pass_message</span><span class="token punctuation">:</span> 密码错误<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对某篇文章禁用标签加密，可以在文章的front matter将password设置为<code>""</code>。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> 一篇文章
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-01 14:00:00</span>
<span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 加密标签A
<span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">""</span>
<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="配置优先级">配置优先级</h2>
<p>文章的front matter &gt; <code>_config.yml</code> &gt; 默认配置</p>
<h2 id="禁用log">禁用log</h2>
<p>如果你想要禁止使用 log，你可以在 <code>_config.yml</code> 中增加一个 silent 属性，并将其设置为 true。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">encrypt</span><span class="token punctuation">:</span>
  <span class="token key atrule">silent</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="主题">主题</h2>
<p>可以在front matter或<code>_config.yml</code>使用theme属性来指定密码框的主题样式。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> 一篇文章
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-01-01 14:00:00</span>
<span class="token key atrule">password</span><span class="token punctuation">:</span> hello
<span class="token key atrule">theme</span><span class="token punctuation">:</span> xray
<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>或</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">encrypt</span><span class="token punctuation">:</span>
  <span class="token key atrule">theme</span><span class="token punctuation">:</span> xray<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可供选择的主题有：</p>
<ul>
<li>default</li>
<li>blink</li>
<li>shrink</li>
<li>flip</li>
<li>up</li>
<li>surge</li>
<li>wave</li>
<li>xray</li>
</ul>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://ednovas.xyz/2021/05/03/hexoencrypt/">Hexo 博客加密插件 | EdNovas 的小站</a></li>
<li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt/ReadMe.zh.md at master · D0n9X1n/hexo-blog-encrypt</a></li>
<li><a href="https://blog.fullstackpentest.com/how-to-crack-hexo-simple-encrypted-blog.html">如何破解并访问Hexo Blog已加密的文章 | Full Stack Pentest</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（二十）：实现Gitee Pages自动更新</title>
    <url>/2021/07/12/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%E5%8D%81%EF%BC%89%EF%BC%9A%E5%AE%9E%E7%8E%B0Gitee-Pages%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<p>自从将博客部署到码云（也就是Gitee）上之后，每次更新博客都需要手动前往Gitee Pages的管理网页点一下上面的更新按钮，实在是比较麻烦。网上也有一部分解决方法，不过要么要软件，要么是从GitHub上把博客同步过来，都不太适合我，我想找一种不需要外来软件和“曲线救国”的部署方式，随后我瞄准了Hexo本身的Scripts脚本功能，经过了很长时间的摸索，我终于找到了自动更新的方法。</p>
<p>之前使用过脚本实现新建文章后自动打开Typora的功能，不过那个时候是直接参考了现成的实现方法，代码也是照抄别人的，当时对代码的具体内容一知半解。后来简单学习了一下JavaScript之后，了解了代码的功能，分清了JavaScript和Node.js的关系。于是我产生了一个设想：能不能使用JavaScript模仿手动操作浏览器的方式，自动点击网页的更新按钮呢？</p>
<p>这其中最困难的部分就是找到一个自动化操作浏览器的包，之前搜索资料的时候发现了一些用于做自动化测试的包，比如Selenium、Helium、Puppeteer，这里面的一些包在Python中也有，我之前也尝试编写了一个使用Helium的Python程序用来自动化操作浏览器，功能是实现了，不过Helium的API有些简单，有时候按钮会被网页弹出的广告遮住，这时候程序就会失效，而且必须手动执行这个Python程序，后来就放弃了。</p>
<p>之后我发现了一个不错的工具：<a href="https://playwright.dev/">Playwright</a>。这是由微软公司2020年初发布的新一代自动化测试工具。它的优势在于：</p>
<ul>
<li>Playwright通过开发者工具与浏览器交互，安装简洁，不需要安装各种Driver。</li>
<li>Playwright几乎支持所有语言，通过调用内置浏览器所以启动速度更快。</li>
<li>Playwright基于Websocket（双向通讯）可自动获取浏览器实际情况。</li>
<li>Playwright为自动等待。
<ul>
<li>等待元素出现（定位元素时，自动等待30s，等待时间可以自定义，单位毫秒）</li>
<li>等待事件发生</li>
</ul></li>
<li><strong>Playwright支持自动录制并生成代码（杀手级功能！）</strong></li>
</ul>
<p>看到最后一项优点的时候，我直接心动了。随后我找到了使用它的方式。</p>
<h1 id="使用playwright">使用Playwright</h1>
<h2 id="安装">安装</h2>
<p>在博客目录下打开命令行，执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i playwright<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装Playwright。</p>
<p>安装完成后使用自动录制功能先录制一份登录脚本。做这一步的目的是获取登录后的Cookies和其它登录信息，Playwright支持保存这些信息以供下次使用。这样就不用每次都登录网页了。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx playwright codegen --save-storage<span class="token operator">=</span>auth.json https://gitee.com/xfdj_dragon/xfdj_dragon/pages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条命令会打开我的Gitee Pages管理页面，并记录下我之后在页面上的所有操作，你可以改成自己的地址，<code>--save-storage=auth.json</code>会在浏览器退出之后将Cookies和localStorage里的信息保存到auth.json中。执行这条命令后，一个浏览器页面会打开，并加载管理页面，此时还是未登录的状态，我这里的操作是登录我的码云账号，登录完成之后回到管理页面，就可以关掉浏览器了，此时目录下会多出一个<code>auth.json</code>文件。</p>
<p>下一步，在<code>scripts</code>目录下新建一个文件<code>refresh.js</code>。内容如下：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入Playwright包</span>
<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> chromium <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'playwright'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 自己实现的等待功能</span>
<span class="token keyword">function</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token comment">// Hexo 3</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'deployAfter'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> chromium<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      headless<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newContext</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      storageState<span class="token operator">:</span> <span class="token string">'auth.json'</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Open new page</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Go to https://gitee.com/xfdj_dragon/xfdj_dragon/pages</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">'https://gitee.com/xfdj_dragon/xfdj_dragon/pages'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Click text=更新</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">'#pages-branch > div.button.orange.redeploy-button.ui.update_deploy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    page<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">'dialog'</span><span class="token punctuation">,</span> <span class="token parameter">dialog</span> <span class="token operator">=></span> dialog<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">'text=更新'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">'#pages_deploying'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Gitee Pages服务正在部署...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">'body > div.site-content > div.ui.container > div > div.pages_message.d-flex-center > div.pages-form-body.padding-0 > p > span'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>timeout<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'已开启 Gitee Pages 服务，网站地址： https://xfdj_dragon.gitee.io'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ---------------------</span>
    <span class="token keyword">await</span> context<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里面的大部分操作也是使用Playwright的录制功能保存下来的，修改了一些地方，稍微解释一下。</p>
<p>第10行是Hexo提供的接口，作用是在deploy完成后执行后面的函数。</p>
<p>第13行的headless由false改为了true，这是在我调试完成之后为了运行的时候不弹出浏览器窗口设置的。</p>
<p>第27行是修改的内容，自动录制的功能默认会忽略弹出窗口的点击，因此手动把这里设置成dialog.accept()，这样模拟点击更新按钮之后弹出的确认窗口就可以自动点击确定了。</p>
<p>29行之后的内容是为了确认按钮已经被点击并且博客成功更新完成。</p>
<p>好了，之后只要执行<code>hexo d</code>之后，Hexo就会自动运行这个脚本，完成自动化更新博客页面的操作了。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://playwright.dev/docs/intro">Getting Started | Playwright</a></li>
<li><a href="https://segmentfault.com/a/1190000039150175">Playwright快速上手指南 - SegmentFault 思否</a></li>
<li><a href="https://github.com/microsoft/playwright/issues/5468">[Question] How to control the timeout for waitForSelector for more than 2 seconds? · Issue #5468 · microsoft/playwright</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>码云</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（二）：NexT主题详细配置</title>
    <url>/2018/09/07/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ANexT%E4%B8%BB%E9%A2%98%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><code>部分内容引用自参考参考文章，侵删。</code></p>
<p>博客的主题更换为NexT之后，还可以进行一些配置。</p>
<blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是<code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p>
</blockquote>
<h1 id="菜单设置">菜单设置</h1>
<p>开始的时候菜单只有首页和归档（归档相当于时间轴），如果想添加菜单，打开<strong>主题配置文件</strong>，找到<code>Menu Settings</code>。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>
  <span class="token key atrule">home</span><span class="token punctuation">:</span> / <span class="token punctuation">|</span><span class="token punctuation">|</span> home                      <span class="token comment"># 首页</span>
  <span class="token comment">#about: /about/ || user              # 关于</span>
  <span class="token comment">#tags: /tags/ || tags                # 标签</span>
  <span class="token comment">#categories: /categories/ || th      # 分类</span>
  <span class="token key atrule">archives</span><span class="token punctuation">:</span> /archives/ <span class="token punctuation">|</span><span class="token punctuation">|</span> archive      <span class="token comment"># 归档</span>
  <span class="token comment">#schedule: /schedule/ || calendar    # 日程表</span>
  <span class="token comment">#sitemap: /sitemap.xml || sitemap    # 站点地图</span>
  <span class="token comment">#commonweal: /404/ || heartbeat      # 公益404</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>需要哪个菜单就把哪个取消注释（删掉前面的<code>#</code>），不需要就注释掉（在前面加上<code>#</code>）。</p>
<p>比如说取消了标签的注释，之后打开网站，就能看到菜单上出现了标签，但是点进去之后却是下面的样子：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_07_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ANexT%E4%B8%BB%E9%A2%98%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE_%E5%87%BA%E7%8E%B0404%E9%A1%B5%E9%9D%A2.png" alt="出现404页面.png" /><figcaption aria-hidden="true">出现404页面.png</figcaption>
</figure>
<p>这是为什么呢？因为你还没有添加相应的页面。所以接下来以标签的页面为例，看看如何使它正常显示出来。</p>
<p>从404的信息可以知道，我们需要提供一个<code>index.html</code>文件，不过这个文件不用我们自己写，只需要一行命令，Hexo就能自动帮我们生成：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page tags<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个命令就是用来新建标签页面的命令，执行后提示<code>INFO  Created: 你的博客根目录\source\tags\index.md</code>，根据这个信息找到目录下的文件<code>index.md</code>，打开它，将<code>title: tags</code>改为<code>title: 标签</code>，并加上<code>type: "tags"</code>。</p>
<p>给文章添加标签只需要在文章顶部添加<code>tags</code>字段，并把标签名罗列在下面，注意缩进格式，如：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题
<span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 标签1
    <span class="token punctuation">-</span> 标签2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>重新部署博客，标签页就能正确显示了。</p>
<h1 id="参考文章">参考文章</h1>
<ul>
<li><a href="https://www.jianshu.com/p/3a05351a37dc">Hexo的Next主题详细配置</a></li>
<li><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html">hexo的next主题个性化教程:打造炫酷网站</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/33616481">Hexo搭建的GitHub博客之优化大全</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（五）：实现字数统计功能</title>
    <url>/2018/10/04/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E5%AE%9E%E7%8E%B0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>纯粹是因为闲得慌，才想要添加字数统计的功能hhh。</p>
<p>在网上搜索了许多文章，大部分是安装<code>hexo-wordcount</code>，然后在主题配置下手写配置。个人不太喜欢这种折腾得很复杂的方式，因为一不小心就忘记之前自己是怎么操作的了，改回去也不方便，最后就是对更新的支持比较弱。</p>
<p>在浏览了NexT的<code>_config.yml</code>配置文件之后，我发现8.2.2版本的NexT默认支持的是Hexo Word Counter这款插件，于是打算尝试一下。</p>
<p><code>注：本文实现基于NexT，不保证其它主题适用。</code></p>
<h1 id="安装插件">安装插件</h1>
<p><code>又注：之后的文章中插件管理默认使用Yarn包管理工具，如果不知道Yarn是什么请移步我的这篇博客：</code><a href="https://xfdj.github.io/2018/09/05/%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn/">使用Node.js包管理工具Yarn</a></p>
<p>和Hexo的其它插件安装方法一样，在博客根目录打开命令行并输入以下命令安装插件。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-word-counter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="修改站点配置文件">修改站点配置文件</h1>
<p>以下配置方法参考自插件的<a href="https://github.com/next-theme/hexo-word-counter">GitHub主页</a>。</p>
<p>进入博客根目录，打开<code>_config.yml</code>文件，在最后加入下面的配置：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Post wordcount display settings</span>
<span class="token comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span>
<span class="token key atrule">symbols_count_time</span><span class="token punctuation">:</span>
  <span class="token key atrule">symbols</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>           <span class="token comment"># 每篇文章的字数</span>
  <span class="token key atrule">time</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>              <span class="token comment"># 每篇文章的阅读时间</span>
  <span class="token key atrule">total_symbols</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>     <span class="token comment"># 站点总字数</span>
  <span class="token key atrule">total_time</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>       <span class="token comment"># 站点总阅读时间</span>
  <span class="token key atrule">exclude_codeblock</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 不包括代码块里的文字</span>
  <span class="token key atrule">awl</span><span class="token punctuation">:</span> <span class="token number">2</span>                  <span class="token comment"># 词语的平均长度</span>
  <span class="token key atrule">wpm</span><span class="token punctuation">:</span> <span class="token number">300</span>                <span class="token comment"># 每分钟阅读的词数</span>
  <span class="token key atrule">suffix</span><span class="token punctuation">:</span> <span class="token string">"mins."</span>         <span class="token comment"># 后缀</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>将想要显示的选项设置为true，不想显示的设置为false即可。</p>
<h1 id="修改主题配置文件">修改主题配置文件</h1>
<p>进入主题目录<code>themes/next</code>，打开<code>_config.yml</code>文件，找到<code>symbols_count_time</code>，调整选项参数。（可以按照最新版NexT推荐的方法修改）</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Post wordcount display settings</span>
<span class="token comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span>
<span class="token key atrule">symbols_count_time</span><span class="token punctuation">:</span>
  <span class="token key atrule">separated_meta</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 换行显示</span>
  <span class="token key atrule">item_text_post</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>   <span class="token comment"># 显示文章选项的注释</span>
  <span class="token key atrule">item_text_total</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 显示站点选项的注释</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_04_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9A%E5%AE%9E%E7%8E%B0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD_%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E6%95%88%E6%9E%9C.png" alt="字数统计效果.png" /><figcaption aria-hidden="true">字数统计效果.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（八）：调整动画</title>
    <url>/2018/10/07/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9A%E8%B0%83%E6%95%B4%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<p>现在的NexT主题已经把之前许多的第三方插件都整合进来，只要修改配置就能方便地调整许多功能。就连动画的效果都可以更改。</p>
<p>NexT默认的四个样式都有载入动画，而且都是可以修改的，NexT本身就提供了众多候选动画。下面就来说说怎么修改NexT的动画效果。</p>
<p>打开<strong>主题配置文件</strong><code>_config.yml</code>。找到下面的内容。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Use velocity to animate everything.</span>
<span class="token key atrule">motion</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">async</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 同时开始动画</span>
  <span class="token key atrule">transition</span><span class="token punctuation">:</span>
    <span class="token comment"># Transition variants:</span>
    <span class="token comment"># fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span>
    <span class="token comment"># swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span>
    <span class="token comment"># bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span>
    <span class="token comment"># slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span>
    <span class="token comment"># slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span>
    <span class="token comment"># perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span>
    <span class="token key atrule">post_block</span><span class="token punctuation">:</span> fadeIn <span class="token comment"># 文章全文</span>
    <span class="token key atrule">post_header</span><span class="token punctuation">:</span> slideDownIn <span class="token comment"># 文章标题</span>
    <span class="token key atrule">post_body</span><span class="token punctuation">:</span> slideDownIn <span class="token comment"># 文章正文</span>
    <span class="token key atrule">coll_header</span><span class="token punctuation">:</span> slideLeftIn <span class="token comment"># 归档标题</span>
    <span class="token comment"># Only for Pisces | Gemini.</span>
    <span class="token key atrule">sidebar</span><span class="token punctuation">:</span> slideUpIn <span class="token comment"># 侧边栏</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里的motion效果就是加载动画，默认是打开的。</p>
<p>可以尝试注释里提供的多种不同的动画效果，尽情尝试吧！</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#! ----------------------------------------------</span>
<span class="token comment">#! DO NOT EDIT THE FOLLOWING SETTINGS</span>
<span class="token comment">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span>
<span class="token comment">#! ----------------------------------------------</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>就在motion部分的上方我发现了NexT给出的温馨提示，意思是“不要编辑下面的设置，除非你知道自己在做什么”。所以还是小心谨慎为好。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（六）：添加图片预览</title>
    <url>/2018/10/05/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88/</url>
    <content><![CDATA[<p><code>本文基于NexT主题。</code></p>
<p>NexT主题默认图片是不能预览的，需要在浏览器的新标签页打开查看原图。</p>
<p>在NexT主题的配置文件里发现NexT主题使用一个叫做<code>theme-next-fancybox3</code>的模块实现图片预览功能。以下是配置文件相应的片段：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Fancybox. There is support for old version 2 and new version 3.</span>
<span class="token comment"># Please, choose only any one variant, do not need to install both.</span>
<span class="token comment"># For install 2.x: https://github.com/theme-next/theme-next-fancybox</span>
<span class="token comment"># For install 3.x: https://github.com/theme-next/theme-next-fancybox3</span>
<span class="token key atrule">fancybox</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>于是照着注释的网址，我在GitHub上找到<code>theme-next-fancybox3</code>的页面，并照着官方文档的指示安装。</p>
<p>安装方法和之前的插件有些不一样，因为npm以及Yarn包管理器的源里头并没有收录它。下面是安装方法。</p>
<h1 id="安装模块">安装模块</h1>
<h2 id="下载模块">下载模块</h2>
<p>进入博客根目录，在根目录下执行语句：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/theme-next/theme-next-fancybox3 themes/next/source/lib/fancybox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以看到我们是使用Git来下载<code>theme-next-fancybox3</code>模块的。它会把整个模块从网站上克隆到<code>themes/next/source/lib/fancybox</code>目录下。</p>
<h2 id="更改主题配置文件">更改主题配置文件</h2>
<p>打开NexT的主题配置文件<code>_config.yml</code>（注意不是博客根目录下的同名文件），找到上文中提到的相应片段。</p>
<p>将<code>fancybox: false</code>更改为<code>fancybox: true</code>，保存并重新部署博客。</p>
<p>单击博客上图片效果如下：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_05_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9A%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88_%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E6%95%88%E6%9E%9C.png" alt="图片预览效果.png" /><figcaption aria-hidden="true">图片预览效果.png</figcaption>
</figure>
<h1 id="卸载模块">卸载模块</h1>
<p>卸载方法很简单，由于Git的安装模块只是从网页上原封不动地拷贝到目标目录下，所以只需要把<code>themes/next/source/lib/fancybox</code>文件夹删除，再将主题配置文件里的<code>fancybox: true</code>改回<code>fancybox: false</code>即可。</p>
<h1 id="更新模块">更新模块</h1>
<p>如果闲着没事干想更新一下模块的话，只需在<code>themes/next/source/lib/fancybox</code>下打开命令行或<code>Git Bash</code>，执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>指令即可。Git会自动拉取到最新的更新。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十一）：warning: LF will be replaced by CRLF的去除方法</title>
    <url>/2019/02/09/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%EF%BC%9Awarning-LF-will-be-replaced-by-CRLF%E7%9A%84%E5%8E%BB%E9%99%A4%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>Windows下在使用<code>hexo d</code>命令部署博客时总是会出现大量的警告：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">The <span class="token function">file</span> will have its original line endings <span class="token keyword">in</span> your working directory.
warning: LF will be replaced by CRLF <span class="token keyword">in</span> XXXXXX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>警告的意思很直接，就是Git会把<code>LF</code>替换成<code>CRLF</code>，虽然说没有什么影响，但是就是每次一大堆警告比较碍眼。</p>
<h1 id="lf与crlf">LF与CRLF</h1>
<p>Windows中的换行符为CRLF，而Linux中的换行符为LF。它们是两种操作系统各自的换行方式。在安装Git的时候貌似可以设置有关换行符的一些操作。如果出现了警告，就意味着如果项目的文件里有LF的换行符，在最终提交的时候都会统一转换成CRLF换行符。</p>
<h1 id="修改方式">修改方式</h1>
<p>很多博客都说这个功能完全可以禁用，没有功能上的影响的同时，还可以避免被警告信息刷屏。</p>
<p>设置的方法也很简单，在命令行窗口中输入以下命令即可：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> config --global core.autocrlf <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>意思是要求Git禁用自动转换功能。</p>
<p>设置完之后，使用<code>hexo d</code>部署博客时就不会再出现这个warning了。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.jianshu.com/p/46088ee28129">git warning: LF will be replaced by CRLF in 解决办法 - 简书</a></li>
<li><a href="https://blog.csdn.net/jdliyao/article/details/81412527">Hexo 博客中出现关于 LF will be replaced by CRLF 问题出现的原因以及解决方式 - Darklovy - CSDN博客</a></li>
<li><a href="https://gaomf.cn/2017/01/13/Hexo_Git_CRLF/">Hexo Git部署警告"warning： LF will be replaced by CRLF"的去除方法 | 高明飞的博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十七）：pangu和lazyload的作用</title>
    <url>/2020/05/09/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%EF%BC%9Apangu%E5%92%8Clazyload%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<p>NexT主题文件中有许多非常好用的功能，今天要介绍的是其中两个，分别是pangu和lazyload。这两个功能非常建议打开，谁试过谁真香。</p>
<p>可以说pangu和lazyload分别从排版和性能上优化了整个博客。下面来分别介绍一下它们的作用和打开方式。</p>
<h1 id="pangu">pangu</h1>
<p><a href="https://github.com/vinta/pangu.js">pangu</a>是一个在中文、英文、数字、符号等混合出现的时候添加空格的一个小工具。它的GitHub网站上的介绍特别有意思，似乎作者对于这些符号中间的空格有一种有趣的偏执和强迫。</p>
<blockquote>
<h2 id="為什麼你們就是不能加個空格呢">為什麼你們就是不能加個空格呢？</h2>
<p>如果你跟我一樣，每次看到網頁上的中文字和英文、數字、符號擠在一塊，就會坐立難安，忍不住想在它們之間加個空格。這個外掛（支援 Chrome 和 Firefox）正是你在網路世界走跳所需要的東西，它會自動替你在網頁中所有的中文字和半形的英文、數字、符號之間插入空白。</p>
<p>漢學家稱這個空白字元為「盤古之白」，因為它劈開了全形字和半形字之間的混沌。另有研究顯示，打字的時候不喜歡在中文和英文之間加空格的人，感情路都走得很辛苦，有七成的比例會在 34 歲的時候跟自己不愛的人結婚，而其餘三成的人最後只能把遺產留給自己的貓。畢竟愛情跟書寫都需要適時地留白。</p>
<p>與大家共勉之。</p>
<p>——pangu的GitHub项目README</p>
</blockquote>
<h2 id="效果">效果</h2>
<p>我们可以来感受一下这个小插件关闭和打开的对比。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_05_09_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%EF%BC%9Apangu%E5%92%8Clazyload%E7%9A%84%E4%BD%9C%E7%94%A8_%E5%85%B3%E9%97%ADpangu%E7%9A%84%E6%95%88%E6%9E%9C.png" alt="关闭pangu的效果.png" /><figcaption aria-hidden="true">关闭pangu的效果.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_05_09_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B8%83%EF%BC%89%EF%BC%9Apangu%E5%92%8Clazyload%E7%9A%84%E4%BD%9C%E7%94%A8_%E6%89%93%E5%BC%80pangu%E7%9A%84%E6%95%88%E6%9E%9C.png" alt="打开pangu的效果.png" /><figcaption aria-hidden="true">打开pangu的效果.png</figcaption>
</figure>
<p>注意画红线部分的对比。这个的好处就是，不管你在写博客的时候加了空格还是没加都不影响，你不用担心pangu会在你已经添加空格的地方再多加空格。</p>
<h2 id="启用方式">启用方式</h2>
<p>这个功能要打开也非常简单，首先在博客根目录下打开命令行，输入</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> pangu --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> pangu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>进行安装。</p>
<p>安装成功之后在<strong>主题配置文件</strong>找到</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Pangu Support</span>
<span class="token comment"># For more information: https://github.com/vinta/pangu.js</span>
<span class="token key atrule">pangu</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>将<code>false</code>改成<code>true</code>即可。（如果使用了平滑更新里的技巧可以将这个配置复制到对应的文件中进行修改）</p>
<p>阮一峰曾经总结过一份<a href="https://github.com/ruanyf/document-style-guide">中文技术文档的写作规范</a>。其中提到字间距的时候强调了空格的使用能够使文档可读性增加。对于已经写了这么多篇文章的懒人（我）来说，回去一一修改不大现实。pangu可以说是目前最佳的解决方案了。</p>
<h1 id="lazyload">lazyload</h1>
<p>所谓lazyload的意思就是指图片或者其它控件的懒惰加载。通俗点说就是让图片等一些比较大的组件在你看到它时才进行加载。举个例子，当一篇很长的文章末尾有一些图片的时候，超出了屏幕的显示范围，lazyload功能可以让这些图片不展示出来，从而加快文章的打开速度，节约加载时间。等到阅读到了图片的位置的时候再请求获取图片加载在浏览器上。</p>
<p>这个功能在图片比较多的文章里面会起到一些作用。当然了，节约加载时间这件事情其实还是值得商榷的，不过另一个好处就是可以不必加载那些还没有看到的图片，在有些图库每个月的流量有限制的情况下，打开lazyload还可以省下流量，其实挺好的。</p>
<h2 id="启用方式-1">启用方式</h2>
<p>直接在<strong>主题配置文件</strong>中找到</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Vanilla JavaScript plugin for lazyloading images.</span>
<span class="token comment"># For more information: https://github.com/ApoorvSaxena/lozad.js</span>
<span class="token key atrule">lazyload</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>并把<code>false</code>改成<code>true</code>即可。</p>
<p>启用之后你可以在浏览器的开发者工具<code>F12</code>中的Network选项卡中看到这一变化。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十三）：将博客同时部署到码云上</title>
    <url>/2020/02/23/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A/</url>
    <content><![CDATA[<h1 id="起因">起因</h1>
<p>长话短说，原因很简单，就是Github在国内的速度不够快。我感觉我的博客并不花里胡哨，因此打开速度最好也快一点。我不想等博客上所有内容和图标以及卡哇伊的看板娘半天才加载出来，也不想点击搜索按钮搜博文的时候要等老半天，完全没有秒搜的快感。因此，在查看了一些资料之后，我选择同时也将博客部署到国内的代码平台——码云上。这样，相当于博客拥有了两个网址</p>
<h1 id="部署步骤">部署步骤</h1>
<h2 id="新建仓库">新建仓库</h2>
<p>注册了<a href="https://gitee.com/">码云</a>的账号之后，如下图所示新建一个仓库。</p>
<div class="note warning"><p>图片中的“使用Readme文件初始化这个仓库”复选框要勾选！否则发布博客的时候可能会出现“failed to push some refs to ...”的问题。</p>
</div>
<div class="note warning"><p>图片中的仓库名称一定要填成和自己的个性地址同名！不然的话生成的博客会带二级目录，与<code>\_config.yml</code>的不一致会不导致加载CSS，或者出现404。个性地址可以在仓库网址上看到。后续仓库名称也可以在管理中修改。我第一次图片里就填成了blog，导致出现了问题。</p>
</div>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_02_23_%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A_%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="新建仓库.png" /><figcaption aria-hidden="true">新建仓库.png</figcaption>
</figure>
<p>创建完后，如下图所示复制一下仓库的地址（注意不是复制网址）。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_02_23_%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A_%E5%A4%8D%E5%88%B6%E5%9C%B0%E5%9D%80.png" alt="复制地址.png" /><figcaption aria-hidden="true">复制地址.png</figcaption>
</figure>
<h2 id="配置站点配置文件_config.yml">配置站点配置文件_config.yml</h2>
<p>在博客根目录下打开站点配置文件<code>_config.yml</code>，找到deploy的部分，修改成如下所示的内容。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> 
    <span class="token key atrule">github</span><span class="token punctuation">:</span> GitHub上的仓库地址
    <span class="token key atrule">gitee</span><span class="token punctuation">:</span> 刚才复制的仓库地址
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果是之后修改了仓库名称，需要重新复制仓库的地址填到这里。</p>
<h2 id="发布一遍博客">发布一遍博客</h2>
<p>注意在进行下一步之前一定要先做这一步！</p>
<p>用命令<code>hexo d</code>发布一遍博客。第一次发布需要填写用户名和密码，之后Windows会以凭据的形式保存你的用户名和密码。</p>
<h2 id="gitee-pages设置">Gitee Pages设置</h2>
<p>接下来我们需要将仓库设置成Gitee Pages服务，类似于Github Pages。设置方法如下图所示。</p>
<p>在服务中选择Gitee Pages选项。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_02_23_%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A_%E8%AE%BE%E7%BD%AEGitee%20Pages%EF%BC%881%EF%BC%89.png" alt="设置Gitee Pages（1）.png" /><figcaption aria-hidden="true">设置Gitee Pages（1）.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_02_23_%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A_%E8%AE%BE%E7%BD%AEGitee%20Pages%EF%BC%882%EF%BC%89.png" alt="设置Gitee Pages（2）.png" /><figcaption aria-hidden="true">设置Gitee Pages（2）.png</figcaption>
</figure>
<p>启动之后留意一下显示出来的网站地址，那就是码云上的博客网址啦。再次注意最好将仓库名称改成个性地址同名，这样博客网址不会出现二级目录，会少很多问题。</p>
<h2 id="访问新的博客地址">访问新的博客地址</h2>
<p>如果忘记博客地址的话，可以在上一步中的服务页面找到，点进去看看新的博客地址吧！</p>
<p>我的博客的码云地址：<a href="https://xfdj_dragon.gitee.io">https://xfdj_dragon.gitee.io</a></p>
<h2 id="更新部署">更新部署</h2>
<p>用了一会之后发现，每次<code>hexo d</code>部署的博客不会自动更新到码云的博客网站上，需要跑到仓库里的Gitee Pages服务页面更新才行，就像下图所示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_02_23_%E5%B0%86%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%97%B6%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91%E4%B8%8A_%E6%9B%B4%E6%96%B0%E9%83%A8%E7%BD%B2.png" alt="更新部署.png" /><figcaption aria-hidden="true">更新部署.png</figcaption>
</figure>
<p>这个没啥好的解决方法，因为推送完自动部署的功能在码云是要收费的。</p>
<p>更新：解决方法看优化博客（二十）。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.yanyunliang.com/2018/11/04/hexo-deploying-blogs-to-both-code-clouds-and-github.html">Hexo - 将博客同时部署到码云和 Github 上 | Liang's Blog</a></li>
<li><a href="https://www.jianshu.com/p/5014133ba61a">使用Gitee+Hexo搭建个人博客 - 简书</a></li>
<li><a href="https://jingyan.baidu.com/article/f3e34a12a25bc8f5ea65354a.html">如何解决failed to push some refs to git-百度经验</a></li>
<li><a href="https://gitee.com/help/articles/4136#article-header0">码云Pages - 码云 Gitee.com</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>码云</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十九）：开启Pjax功能</title>
    <url>/2020/09/23/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%B9%9D%EF%BC%89%EF%BC%9A%E5%BC%80%E5%90%AFPjax%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="什么是pjax">什么是Pjax</h1>
<blockquote>
<p><a href="https://github.com/MoOx/pjax">Pjax</a> is a standalone JavaScript module that uses AJAX (XmlHttpRequest) and <code>pushState()</code> to deliver a fast browsing experience.</p>
<p>It allows you to completely transform the user experience of standard websites (server-side generated or static ones) to make users feel like they are browsing an app, especially for those with low bandwidth connections.</p>
<p><strong>No more full page reloads. No more multiple HTTP requests.</strong></p>
</blockquote>
<p>上面的官方简介翻译成人话就是Pjax可以让博客在点击链接的时候不需要每次都重新加载整个页面，而只加载有变化的部分，从而加快加载速度。</p>
<h1 id="开启pjax">开启Pjax</h1>
<p>在<strong>主题配置文件</strong>中找到并开启如下选项：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pjax</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="效果">效果</h1>
<p>开启了之后，在博客中切换标签页面、归档页面、博文页面的时候标题栏不会重复加载了。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://theme-next.js.org/docs/third-party-services/external-libraries.html?highlight=pjax">External Libraries | NexT</a></li>
<li><a href="https://github.com/MoOx/pjax">MoOx/pjax: Easily enable fast Ajax navigation on any website (using pushState + xhr)</a></li>
<li><a href="https://github.com/theme-next/theme-next-pjax">theme-next/theme-next-pjax: Easily enable fast Ajax navigation on any website (using pushState + xhr)</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十二）：在博客里播放视频</title>
    <url>/2019/02/18/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%9C%A8%E5%8D%9A%E5%AE%A2%E9%87%8C%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<p>学习C4D的时候渲染了一个视频，想放在博客上，不过Markdown只能放链接，而我想直接在文章里观看视频。所以上网搜索了一下解决方案。</p>
<p>网上的解决方法有两种：</p>
<ol type="1">
<li>使用HTML的语法直接嵌入视频。Markdown兼容HTML的语法，所以可以直接在Markdown文档中使用HTML来嵌入播放窗口。不过貌似视频窗口的大小无法自适应屏幕宽度（没有尝试过）。</li>
<li>通过Hexo的插件来插入视频。这里需要用到一个插件：<code>hexo-tag-dplayer</code>。下面就来尝试一下如何通过这个插件嵌入视频。</li>
</ol>
<h1 id="操作步骤">操作步骤</h1>
<p>首先安装插件。</p>
<p>在博客目录下打开命令提示符，用下面的命令安装插件。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">yarn</span> <span class="token function">add</span> hexo-tag-dplayer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>也可以使用<code>npm</code>安装。</p>
<p>安装成功之后，在文档中想要嵌入视频的地方添加标签：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% dplayer "url=视频地址" ... %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在省略的位置可以添加更多选项，比如自动播放、循环什么的，可以去<code>hexo-tag-dplayer</code>插件的网址查看更多细节，网址链接我放在了参考网页。效果就像下面这样。</p>
<h1 id="demo">Demo</h1>
<div id="dplayer2" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_02_18_C4D%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%8817%EF%BC%89%EF%BC%9A%E5%88%B6%E4%BD%9C%E7%AB%8B%E4%BD%93%E5%9C%B0%E7%90%83_%E5%9C%B0%E7%90%83.mp4"}});</script><!-- dplayer used1 -->
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://github.com/MoePlayer/hexo-tag-dplayer">MoePlayer/hexo-tag-dplayer: Embed dplayer in Hexo posts/pages</a></li>
<li><a href="https://diygod.me/best-players-in-hexo/">可能是目前最好用的两个 Hexo 播放器插件 | Hi，DIYgod</a></li>
<li><a href="http://blog.yusank.space/HexoMedia.html/">Hexo 博客添加视频和音乐 | Yusank's blog</a></li>
<li><a href="https://www.jianshu.com/p/8e1cf1ca131b">hexo 插入视频和音乐播放器 - 简书</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十五）：实现hexo server自动刷新</title>
    <url>/2020/05/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E4%BA%94%EF%BC%89%EF%BC%9A%E5%AE%9E%E7%8E%B0hexo-server%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0/</url>
    <content><![CDATA[<p>众所周知，<code>hexo server</code>这个命令可以在本地预览博客，不过它并不会进行自动刷新，因此不方便实时查看更改结果，经网上查找资料得知，有一个插件<a href="https://github.com/hexojs/hexo-browsersync">hexo-browsersync</a>或许可以解决这个问题。这篇文章就来验证一下它的效果。</p>
<h1 id="安装">安装</h1>
<p>使用命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-browsersync<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装插件。</p>
<p>安装成功之后，只需要正常执行<code>hexo server</code>或<code>hexo s</code>就能查看效果了。</p>
<h1 id="使用效果">使用效果</h1>
<p>经过测试，当保存文章的Markdown文件时，网页会自动刷新。<del>另外，修改主题配置文件并保存之后，网页也会自动刷新，非常nice。唯一一个缺憾是修改站点配置文件没办法触发网页的自动刷新，需要重新执行<code>hexo g</code>。</del></p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://blog.singee.me/2018/05/16/hexo/hexo-auto-refresh/">Hexo 利用 browsersync 进行自动刷新 | Origin</a></li>
<li><a href="https://github.com/hexojs/hexo-browsersync">GitHub - hexojs/hexo-browsersync: BrowserSync plugin for Hexo.</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十八）：如何在博客中渲染Mermaid语法</title>
    <url>/2020/09/01/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%85%AB%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%B8%B2%E6%9F%93Mermaid%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>Mermaid是Markdown中一个很有用的流程图绘制工具，不过默认Hexo博客并不支持渲染Mermaid语法，NexT主题也默认没有打开渲染功能。因此本文提供两种方法打开Mermaid的渲染功能。</p>
<h1 id="hexo方法">Hexo方法</h1>
<p>Hexo的解决方法需要安装一款插件<code>hexo-filter-mermaid-diagrams</code>。</p>
<h2 id="第一步-安装插件">第一步 安装插件</h2>
<p>在博客目录打开命令行，执行以下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-filter-mermaid-diagrams<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="第二步-编辑配置文件">第二步 编辑配置文件</h2>
<p>打开<code>source/_data/next.yml</code>文件，在文件最后加入以下内容：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">mermaid</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token comment"># 新增styl文件，最终会编译成css代码</span>
<span class="token key atrule">custom_file_path</span><span class="token punctuation">:</span>
  <span class="token key atrule">style</span><span class="token punctuation">:</span> source/_data/styles.styl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第三步-个性化背景颜色">第三步 个性化背景颜色</h2>
<p>打开<code>source/_data/styles.styl</code>文件，添加内容：</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.mermaid</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可以把背景颜色改成透明。</p>
<h1 id="next方法">NexT方法</h1>
<h2 id="设置主题配置文件">设置主题配置文件</h2>
<p>打开<code>themes/next/_config.yml</code>文件，找到并修改成下面的部分：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Mermaid tag</span>
<span class="token key atrule">mermaid</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># Available themes: default | dark | forest | neutral</span>
  <span class="token key atrule">theme</span><span class="token punctuation">:</span> default<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用方法">使用方法</h2>
<pre class="line-numbers language-none"><code class="language-none">&#123;% mermaid type %&#125;
&#123;% endmermaid %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>比如说</p>
<pre class="line-numbers language-none"><code class="language-none">&#123;% mermaid graph TD %&#125;
A[Hard] --&gt;|Text| B(Round)
B --&gt; C&#123;Decision&#125;
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
&#123;% endmermaid %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://theme-next.js.org/docs/tag-plugins/mermaid.html">Mermaid | NexT</a></li>
<li><a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">webappdevelp/hexo-filter-mermaid-diagrams: mermaid diagrams for hexo</a></li>
<li><a href="https://wangxiaoyu-go.github.io/2018/11/23/hexo-filter-mermaid-diagrams/">Hexo中插入mermaid diagrams | Yu's Notes</a></li>
<li><a href="https://ryzn.me/p/beauty-my-blog.html">Hexo+Next博客美化 | Ryzn's Home</a></li>
<li><a href="http://www.wqf31415.xyz/2020/08/13/markdown-%E4%B8%AD%E6%8F%92%E5%85%A5-mermaid-%E5%9B%BE/">markdown 中插入 mermaid 图 | This_Wei</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Mermaid</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十六）：NexT主题不再支持auto_excerpt之后</title>
    <url>/2020/05/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%EF%BC%9ANexT%E4%B8%BB%E9%A2%98%E4%B8%8D%E5%86%8D%E6%94%AF%E6%8C%81auto-excerpt%E4%B9%8B%E5%90%8E/</url>
    <content><![CDATA[<p>自 NexT 7.6.0 版本之后，auto_excerpt功能就从 NexT 的配置文件中移除了。</p>
<p>NexT 7.6.0 更新信息：<a href="https://mist.theme-next.org/next-7-6-0-released/">NexT 7.6.0 Released | NexT</a></p>
<p>对于这个功能的删除，NexT 主题的开发者是这么解释的：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_05_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%EF%BC%9ANexT%E4%B8%BB%E9%A2%98%E4%B8%8D%E5%86%8D%E6%94%AF%E6%8C%81autoto-excerpt%E4%B9%8B%E5%90%8E_%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E8%A7%A3%E9%87%8A.png" alt="开发者的解释.png" /><figcaption aria-hidden="true">开发者的解释.png</figcaption>
</figure>
<p>这意味着我们需要其它方式来在首页显示文章摘要。</p>
<h1 id="hexo-excerpt">hexo-excerpt</h1>
<h2 id="安装">安装</h2>
<p>根据作者的提示，我们尝试使用<code>hexo-excerpt</code>插件来实现显示摘要的功能。</p>
<p>使用下面的命令安装<code>hexo-excerpt</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-excerpt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="修改站点配置文件">修改站点配置文件</h2>
<p>打开站点配置文件，加入：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt</span><span class="token punctuation">:</span>
  <span class="token key atrule">depth</span><span class="token punctuation">:</span> <span class="token number">2</span>  <span class="token comment">#按层来算，也就是按代码块来算</span>
  <span class="token key atrule">excerpt_excludes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token key atrule">more_excludes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token key atrule">hideWholePostExcerpts</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后打开主题配置文件，将下面两项设置为<code>true</code>：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_description</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token punctuation">...</span>
<span class="token key atrule">read_more_btn</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>配置的默认depth原本是10，我改为2。这个depth就是md文件中的代码块，也就是说当从文章（不包括标题）开始算起10个代码块后就会开始显示阅读全文按钮（在主页上）。也就是说，旧版限制的是字数，新版限制的是层数。站点配置文件的另外三个参数的意思暂时不是很清楚，就保持默认了。</p>
<p>摘要显示的效果如下所示，虽然有一些瑕疵，不过还是足够使用了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_05_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%85%AD%EF%BC%89%EF%BC%9ANexT%E4%B8%BB%E9%A2%98%E4%B8%8D%E5%86%8D%E6%94%AF%E6%8C%81autoto-excerpt%E4%B9%8B%E5%90%8E_%E6%91%98%E8%A6%81%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="摘要显示效果.png" /><figcaption aria-hidden="true">摘要显示效果.png</figcaption>
</figure>
<h1 id="hexo-auto-excerpt">hexo-auto-excerpt</h1>
<p>新版本NexT推荐了另一个插件<code>hexo-auto-excerpt</code>。</p>
<h2 id="安装-1">安装</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-auto-excerpt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="修改站点配置文件-1">修改站点配置文件</h2>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">excerpt_length</span><span class="token punctuation">:</span> <span class="token number">350</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>表示摘要的字数。默认是300。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://blog.csdn.net/Sky_True/article/details/104435997/">NexT新老版本配置_网络_Sky_True的博客-CSDN博客</a></li>
<li><a href="https://github.com/chekun/hexo-excerpt">GitHub - chekun/hexo-excerpt: Automatic excerpt generator for Hexo</a></li>
<li><a href="https://github.com/next-theme/hexo-theme-next/issues/4">【必读】更新说明及常见问题 · Issue #4 · next-theme/hexo-theme-next</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十四）：如何平滑更新主题</title>
    <url>/2020/05/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%A6%82%E4%BD%95%E5%B9%B3%E6%BB%91%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p>以我目前正在使用的主题 NexT 为例。目前，通过 pull 或下载新的 release 版本来更新 NexT 主题的体验并不平滑。当用户使用 <code>git pull</code> 更新 NexT 主题时经常需要解决冲突问题，而在手动下载 release 版本时也经常需要手动合并配置。</p>
<p>解决这一问题有以下几种方案。</p>
<h1 id="选择-1站点配置文件方式">选择 1：站点配置文件方式</h1>
<p>使用这一方式，你的全部配置都将置于站点配置文件（<code>/_config.yml</code>），并且不需要修改主题配置文件（比如<code>/themes/next/_config.yml</code>），或者创建什么其他的文件。但是所有用到的主题选项必须放置在 <code>theme_config</code> 后，并全部增加两个空格的缩进。</p>
<p>如果在新的 release 中新增了选项，那么你只需要从 <code>/themes/next/_config.yml</code> 中将他们复制到 <code>/_config.yml</code> 中并将它们的值设置为你想要的。</p>
<h2 id="用法">用法</h2>
<ol type="1">
<li><p>请确认不存在 <code>/source/_data/next.yml</code> 文件（如果已存在，请删除）</p></li>
<li><p>从主题的 <code>/themes/next/_config.yml</code> 文件中复制你需要的 NexT 配置项到 <code>/_config.yml</code> 中，然后</p>
<ol type="1">
<li><p>所有这些配置项右移两个空格。</p></li>
<li><p>在这些参数最上方添加一行 <code>theme_config:</code></p></li>
</ol></li>
</ol>
<h1 id="选择-2数据文件方式next已弃用">选择 2：数据文件方式（NexT已弃用）</h1>
<p>使用这一方式，你现在可以将你的全部配置置于同一位置（<code>/source/_data/next.yml</code>），并且不需要修改 <code>/themes/next/_config.yml</code>。 但是可能无法让所有 Hexo 外部库都准确处理它们的附加选项（举个例子，<code>hexo-server</code> 模块只会从 Hexo 默认配置文件中读取选项）。</p>
<p>如果在新的 release 中出现了任何新的选项，那么你只需要从 <code>/themes/next/_config.yml</code> 中将他们复制到 <code>/source/_data/next.yml</code> 中并设置它们的值为你想要的选项。</p>
<p>这一方法依赖于 Hexo 的<strong>数据文件</strong>特性。因为数据文件是在 Hexo 3.0 中被引入，所以你需要更新至 Hexo 3.0 以后的版本来使用这一特性。</p>
<blockquote>
<p><strong>数据文件</strong></p>
<p>有时您可能需要在主题中使用某些资料，而这些资料并不在文章内，并且是需要重复使用的，那么您可以考虑使用 Hexo 3.0 新增的「数据文件」功能。此功能会载入 <code>source/_data</code> 内的 YAML 或 JSON 文件，如此一来您便能在网站中复用这些文件了。</p>
<p>—— <a href="https://hexo.io/zh-cn/docs/data-files">Hexo 官方文档</a></p>
</blockquote>
<h2 id="用法-1">用法</h2>
<ol type="1">
<li>请确认你的 Hexo 版本为 3.0 或更高，确认方法：<code>hexo version</code>查看。</li>
<li>在你站点的 <code>/source/_data</code> 目录创建一个 <code>next.yml</code> 文件（如果 <code>_data</code> 目录不存在，请创建之）。</li>
</ol>
<p>以上步骤之后有两种选择，任选其一即可。</p>
<ul>
<li><code>override: false</code>（默认）：
<ol type="1">
<li>检查默认 NexT 配置中的 <code>override</code> 选项，必须设置为 <code>false</code>。 在 <code>next.yml</code> 文件中，也要设置为 <code>false</code>，或者不定义此选项。</li>
<li>从站点配置文件（<code>/_config.yml</code>）与主题配置文件（<code>/themes/next/_config.yml</code>）中复制你需要的选项到 <code>/source/_data/next.yml</code> 中。</li>
</ol></li>
<li><code>override: true</code>：
<ol type="1">
<li>在 <code>next.yml</code> 中设置 <code>override</code> 选项为 <code>true</code>。</li>
<li>从 <code>/themes/next/_config.yml</code> 配置文件中复制<strong>所有</strong>的 NexT 主题选项到 <code>/source/_data/next.yml</code> 中。</li>
</ol></li>
</ul>
<h2 id="其它主题如何使用">其它主题如何使用？</h2>
<p>大部分主题使用数据文件都是为了平滑更新，使用方式<strong>可能</strong>如下：</p>
<ul>
<li>将主题目录下的 <code>_config.yml</code> 文件复制到博客根目录下的 <code>/source/_data</code> 中，并重命名为主题名称。例如我使用的是 <code>melody</code> 主题，那么就叫做 <code>melody.yml</code> 。如果 <code>source</code> 目录下没有 <code>_data</code> 文件夹请自行创建。</li>
<li>之后升级主题便可直接使用 <code>git pull</code> 或 <code>git fetch</code> 命令完成主题更新。</li>
</ul>
<p>某些主题也将数据文件特性用于存放一些设置数据。</p>
<p>总之，请注意主题的文档，<strong>每一个主题的使用方法都可能不一样</strong>！</p>
<h1 id="选择3_config.name.yml方式">选择3：<code>_config.[name].yml</code>方式</h1>
<p>使用这种方法，你的所有配置都放在根目录下的<code>_config.[name].yml</code>中。将<code>[name]</code>替换成你在站点配置文件中<code>theme</code>选项后的值，比如：<code>next</code>。</p>
<h2 id="用法-2">用法</h2>
<ol type="1">
<li>请确认你的Hexo版本为5.0或更高。</li>
<li>在博客根目录下新建一个配置文件，比如：<code>_config.next.yml</code>。</li>
<li>将你需要的NexT主题选项从主题配置文件复制到这个配置文件。</li>
<li>如果之前使用的是选择2的方式，可以将<code>/source/_data/next.yml</code>中的内容复制到<code>/_config.next.yml</code>中。</li>
</ol>
<h1 id="我的选择">我的选择</h1>
<p>之前选择的是第2种方法，NexT更新之后换成了第3种方法。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/DATA-FILES.md">hexo-theme-next/DATA-FILES.md at master · theme-next/hexo-theme-next · GitHub</a></li>
<li><a href="%5Bhttps://easyhexo.com/5-Add/5-3-data-file.html#%E5%85%B3%E4%BA%8E%E3%80%8C%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E3%80%8D%5D(https://easyhexo.com/5-Add/5-3-data-file.html#关于「数据文件」)">数据文件 | Easy Hexo 👨‍💻</a></li>
<li><a href="https://hexo.io/zh-cn/docs/configuration.html">Hexo 配置</a></li>
<li><a href="https://github.com/hexojs/hexo/pull/757">Hexo Pull #757</a></li>
<li><a href="https://theme-next.js.org/docs/getting-started/configuration.html">Configuration | NexT</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（十）：新建博客的小技巧</title>
    <url>/2019/01/08/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%8D%81%EF%BC%89%EF%BC%9A%E6%96%B0%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>每次新建博客，输入<code>hexo new</code>命令后，都要到<code>source/_posts</code>目录下打开创建的md文件，时间一长吧，就有点烦了。能不能每次输入完命令之后，就自动打开创建好的文件呢？别说，还真能，而且比想象中还要简单。</p>
<p>其实一开始我还想自己写个小程序把Hexo命令和打开文件的命令结合起来，创建博客的时候就运行这个程序。不过我在其它博客上找到了一个更方便的解决方案。</p>
<h1 id="原理">原理</h1>
<p>其实这个原理并不复杂，也不需要专业的知识。只需要知道，这种方法是利用<code>Node.js</code>的事件监听机制实现监听Hexo的<code>new</code>事件来启动编辑器，完成自动启动编辑器的操作就可以了。</p>
<p>没看懂也没关系（<del>因为我也不是很懂</del>），只要照着步骤做就可以了。据说这个解决方案在<a href="https://github.com/hexojs/hexo/issues/1007">Hexo的GitHub项目的Issues</a>中也能找到，所以不用担心什么安全问题。</p>
<h1 id="步骤">步骤</h1>
<p>步骤也非常简单。</p>
<ol type="1">
<li><p>在博客的根目录下的<code>scripts</code>目录中新建一个后缀名为<code>.js</code>的JavaScript脚本文件，如果没有这个目录，就新建一个，注意目录的大小写。这个文件可以任意取名，比如<code>auto open.js</code>。</p></li>
<li><p>用文本编辑器打开这个文件。Windows平台输入如下内容：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>

<span class="token comment">// Hexo 2.x 用户复制这段</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start "markdown编辑器绝对路径.exe" '</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Hexo 3 用户复制这段</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start "markdown编辑器绝对路径.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Mac平台输入如下内容：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>

<span class="token comment">// Hexo 2.x 用户复制这段</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">'open -a "markdown编辑器绝对路径.app" '</span> <span class="token operator">+</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hexo 3 用户复制这段</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">'open -a "markdown编辑器绝对路径.app" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>比如我是Windows，Hexo 3，编辑器是Typora，我的文件内容就是这样：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span>
<span class="token comment">// Hexo 3</span>
hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">'start "C:/Program Files/Typora/bin/typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>保存退出即可。现在通过这个脚本，我们就能监听<code>hexo new</code>这个动作，并且在动作完成之后自动打开编辑器了。</p></li>
<li><p>使用<code>hexo new</code>创建一篇博客，是不是新建的md文件自动打开了？~</p></li>
</ol>
<h1 id="关于scripts目录的解释">关于<code>scripts</code>目录的解释</h1>
<blockquote>
<p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件（注：另一种是真的插件（Packages））：</p>
<h3 id="脚本scripts">脚本（Scripts）</h3>
<p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动载入。</p>
<p>——Hexo官网</p>
</blockquote>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://notes.doublemine.me/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html">Hexo添加文章时自动打开编辑器 | Doublemine</a></li>
<li><a href="https://notes.doublemine.me/2015-07-06-%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDHexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E6%96%87%E4%BB%B6.html">自动备份Hexo博客源文件 | Doublemine</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>优化博客（四）：显示文章摘要</title>
    <url>/2018/10/02/%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81/</url>
    <content><![CDATA[<div class="note warning"><p>此方法对于 NexT 7.6.0 以上版本已失效。新的实现方法请查看“优化博客（十六）”。</p>
</div>
<p>NexT主题默认在首页显示全文，这样翻阅浏览文章很不方便，好在NexT提供了显示摘要的方法，修改起来也很简单。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81_%E9%BB%98%E8%AE%A4%E5%85%A8%E6%96%87%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="默认全文显示效果.png" /><figcaption aria-hidden="true">默认全文显示效果.png</figcaption>
</figure>
<h1 id="修改主题配置文件">修改主题配置文件</h1>
<p>打开NexT的主题配置文件<code>_config.yml</code>（注意不是博客根目录下的那个）。找到<code>auto_excerpt</code>，可以看到它默认是关闭的</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81_%E9%BB%98%E8%AE%A4%E5%85%B3%E9%97%AD%E8%87%AA%E5%8A%A8%E6%91%98%E8%A6%81.png" alt="默认关闭自动摘要.png" /><figcaption aria-hidden="true">默认关闭自动摘要.png</figcaption>
</figure>
<p>把false改成true，保存。下面的length表示摘要显示的长度，你可以改成自己想要的值。</p>
<p>部署博客，效果是这样的。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_02_%E4%BC%98%E5%8C%96%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E6%98%BE%E7%A4%BA%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81_%E6%91%98%E8%A6%81%E6%98%BE%E7%A4%BA%E6%95%88%E6%9E%9C.png" alt="摘要显示效果.png" /><figcaption aria-hidden="true">摘要显示效果.png</figcaption>
</figure>
<p>修改配置文件的时候，可以看到刚才的修改是自动摘要，NexT并不推荐这种方式，而是推荐在正文手动添加<code>&lt;!-- more --&gt;</code>的方式分隔摘要与正文，这样做的好处是可以对每篇文章自定义摘要长度。不过对我来说，至少目前并不会特别为文章专门写一段摘要<del>（因为懒）</del>，自动摘要已经可以满足我快速翻阅浏览文章的需求，而且我也不通过摘要来区分文章内容。所以NexT推荐的方式不是我的痛点。对于有专门写摘要需求的人，当然更推荐后者。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Node.js包管理工具Yarn</title>
    <url>/2018/09/05/%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn/</url>
    <content><![CDATA[<h1 id="为什么要使用yarn">为什么要使用Yarn？</h1>
<p>Node.js自带一个包管理工具npm，不过在我的日常使用（写博客）过程中（比如说要卸载模块的时候），npm出现了一些奇怪的问题，网上也没有查询到解决办法。所以打算尝试使用另外一个包管理工具Yarn看看是否问题能得到解决。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_05_%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn_npm%E9%97%AE%E9%A2%98.png" alt="npm问题.png" /><figcaption aria-hidden="true">npm问题.png</figcaption>
</figure>
<h1 id="什么是yarn">什么是Yarn？</h1>
<p>Yarn是Facebook，Google，Exponent和Tilde开发的一款新的JavaScript包管理工具，目的是解决这些团队使用npm时遇到的问题。</p>
<h1 id="安装yarn">安装Yarn</h1>
<p>我们使用npm来安装Yarn。在命令行或Git Bash中输入：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g <span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="使用yarn">使用Yarn</h1>
<p>对于我们来说，只要知道常见的npm操作对应的Yarn命令就行了，下面采用对比的方式罗列出Yarn对应于npm的命令。</p>
<h2 id="安装依赖">安装依赖</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等同于</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Yarn将通过自己的解析算法来重新组织<code>node_modules</code> 目录，这个算法和<code>node.js</code>模块解析算法是兼容的。</p>
<p>执行这个命令或者<code>yarn add &lt;package&gt;</code>命令后，Yarn还会在该目录下生成一个<code>yarn.lock</code>文件，大致类似于npm的<code>package-lock.json</code>。<strong>在迁移博客的时候<code>yarn.lock</code>也要记得一同复制到新的地方。</strong>（见我的另一篇文章：<a href="/2018/08/21/%E5%B0%86%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/" title="将博客迁移到另一台电脑">将博客迁移到另一台电脑</a>）</p>
<h2 id="安装新模块本地">安装新模块（本地）</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等同于</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>[package]是你想要安装的模块名，Yarn会安装该模块并自动更新<code>package.json</code>和<code>yarn.lock</code>文件。如果你看过我之前的文章<a href="https://xfdj.github.io/2018/07/27/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2/">搭建一个免费博客</a>，那么就知道安装到本地和全局的区别了。</p>
<h2 id="安装新模块全局">安装新模块（全局）</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> global <span class="token function">add</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等同于</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="删除模块本地">删除模块（本地）</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> remove <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等同于</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall --save <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="删除模块全局">删除模块（全局）</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> global remove <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等同于</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall -g <span class="token punctuation">[</span>package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="修改镜像源">修改镜像源</h1>
<p>由于 Yarn 的默认源地址在国外，因此有时从国内访问的速度会比较慢，甚至会出现连接不上的情况。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_05_%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn_Yarn%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5.png" alt="Yarn连接失败.png" /><figcaption aria-hidden="true">Yarn连接失败.png</figcaption>
</figure>
<p>我们可以使用如下命令来查看 Yarn 当前使用的源：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_05_%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn_%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E6%BA%90.png" alt="查看当前源.png" /><figcaption aria-hidden="true">查看当前源.png</figcaption>
</figure>
<p>去查询网站搜索可以得知，这个网址的归属地在美国。</p>
<p>不过好在阿里旗下维护着一个完整的 npm 镜像源 https://registry.npm.taobao.org/ 同样适用于 Yarn。下面提供了两种修改方式。</p>
<h2 id="手动修改源">手动修改源</h2>
<p>可以使用下面的命令来修改镜像源。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_09_05_%E4%BD%BF%E7%94%A8Node-js%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Yarn_%E6%88%90%E5%8A%9F%E5%88%87%E6%8D%A2%E9%95%9C%E5%83%8F%E6%BA%90.png" alt="成功切换镜像源.png" /><figcaption aria-hidden="true">成功切换镜像源.png</figcaption>
</figure>
<h2 id="使用yrm快速切换源">使用yrm快速切换源</h2>
<p>yrm（Yarn registry manager）不仅可以快速切换镜像源，还可以测试自己网络访问不同源的速度。</p>
<h3 id="安装yrm">安装yrm</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> global <span class="token function">add</span> yrm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="使用方式">使用方式</h3>
<ul>
<li><p>列出当前可用的所有镜像源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yrm <span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>使用淘宝镜像源</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yrm use taobao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>测试访问速度</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yrm <span class="token builtin class-name">test</span> taobao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<p>更多用法可以查看<a href="https://github.com/i5ting/yrm">yrm的GitHub</a>。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://learnku.com/articles/15976/yarn-accelerate-and-modify-mirror-source-in-china">yarn 国内加速，修改镜像源 | Laravel China 社区</a></li>
</ul>
]]></content>
      <tags>
        <tag>博客</tag>
        <tag>Node.js</tag>
        <tag>Yarn</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>修改Ubuntu 18.04的启动效果</title>
    <url>/2018/10/01/%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<p>Ubuntu 18.04的启动效果看起来比较土，所以打算更换Ubuntu的Grub主题和加载动画。在网上查找资料时发现有许多方法都已经过时，所以自己在这里整理出适用于18.04版本的方法。亲测可用。</p>
<h2 id="更改grub主题">更改Grub主题</h2>
<p>Grub是Linux的系统启动管理器。如果你的电脑上同时安装了Windows和Linux，可以在Grub里选择你要启动的操作系统。Ubuntu 18.04使用的是Grub2作为默认启动管理器。</p>
<h3 id="下载grub主题">下载Grub主题</h3>
<pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//www.gnome-look.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个网站有包括Grub主题在内的许多主题免费下载。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_gnome-look%E7%BD%91%E7%AB%99.png" alt="gnome-look网站.png" /><figcaption aria-hidden="true">gnome-look网站.png</figcaption>
</figure>
<p>选择左侧的<code>Grub Themes</code>链接，就能看到其他人制作的Grub启动器主题，右侧的<code>3 Months Ranking</code>是近三个月的主题下载排名，排名高的一般都是比较好看的主题，可以参考。此外，每个主题有评分和更新日期，尽量选择离现在比较近的那些主题，因为太久之前更新的主题有可能不兼容现在的Grub。</p>
<p>以<code>Grub-theme-vimix</code>这个主题为例。找到<code>Grub-theme-vimix</code>的页面，点击页面中的<code>Files</code>，然后下载。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_Grub-theme-vimix%E7%BD%91%E9%A1%B5.png" alt="Grub-theme-vimix网页.png" /><figcaption aria-hidden="true">Grub-theme-vimix网页.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_Grub-theme-vimix%E4%B8%8B%E8%BD%BD%E9%A1%B5.png" alt="Grub-theme-vimix下载页.png" /><figcaption aria-hidden="true">Grub-theme-vimix下载页.png</figcaption>
</figure>
<h3 id="安装grub主题">安装Grub主题</h3>
<p>将下载好的文件解压，解压出来的文件夹里面有一个名为<code>Vimix</code>的文件夹和一个名为<code>Install</code>的文件。如下图所示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_Vimix%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%86%85%E5%AE%B9.png" alt="Vimix压缩包内容.png" /><figcaption aria-hidden="true">Vimix压缩包内容.png</figcaption>
</figure>
<p>我们只需用到文件夹，<code>Install</code>文件是用来自动安装主题的，打开这个文件的内容就能看到Grub主题是怎么被安装的，鉴于有些主题里的文件太老，不适合最新的系统，所以我们采取手动安装的方式。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_Install%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9.png" alt="Install文件内容.png" /><figcaption aria-hidden="true">Install文件内容.png</figcaption>
</figure>
<p>首先将<code>Vimix</code>文件夹拷贝到<code>/boot/grub/themes</code>目录下（需要root权限，如果没有<code>themes</code>文件夹就新建一个）。用命令行的指令如下（首先进到<code>Vimix</code>文件夹所在的目录）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> -r Vimix /boot/grub/themes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>-r</code>表示复制目录及其子目录内的所有内容。</p>
<p>第二步是修改Grub的配置文件。找到并打开<code>/etc/default</code>目录下的<code>grub</code>文件（也需要root权限）。在最后一行加上：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">GRUB_THEME</span><span class="token operator">=</span><span class="token string">"/boot/grub/themes/Vimix/theme.txt"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>大概的意思就是使用刚才复制到<code>themes</code>目录下的主题，在<code>Vimix</code>文件夹下有一个名为<code>theme.txt</code>的文件，它会告诉Grub如何加载这个主题。</p>
<p>编辑完不要忘记保存。</p>
<p>最后在命令行bash中输入如下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">update-grub</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个命令会根据刚才的配置文件更新Grub的配置。重新启动一下，你就能看到刚才安装的主题了。</p>
<h3 id="删除grub主题">删除Grub主题</h3>
<p>要想删除安装的Grub主题，只需要将对应的主题文件夹（比如Vimix）移除，再把<code>/etc/default/grub</code>里加上的那一行删掉，最后执行<code>sudo update-grub</code>命令更新Grub配置即可。</p>
<h3 id="替换主题背景图片">替换主题背景图片</h3>
<p>如果想把主题的背景图片换成自己喜欢的图片，可以查看<code>themes.txt</code>文件，找到<code>desktop-image</code>一项，后面的图片就是背景图片，所以在文件夹中找到图片，用自己准备好的图片代替（名称要完全相同）就行了。</p>
<h3 id="替换主题文字">替换主题文字</h3>
<p>如果对主体的文字不满意，想要换成自己喜欢的文字，由于Grub不支持.ttf、.otf格式的字体文件，所以准备好字体之后，需要用<code>grub-mkfont</code>生成Grub专用的字体格式：.pf2格式。举个例子，如果准备的字体名称是<code>myfont.ttf</code>，在终端执行：</p>
<pre class="line-numbers language-none"><code class="language-none">grub-mkfont -o myfont.pf2 -s 32 -n &quot;myfont&quot; myfont.ttf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>-o</code>表示输出的文件名，<code>-s</code>表示字体的大小，<code>-n</code>表示字体的名称（用于修改<code>themes.txt</code>文件），最后是字体文件名。</p>
<p>执行成功后目录下就会多出一个<code>myfont.pf2</code>字体文件，将这个文件复制到主题文件夹和<code>themes.txt</code>同目录下。</p>
<p>接下来打开<code>themes.txt</code>文件，将<code>terminal-font</code>、<code>item_font</code>、<code>font</code>等所有带font的配置都改成之前<code>-n</code>设置的字体名称，比如改成：<code>terminal-font:"myfont"</code>。保存退出。</p>
<p>然后按照之前的安装步骤正常安装即可。</p>
<h2 id="更改plymouth主题">更改Plymouth主题</h2>
<blockquote>
<p>Plymouth is the application which provides the graphical "splash" screen when booting and shutting down an Ubuntu system.</p>
<p>——Ubuntu Wiki</p>
</blockquote>
<p>如Ubuntu Wiki所说，Plymouth就是显示下面这个紫薯效果的东西。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_Ubuntu%20splash.jpg" alt="Ubuntu splash.jpg" /><figcaption aria-hidden="true">Ubuntu splash.jpg</figcaption>
</figure>
<p>下面就来更换这个默认的主题。</p>
<p><code>警告：更改Plymouth主题有让电脑变砖的风险，请小心操作并提前备份好你的重要数据!</code></p>
<h3 id="下载plymouth主题">下载Plymouth主题</h3>
<p>Plymoyth的主题同样是到刚才的网站</p>
<pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">https:</span>//www.gnome-look.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>下载。点击左侧的<code>Plymouth Themes</code>链接就可以看到许多Plymouth主题，不过和Grub主题一样，有些Plymouth主题由于“年代久远”，并不兼容现在的Plymouth，原则上来说一般不建议下载2010年以前的主题。</p>
<p>Plymouth主题的下载方式和Grub主题的一样，这里就不再赘述。</p>
<h3 id="安装plymouth主题">安装Plymouth主题</h3>
<p>为了接下来的操作方便，首先安装一些Plymouth的默认主题。可以通过下面这个命令安装：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> plymouth-themes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条命令会自动创建<code>/usr/share/plymouth/themes</code>并且附带几个简单的主题。</p>
<p>下面开始安装自定义主题。以<code>Ubunut Spinner Logo Plymouth</code>这个主题为例（从下载下来的文件来看，这里是网页上的主题标题打错了）。</p>
<p>解压下载好的文件，里面有一个名为<code>ubuntu-spinner-logo</code>的文件夹还有一个readme文件，那个文件夹就是我们需要的主题。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_ubuntu-spinner-logo%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%86%85%E5%AE%B9.png" alt="ubuntu-spinner-logo压缩包内容.png" /><figcaption aria-hidden="true">ubuntu-spinner-logo压缩包内容.png</figcaption>
</figure>
<p>如果你去看<code>Install Read Me</code>文件的话，你会发现这个主题是要复制到<code>/lib/plymouth/themes</code>这里去，但是别着急，刚才说到有一些主题是较早时间发布的老版本主题，因此这些路径是已经失效的，现在Plymouth的主题放置路径是在刚才安装<code>plymouth-themes</code>时提到的那个路径下。</p>
<p>首先，打开<code>ubuntu-spinner-logo</code>目录下的<code>ubuntu-spinner-logo.plymouth</code>文件，文件里两个路径：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_%E7%BC%96%E8%BE%91ubuntu-spinner-logo.plymouth.png" alt="编辑ubuntu-spinner-logo.plymouth.png" /><figcaption aria-hidden="true">编辑ubuntu-spinner-logo.plymouth.png</figcaption>
</figure>
<p>刚才说过这两个路径已经失效，因此需要把他们更改过来，也就是将</p>
<pre class="line-numbers language-none"><code class="language-none">ImageDir&#x3D;&#x2F;lib&#x2F;plymouth&#x2F;themes&#x2F;ubuntu-spinner-logo
ScriptFile&#x3D;&#x2F;lib&#x2F;plymouth&#x2F;themes&#x2F;ubuntu-spinner-logo&#x2F;ubuntu-spinner-logo.script<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>改成</p>
<pre class="line-numbers language-none"><code class="language-none">ImageDir&#x3D;&#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;themes&#x2F;ubuntu-spinner-logo
ScriptFile&#x3D;&#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;themes&#x2F;ubuntu-spinner-logo&#x2F;ubuntu-spinner-logo.script<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>并保存。</p>
<p>修改完以后，要顺便检查一下目录名称。从刚才编辑的文件中我们可以得知这个主题的名字叫<code>ubuntu-spinner-logo</code>，Plymouth的主题名称和主题文件名以及主题目录名，必须完全一致，不然会报错。所以检查一下文件夹名是否也为<code>ubuntu-spinner-logo</code>，如果不是要改过来。</p>
<p>接下来将<code>ubuntu-spinner-logo</code>文件夹拷贝到相应的目录下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> -r ubuntu-spinner-logo /usr/share/plymouth/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>复制完以后，还需要使用下面这条命令安装这个主题：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/ubuntu-spinner-logo/ubuntu-spinner-logo.plymouth <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这里解释一下<code>--install</code>后面的四个参数的含义，第一和第二个参数是默认主题的路径和名称，安装主题时这两个参数都一样，第三个参数是你需要安装的主题的路径，需要填的是对应的主题目录下<code>.plymouth</code>的路径，最后一个参数表示的是优先级，不需要知道是什么意思，都设成100就好。</p>
<p>接着使用下面的命令选择刚刚安装的主题：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-alternatives --config default.plymouth<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果安装成功了，就会在选项中出现候选的主题，如下图所示。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_10_01_%E4%BF%AE%E6%94%B9Ubuntu-18-04%E7%9A%84%E5%90%AF%E5%8A%A8%E6%95%88%E6%9E%9C_%E9%80%89%E6%8B%A9Plymouth%E4%B8%BB%E9%A2%98.png" alt="选择Plymouth主题.png" /><figcaption aria-hidden="true">选择Plymouth主题.png</figcaption>
</figure>
<p>最后输入一条命令使刚才选择的设置生效：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-initramfs -u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果没有问题，重启一下，就可以看到效果了。</p>
<h3 id="可能出现的错误">可能出现的错误</h3>
<p>如果在最后两步不幸遇到了和下面类似的错误提示：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">W: plymouth module <span class="token string">"(/usr/lib/i386-linux-gnu/plymouth//.so)"</span> missing, skipping that theme.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>据说这是一个内核级的错误，这时候千万不要重启，不然可能会卡在开机界面。这种情况有可能是路径设置错误，或者是主题太老，需要删除主题，尝试检查路径并重来一遍。</p>
<h3 id="删除plymouth主题">删除Plymouth主题</h3>
<p>和Grub主题不一样，Plymouth主题涉及到安装命令，因此删除主题不是简单地移除文件夹，还需要相应的卸载命令，卸载命令如下（以ubuntu-spinner-）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-alternatives --remove default.plymouth /usr/share/plymouth/themes/ubuntu-spinner-logo/ubuntu-spinner-logo.plymouth<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后移除文件夹，用<code>sudo update-alternatives --config default.plymouth</code>命令重新指定主题，最后用<code>sudo update-initramfs -u</code>更新配置。主题才算删除。</p>
<h2 id="参考文章">参考文章</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/41708902#3-grub-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%BE%8E%E5%8C%96">Ubuntu 18.04 安装、配置和美化</a></li>
<li><a href="http://www.cnblogs.com/feipeng8848/p/8970556.html">给Ubuntu18.04安装mac os主题 - feipeng8848 - 博客园</a></li>
<li><a href="http://blog.topspeedsnail.com/archives/2630">改变Ubuntu/Linux Mint启动动画界面（Plymoyth） -WTF Daily Blog</a></li>
<li><a href="http://www.cnblogs.com/zhuxiaojie/p/8066466.html">ubuntu更换开机动画 - 朱小杰 - 博客园</a></li>
<li><a href="https://blog.csdn.net/mutilcam_prince/article/details/78299628">Ubuntu 16.04美化——Plymouth(splash screen/开机画面)主题安装 - 一个年迈的程序员 - CSDN博客</a></li>
<li><a href="http://www.cnblogs.com/yaoxing/archive/2013/02/11/customize-gnome.html">定制GNOME的一些方法 - yaoxing - 博客园</a></li>
<li><a href="https://www.jianshu.com/p/d8963538bcd9">修改grub主题（分辨率，字体大小） - 简书</a></li>
</ul>
<p>文章里还有关于美化Ubuntu 18.04桌面的方法，由于比较简单就不在本文介绍。</p>
]]></content>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Grub</tag>
        <tag>Plymouth</tag>
        <tag>Gnome</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在Hexo的博文中引用自己的文章</title>
    <url>/2020/05/12/%E5%A6%82%E4%BD%95%E5%9C%A8Hexo%E7%9A%84%E5%8D%9A%E6%96%87%E4%B8%AD%E5%BC%95%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>我之前写的文章中有引用到自己的另一篇文章，当时我的解决方法是链接引用，比如这样：<code>[搭建一个免费博客](https://xfdj.github.io/2018/07/27/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2/)</code>。事情在我将博客部署到Gitee上之后出现了问题。当我点击这个链接的时候，打开的不是Gitee上的文章，而是GitHub上的文章。这样肯定是不行的。</p>
<p>查阅了网上资料后，我了解到Hexo提供了一个叫作<code>post_link</code>的标签语法来专门对内部博文进行引用。它的格式如下：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% post_link 文件名(不要后缀) 文章别名(可选) %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中文件名指的是Markdown文件的文件名，例如你的博客中有一篇文件名为<code>HelloWorld.md</code>的博文，那你就可以使用</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% post_link HelloWorld %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>来引用。Hexo会自动将这篇博文的标题显示在文章中，并带上正确的链接。当然，你也可以给链接使用一个另外的名字，比如“我的HelloWorld”：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% post_link HelloWorld 我的HelloWorld %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>文件名这一项是可以带上目录名的，比如<code>HelloWorld.md</code>这个文件放在<code>_posts/hello</code>这个目录，那你引用的时候需要跟上目录名，否则会引用不到。</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% post_link hello/HelloWorld %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.mls-tech.info/hexo/hexo-use-internal-link/">如何在Hexo的博文中引用自己的文章 | 梅老师的个人博客</a></li>
</ul>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>学习使用Python虚拟环境virtualenv</title>
    <url>/2019/09/08/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83virtualenv/</url>
    <content><![CDATA[<h1 id="什么是虚拟环境为什么要使用虚拟环境">什么是虚拟环境？为什么要使用虚拟环境？</h1>
<p>虚拟环境是指Python程序在其中运行时，所使用的包是独立于全局安装的包的情况。使用虚拟环境可以允许同时安装不同版本的包，让不同的程序各取所需，互不干扰，也能避免全局安装过多的包，产生各种各样的依赖问题。</p>
<h1 id="使用virtualenv">使用virtualenv</h1>
<p><code>virtualenv</code>是Python的一个包，用来创建和管理虚拟环境，这些环境互相是隔离的，可以各自安装所需要的指定版本的包。</p>
<h2 id="安装">安装</h2>
<p>首先使用<code>pip</code>来安装<code>virtualenv</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> virtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="使用">使用</h2>
<p>我们在要创建虚拟环境的目录下运行下面指令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">virtualenv --no-site-packages venv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样就可以在当前目录下创建一个名为venv的Python虚拟运行环境。</p>
<p>参数<code>--no-site-packages</code>表示不复制已经安装到系统Python环境中的所有第三方包。这样就得到了一个干净的Python环境。</p>
<div class="note info"><p>从virtualenv 1.7版本之后，将<code>--no-site-packages</code>改成了默认行为，因此不再需要这个参数。</p>
</div>
<p>虚拟环境全部都被放到了venv目录下。</p>
<p>接下来我们需要用下面的命令来进入这个虚拟环境：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> venv/Scripts/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果是cmd的话就把上面的命令换成下面的：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">venv<span class="token punctuation">\</span>Scripts<span class="token punctuation">\</span>activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这里是Windows的activate目录，Linux下的activate的目录可能稍微有些区别。执行完之后你会发现命令行前端出现了一个<code>(venv)</code>前缀，表示我们已经进入venv虚拟环境中了。</p>
<p>接下来使用<code>pip</code>安装的包，都会安装在venv环境中，全局环境不受影响。</p>
<p>如果要退出虚拟环境，使用下面的命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>此时可以发现前缀消失，我们又回到了正常的环境中了。</p>
<h2 id="其他参数">其他参数</h2>
<p>直接在命令行里输入</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">virtualenv --help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以查看virtualenv的各种参数和用法。</p>
<h2 id="在jupyter-notebook里使用virtualenv">在Jupyter Notebook里使用virtualenv</h2>
<ol type="1">
<li><p>在命令行下进入虚拟环境（这里以venv举例）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> venv/Scripts/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>安装Jupyter Notebook和ipykernel</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip installl jupyter ipykernel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>将virtualenv加入ipykernel</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python -m ipykernel <span class="token function">install</span> --user --name<span class="token operator">=</span>pytorch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>name后面根据需要随便取个名字，由于我是在学习PyTorch的时候接触到virtualenv的，所以想在Jupyter里使用PyTorch的虚拟环境。</p></li>
<li><p>开启Jupyter Notebook</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jupyter notebook<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以看到你加入的虚拟环境了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_09_08_jupyter%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83.png" alt="jupyter中的虚拟环境.png" /><figcaption aria-hidden="true">jupyter中的虚拟环境.png</figcaption>
</figure></li>
</ol>
<h1 id="使用virtualenvwrapper">使用virtualenvwrapper</h1>
<p><code>virtualenv</code>虽然好用，但是还是存在一些问题，比如对中文路径的支持比较差，如果在一个包含中文的路径下创建虚拟环境，会无法通过activate进入这个虚拟环境（即使在执行了activate命令之后，命令行会显示虚拟环境的名称）。为了解决这个问题，我们可以将虚拟环境统一放在一个不含中文的目录中，为了方便管理这些虚拟环境，我们可以使用<code>virtualenvwrapper</code>。</p>
<p><code>virtualenvwrapper</code>提供了一系列命令使得和虚拟环境工作变得愉快许多。它把所有的虚拟环境都放在一个地方。</p>
<p>在Windows下Git Bash对virtualenvwrapper的支持不是太好。</p>
<h2 id="windows下的安装">Windows下的安装</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> virtualenvwrapper-win<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>随后添加一个环境变量<code>WORKON_HOME</code>，填上自己想保存虚拟环境的地址。</p>
<h2 id="基本使用">基本使用</h2>
<ol type="1">
<li><p>创建一个虚拟环境：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkvirtualenv venv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这会在 <code>WORKON_HOME</code> 中创建一个<code>venv</code> 文件夹，并创建虚拟环境。</p></li>
<li><p>在虚拟环境上工作：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">workon venv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>virtualenvwrapper 提供环境名字的Tab补全功能。当你有很多环境， 并且很难记住它们的名字时，这就显得很有用。 <code>workon</code> 也能停止当前所在的环境，所以您可以在环境之间快速的切换。</p></li>
<li><p>停止是一样的：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>删除：</p>
<pre class="line-numbers language-none"><code class="language-none">rmvirtualenv venv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h2 id="其他有用的命令">其他有用的命令</h2>
<ul>
<li><p><code>lsvirtualenv</code></p>
<p>列举所有的环境。</p></li>
<li><p><code>cdvirtualenv</code></p>
<p>导航到当前激活的虚拟环境的目录中，比如说这样你就能够浏览它的 <code>site-packages</code> 。</p></li>
<li><p><code>cdsitepackages</code></p>
<p>和上面的类似，但是是直接进入到 <code>site-packages</code> 目录中。</p></li>
<li><p><code>lssitepackages</code></p>
<p>显示 <code>site-packages</code> 目录中的内容。</p></li>
</ul>
<p>更多命令的用法可以查看文末给出的官方文档。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://virtualenv-chinese-docs.readthedocs.io/en/latest/">virtualenv —— virtualenv 1.7.1.2.post1 documentation</a></li>
<li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1019273143120480">virtualenv - 廖雪峰的官方网站</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/33257881">Virtualenv in IPython Jupyter Notebook - 知乎</a></li>
<li><a href="https://pythonguidecn.readthedocs.io/zh/latest/dev/virtualenvs.html">Pipenv &amp; 虚拟环境 — The Hitchhiker's Guide to Python</a></li>
<li><a href="https://virtualenvwrapper.readthedocs.io/en/latest/index.html">virtualenvwrapper 5.0.1.dev2 — virtualenvwrapper 5.0.1.dev2 documentation</a></li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>将博客迁移到另一台电脑</title>
    <url>/2018/08/21/%E5%B0%86%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<p><code>注：为了避免发生问题，本篇教程只适用于依照我之前的教程搭建的博客。</code></p>
<h1 id="迁移博客的原因">迁移博客的原因</h1>
<p>需要重装电脑，所以博客的迁移自然成了一个问题。由于Hexo的配置以及文章均保存在本地，所以暂时没办法像其他在线博客平台一样随时撰文发布。要想在新的电脑上继续更新原来的博客，就需要进行迁移。</p>
<h1 id="迁移博客的要求">迁移博客的要求</h1>
<p>首先，我们想让之前的配置在新的电脑上依然有效，模板、皮肤以及各种其他的设置都能保留下来，而不用重新配置。</p>
<p>其次，博客之前的文章不能丢，并且发布的时间顺序以及其他信息要保持原样。</p>
<p>最后，博客要可以继续发布在原来的GitHub仓库上，新的博文可以通过之前的网址访问到。</p>
<h1 id="开始迁移">开始迁移</h1>
<p>网上这方面的资料不是很多，一开始查询到的解决方案各执一词。经过对比之后，我打算参考以下两篇文章的方案：</p>
<p><a href="https://blog.csdn.net/littlehaes/article/details/81503455">hexo博客迁移到另一台电脑 - CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/study-everyday/p/8902136.html">换了电脑如何使用hexo继续写博客 - 明志健致远 - 博客园</a></p>
<h2 id="复制原博客文件夹的文件">复制原博客文件夹的文件</h2>
<p>如果你是像我一样重装了电脑，那么在重装之前你需要先复制原博客文件夹中的这些项（以<code>/</code>结尾的表示是目录）：</p>
<table>
<colgroup>
<col style="width: 35%" />
<col style="width: 64%" />
</colgroup>
<thead>
<tr class="header">
<th>文件和目录</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>_config.yml</td>
<td>站点配置文件，很多全局配置都存在这里</td>
</tr>
<tr class="even">
<td>package.json</td>
<td>里面存着Hexo框架的参数（比如版本号什么的）和依赖的插件</td>
</tr>
<tr class="odd">
<td>package-lock.json（可选择不复制）</td>
<td>我发现自己的文件夹下有这么一个文件，查询了一下发现package.json只能锁定依赖插件的大版本，而这个文件可以锁定小版本，这就是lock的意思，它可以保证依赖一致。</td>
</tr>
<tr class="even">
<td>yarn.lock（如果有的话）</td>
<td>安装了Yarn之后产生的文件，作用和package.json类似</td>
</tr>
<tr class="odd">
<td>scripts/（如果有的话）</td>
<td>用来存放脚本代码的文件夹</td>
</tr>
<tr class="even">
<td>scaffolds/</td>
<td>字面意思是“脚手架”，里面存着模板文件（像post.md什么的），当你新建一篇文章的时候，Hexo实际上会把相应的模板文件（默认是post.md）复制到source文件夹下的_posts文件夹里，然后修改文件名。</td>
</tr>
<tr class="odd">
<td>source/</td>
<td>最重要，因为这是存放博客文章的地方，没了它，你写的文章就都没了。</td>
</tr>
<tr class="even">
<td>themes/</td>
<td>博客网站的主题存在这里。</td>
</tr>
<tr class="odd">
<td>.gitignore</td>
<td>用于声明被Git忽略的文件。</td>
</tr>
</tbody>
</table>
<p>无需拷贝的部分有：</p>
<table>
<colgroup>
<col style="width: 17%" />
<col style="width: 82%" />
</colgroup>
<thead>
<tr class="header">
<th>文件和目录</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>node_modules/</td>
<td>里面存放着npm安装的依赖包，这些包的信息都保存在package.json和package-lock.json里了，不需要同步。</td>
</tr>
<tr class="even">
<td>.deploy_git/</td>
<td>Hexo默认的.git配置文件夹，不需要同步。</td>
</tr>
<tr class="odd">
<td>public/</td>
<td>根据source/的内容自动生成，不需要同步。</td>
</tr>
<tr class="even">
<td>db.json</td>
<td>自动生成的数据库文件，不需要同步。</td>
</tr>
</tbody>
</table>
<p>将这些文件复制到U盘或者其他不被影响的存储介质上之后，就可以转战新电脑了。</p>
<h2 id="安装必要软件">安装必要软件</h2>
<p>首先需要在新电脑上安装并配置Git和Node.js，方法见我之前的文章<a href="/2018/07/27/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2/" title="搭建一个免费博客">搭建一个免费博客</a>。</p>
<h2 id="粘贴文件">粘贴文件</h2>
<p>在你需要建立博客的目录下粘贴原电脑上复制出来的文件和文件夹。</p>
<h2 id="安装hexo">安装Hexo</h2>
<p>这个步骤之前漏掉了，因为我之前以为npm会在下一步安装Hexo，结果当我想要写新的博客的时候，就会出现这样的错误：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_08_21_%E5%B0%86%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91_%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF.png" alt="错误信息.png" /><figcaption aria-hidden="true">错误信息.png</figcaption>
</figure>
<p>这时候需要在命令行或Git Bash中输入这个指令来安装Hexo：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条指令会在全局安装Hexo并且将它加入环境变量，之前的错误就是由于bash在环境变量里找不到Hexo导致的。这条指令更详细的解释参考之前的文章<a href="/2018/07/27/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2/" title="搭建一个免费博客">搭建一个免费博客</a>。</p>
<h2 id="安装所需模块">安装所需模块</h2>
<p>在博客目录下打开命令行或Git Bash，输入如下指令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果安装了yarn可以使用：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_08_21_%E5%B0%86%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91_%E5%AE%89%E8%A3%85%E6%89%80%E9%9C%80%E6%A8%A1%E5%9D%97.png" alt="安装所需模块.png" /><figcaption aria-hidden="true">安装所需模块.png</figcaption>
</figure>
<p>如果出现了上图中<code>added xxx packages in xxxs</code>的字样即为安装成功。</p>
<p>至此，你就可以在新电脑发布博客了，发布过程和之前完全一样。</p>
<p>之后如果有更加方便的迁移方法，我会发表在另外的文章中。</p>
<h2 id="更新主题">更新主题</h2>
<p>如果是使用git的子模块来管理主题的话，使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> submodule init
<span class="token function">git</span> submodule update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>两句命令来更新主题。</p>
]]></content>
      <tags>
        <tag>博客</tag>
        <tag>Git</tag>
        <tag>Node.js</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>拓扑学（一）：引言</title>
    <url>/2018/09/03/%E6%8B%93%E6%89%91%E5%AD%A6%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%BC%95%E8%A8%80/</url>
    <content><![CDATA[<p>这篇文章是我的学习笔记系列第一篇文章。和传统的学习笔记不同的是，我不只是打算在上面罗列知识点，而是想用自己的语言重新描述课堂上所学到的知识，用自己的思维逻辑来重新理解这些知识。最理想的打算是当我几乎忘记这门课的内容时，能够通过回看自己的文章重新捡起这些内容。当然，这个任务是相当难完成的。而且我事先也预计到，这是一项相当花费脑力和时间的工作。我会尽最大的努力坚持下去。</p>
<h1 id="引言">引言</h1>
<p>拓扑学是一门大四才开设的数学专业选修课程。而我既不是大四，也不是数学专业的学生。因此，选修这门课是对我的一个挑战。我将会在几乎没有任何知识铺垫的情况下来学习拓扑学这门课程。如果是正常的情况下，一位到了大四的数学专业学生至少应该学过数学分析、抽象代数等课程。而我在询问老师之后了解到拓扑学需要一部分抽象代数里的知识。并且如果学过微分几何等其他的学科的话，会掌握更多有助于理解拓扑学概念的例子。</p>
<p>那么什么是拓扑学呢？有人说这是最难学的数学科目，这又是为什么呢？</p>
<blockquote>
<p>在数学里，<strong>拓扑学</strong>(英语：topology)，或意译为位相几何学，是一门研究拓扑空间的学科，主要研究空间内，在连续变化(如拉伸或弯曲，但不包括撕开或黏合)下维持不变的性质。</p>
<p>——维基百科</p>
</blockquote>
<p>从简介中看到，拓扑学是一种几何学，俗称橡皮几何学。和一般的几何学不同的是，拓扑学只考虑物体间的位置关系，而不考虑形状，大小。有个很常见的比方，拓扑学是把茶杯和甜甜圈看成同一种东西的学科。</p>
<p><code>这里缺了一张图</code></p>
<p>从一些科普文章多多少少了解到的情况来看，拓扑学的一些例子是非常生活化的。但是拓扑学要远比科普文中更抽象，更不具体。它的难，以我的理解，主要是从数学的角度出发。因为拓扑学中的物体有了更大的自由度，不再受到大小、长度、形状等的限制。那么对拓扑学上的同一类物体进行描述就变得更加困难。想象一只鸟从地面上起飞的过程。一般的几何学中认为，鸟的形状在不断变化，那么可以认为不同时刻的鸟是不同的。但是在拓扑学看来，鸟还是那只鸟。那么问题就是，这些形状不相同的物体之间的共同特征到底是什么？如何用数学的语言把它描述出来？就好比之前在数学分析中，如何描述极限这个问题一样，拓扑学的数学语言的建立，闪烁着许多数学家艰辛思考和探索的结晶。</p>
<blockquote>
<p>尽管拓扑性质是图形的一种很基本的性质，它也具有很强的几何直观，却很难用简单通俗的语言来准确地描述。它的确切定义是用抽象的语言叙述的。</p>
<p>——《基础拓扑学讲义》</p>
</blockquote>
<p>学习拓扑学，需要思考这样几个问题。</p>
<h2 id="拓扑学的研究对象是什么">拓扑学的研究对象是什么？</h2>
<p>我们说拓扑学的研究对象叫做<strong>拓扑空间</strong>。之后也可以看到，在拓扑学中的第一个定义，就定义了什么是拓扑空间。这里我存在一堆疑问，就是为什么我们不先去定义什么是一个拓扑的物体或对象，而是先去定义拓扑空间呢？数学上的空间又是什么东西呢？和我们日常生活中所说的空间有什么不同吗？</p>
<p>拓扑空间相对于一般的距离空间来说，没有了长度、夹角、距离，也就是度量的概念。拓扑学在现代的作用越来越大，可能就与拓扑弱化了距离，而导致拓扑空间的概念比距离空间更加抽象、更加宽泛、更加普适有关。</p>
<p>拓扑学有很多子领域。建立并研究拓扑的基础，并研究拓扑空间的性质，以及与拓扑空间相关的概念的拓扑学称为<strong>点集拓扑学</strong>。点击拓扑学的英文名称不是point set topology，而是general topology。又被称为一般拓扑学，是拓扑学内大多数分支的基础。</p>
<h2 id="什么是连续变形">什么是连续变形？</h2>
<p>这个问题是老师提出来的。所以从我们的角度来看，会有些突兀，因为这并不像我们想要提出的问题。那么为什么要提出这样的问题呢？我们再来看一遍拓扑学的简介。拓扑学研究几何图形或者空间在<strong>连续</strong>改变形状后还能保持不变的一些性质。有一个加粗的词语就是“连续”，所以我们必须严格给出连续的定义，用数学语言准确描述什么是连续，正如我们在数学分析中定义连续性那样。从某种程度上可以这么说，“连续性”是拓扑学中最基本，最重要的概念之一。</p>
<h2 id="如何对拓扑空间分类">如何对拓扑空间分类？</h2>
<p>这个可以说是拓扑学的基本问题。所谓分类，实际上是分集合上的拓扑结构。你会发现，基本上数学里的任何分支学科都绕不开集合。在集合上添加运算和代数结构，就是代数的方向；添加点与点的空间位置关系，就是分析的方向。</p>
<p>比如说我有两个拓扑对象，那么怎么说明它们是否是一样的呢？乍看之下，很简单的问题，要想准确的找出来共同特征，貌似还没有那么轻松。也就是说，我们甚至很难轻松说出两个东西是否一样。在拓扑学中，引进了“同胚”的概念。这个就类似一一映射。如何说明两把椅子是一样的呢？如果我能够在两把椅子之间建立一种一一映射，那么我就可以说这两把椅子是一样的。这个把戏在集合里就已经用过了。对于有限集来说，元素更多的集合当然更大，但是到了无限集，比如自然数集和整数集之间是否也能比较大小呢？哪个集合更大呢？通过在自然数集和整数集上建立一一映射，我们就可以说自然数集和整数集是一样大的。在还没有定义“同胚”之前，我猜想它也是类似的一种手段。</p>
<p>比如说我想证明整个教室里的椅子都是一样的。理论上来我们可以在椅子之间两两互相建立一一映射。如果聪明一点，可以在第一把椅子和第二把椅子之间建立映射，第二，把椅子和第三把椅子之间建立映射，……，最后一把椅子和第一把椅子之间建立映射。形成一个映射的环，也能说明整个教室的椅子都一样。但是拓扑空间实在是太多了，这种技巧几乎是不可能实现的。对于拓扑空间的分类，实际上一个非常难的问题。</p>
<h2 id="拓扑学的分支">拓扑学的分支</h2>
<p>在拓扑学下有几个分支。除了之前提到的点集拓扑学，还有代数拓扑学与微分拓扑学等。</p>
<ul>
<li>代数拓扑学。如果我在点集拓扑学的集合上，添加代数结构，使得能用抽象代数里的工具来研究拓扑空间，就成了代数拓扑。（用<strong>万有方式</strong>添加代数结构，意思是这种代数结构应该对所有 的拓扑空间都适用）</li>
<li>微分拓扑学。这里的微分两个字，更多是指工具和手段。简单来说就是在点集拓扑学上加上微分的结构，使得能用微分的手段来研究拓扑空间。之前提到拓扑学和微分几何的差别，导致不能用微分等工具应用于拓扑学，这里是如何将微分重新加入进来，暂时不得而知了。</li>
</ul>
<p>面向本科大四学生开设的拓扑学课程由于时间有限，大概会涉及点集拓扑学和代数拓扑学的部分内容。微分拓扑的内容不做涉及。</p>
]]></content>
      <tags>
        <tag>数学</tag>
        <tag>拓扑学</tag>
      </tags>
  </entry>
  <entry>
    <title>拓扑学（二）：拓扑空间与连续性</title>
    <url>/2018/09/03/%E6%8B%93%E6%89%91%E5%AD%A6%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E6%8B%93%E6%89%91%E7%A9%BA%E9%97%B4%E4%B8%8E%E8%BF%9E%E7%BB%AD%E6%80%A7/</url>
    <content><![CDATA[<p>离开了科普的伊甸园，马上就要迎来货真价实的数学了：）</p>
<h1 id="第一章拓扑空间与连续性">第一章：拓扑空间与连续性</h1>
<p>之前提到过第一个我们需要定义什么是拓扑空间。</p>
<ul>
<li><strong>定义</strong>：设<span class="math inline">\(X\)</span>为非空集合，<span class="math inline">\(\tau\)</span>为<span class="math inline">\(X\)</span>的子集族，如果<span class="math inline">\(\tau\)</span>满足：
<ol type="1">
<li><span class="math inline">\(X, \phi \in \tau\)</span>；</li>
<li><span class="math inline">\(A, B \in \tau, A \cap B \in \tau\)</span>；（<span class="math inline">\(\tau\)</span>中有限多个成员的交集仍在<span class="math inline">\(\tau\)</span>中）（有限交）</li>
<li><span class="math inline">\(\tau_1 \in \tau \Rightarrow \bigcup_{A \in \tau_1}A \in \tau\)</span>.（<span class="math inline">\(\tau\)</span>中任意多个成员的并集仍在<span class="math inline">\(\tau\)</span>中）（任意并）</li>
</ol>
称<span class="math inline">\(\tau\)</span>为<span class="math inline">\(X\)</span>的一个拓扑，称<span class="math inline">\((X, \tau)\)</span>为一个<strong>拓扑空间</strong>，<span class="math inline">\(\tau\)</span>中每个元素称为<span class="math inline">\(X\)</span>的<strong>开集</strong>. 若<span class="math inline">\(X\)</span>中的开集<span class="math inline">\(V\)</span>包含点<span class="math inline">\(x \in X\)</span>，则称<span class="math inline">\(V\)</span>为<span class="math inline">\(x\)</span>的一个<strong>邻域</strong>.</li>
</ul>
<p><code>注：集族是以集合为元素的集合，子集族是以子集为元素的集合。</code></p>
<p>上面这个定义不仅定义了拓扑空间，还定义了什么是开集，什么是邻域。这个定义在说什么呢？它告诉我们，只要规定集合的哪些子集是开集，就能定义这个集合的拓扑，这个拓扑就是开集的集合。那为什么又要定义邻域的概念呢？可以参考这个问题的回答：<a href="https://www.zhihu.com/question/35476809/answer/70381439">高数为什么要引进邻域概念？</a></p>
<p>接下来是几个拓扑空间的例子：</p>
<ul>
<li>欧式空间<span class="math inline">\(\mathbb{R}^n\)</span>。</li>
<li>欧式空间的曲线、曲面。</li>
<li>设<span class="math inline">\(X\)</span>为一个非空集合，<span class="math inline">\(\tau = 2^X\)</span>（X的幂集）为X的一个拓扑，称<span class="math inline">\(\tau\)</span>为<strong>离散拓扑</strong>，也是<span class="math inline">\(X\)</span>上所可能的最大拓扑。</li>
<li><span class="math inline">\(X\)</span>为非空集合，称<span class="math inline">\(\tau = \{ X, \phi \}\)</span>为<span class="math inline">\(X\)</span>的<strong>平凡拓扑</strong>，也是<span class="math inline">\(X\)</span>上所可能的最小拓扑。</li>
<li>设<span class="math inline">\(X\)</span>为任一非空集合，<span class="math inline">\(\tau_f\)</span></li>
</ul>
]]></content>
      <tags>
        <tag>数学</tag>
        <tag>拓扑学</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库Redis命令入门</title>
    <url>/2020/07/25/%E6%95%B0%E6%8D%AE%E5%BA%93Redis%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="redis-简介">Redis 简介</h1>
<blockquote>
<p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes with radius queries and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.</p>
<p>——<a href="https://redis.io/">Redis官网</a></p>
</blockquote>
<p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</p>
<p>Redis 与其他 key-value 缓存产品有以下三个特点：</p>
<ul>
<li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>
<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li>
<li>Redis支持数据的备份，即master-slave模式的数据备份。</li>
</ul>
<h2 id="redis-优势">Redis 优势</h2>
<ul>
<li>性能极高：Redis能读的速度是110000次/s,写的速度是81000次/s 。</li>
<li>丰富的数据类型：Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</li>
<li>原子性：Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</li>
<li>丰富的特性：Redis还支持 publish/subscribe, 通知, key 过期等等特性。</li>
</ul>
<h2 id="redis与其他key-value存储有什么不同">Redis与其他key-value存储有什么不同？</h2>
<ul>
<li>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。</li>
<li>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。</li>
</ul>
<h1 id="redis操作">Redis操作</h1>
<h2 id="启动服务端">启动服务端</h2>
<p>安装成功后，通过终端键入如下命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果出现类似下面的提示：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.727 <span class="token comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span>
<span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.727 <span class="token comment"># Redis version=5.0.9, bits=64, commit=9414ab9b, modified=0, pid=8672, just started</span>
<span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.728 <span class="token comment"># Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf</span>
                _._
           _.-`<span class="token variable"><span class="token variable">`</span>__ <span class="token string">''</span>-._
      _.-<span class="token variable">`</span></span><span class="token variable"><span class="token variable">`</span>    <span class="token variable">`</span></span><span class="token builtin class-name">.</span>  <span class="token variable"><span class="token variable">`</span>_.  <span class="token string">''</span>-._           Redis <span class="token number">5.0</span>.9 <span class="token punctuation">(</span>9414ab9b/0<span class="token punctuation">)</span> <span class="token number">64</span> bit
  .-<span class="token variable">`</span></span><span class="token variable"><span class="token variable">`</span> .-<span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">.</span>  <span class="token variable">`</span></span>`<span class="token variable"><span class="token variable">`</span><span class="token punctuation">\</span>/    _.,_ <span class="token string">''</span>-._
 <span class="token punctuation">(</span>    '      ,       .-<span class="token variable">`</span></span>  <span class="token operator">|</span> <span class="token variable"><span class="token variable">`</span>,    <span class="token punctuation">)</span>     Running <span class="token keyword">in</span> standalone mode
 <span class="token operator">|</span><span class="token variable">`</span></span>-._<span class="token variable"><span class="token variable">`</span>-<span class="token punctuation">..</span>.-<span class="token variable">`</span></span> __<span class="token punctuation">..</span>.-.`<span class="token variable"><span class="token variable">`</span>-._<span class="token operator">|</span>'<span class="token variable">`</span></span> _.-<span class="token string">'|     Port: 6379
 |    `-._   `._    /     _.-'</span>    <span class="token operator">|</span>     PID: <span class="token number">8672</span>
  <span class="token variable"><span class="token variable">`</span>-._    <span class="token variable">`</span></span>-._  <span class="token variable"><span class="token variable">`</span>-./  _.-<span class="token string">'    _.-'</span>
 <span class="token operator">|</span><span class="token variable">`</span></span>-._<span class="token variable"><span class="token variable">`</span>-._    <span class="token variable">`</span></span>-.__.-<span class="token string">'    _.-'</span>_.-<span class="token string">'|
 |    `-._`-._        _.-'</span>_.-<span class="token string">'    |           http://redis.io
  `-._    `-._`-.__.-'</span>_.-<span class="token string">'    _.-'</span>
 <span class="token operator">|</span><span class="token variable"><span class="token variable">`</span>-._<span class="token variable">`</span></span>-._    <span class="token variable"><span class="token variable">`</span>-.__.-<span class="token string">'    _.-'</span>_.-'<span class="token operator">|</span>
 <span class="token operator">|</span>    <span class="token variable">`</span></span>-._<span class="token variable"><span class="token variable">`</span>-._        _.-<span class="token string">'_.-'</span>    <span class="token operator">|</span>
  <span class="token variable">`</span></span>-._    <span class="token variable"><span class="token variable">`</span>-._<span class="token variable">`</span></span>-.__.-<span class="token string">'_.-'</span>    _.-<span class="token string">'
      `-._    `-.__.-'</span>    _.-<span class="token string">'
          `-._        _.-'</span>
              `-.__.-'

<span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.735 <span class="token comment"># Server initialized</span>
<span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.736 * DB loaded from disk: <span class="token number">0.001</span> seconds
<span class="token punctuation">[</span><span class="token number">8672</span><span class="token punctuation">]</span> 06 Aug <span class="token number">19</span>:42:44.736 * Ready to accept connections<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>则说明服务端启动成功。之后这个服务端需要一直保持开启，直到访问结束。</p>
<h2 id="启动客户端">启动客户端</h2>
<p>新打开一个终端，键入命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>命令行如果出现下面的提示，则说明启动成功。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="新建键值对">新建键值对</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> server:name <span class="token string">"fido"</span>
OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>新建了一个键名为<code>server:name</code>，值为<code>"fido"</code>的键值对。</p>
<h2 id="获取键值对">获取键值对</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> GET server:name
<span class="token string">"fido"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>获取键<code>server:name</code>所对应的值。</p>
<h2 id="判断给定键是否存在">判断给定键是否存在</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">EXISTS</span> server:name
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> <span class="token keyword">EXISTS</span> server:blabla
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>存在的键输出1，不存在输出0。</p>
<h2 id="删除键值对">删除键值对</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> connections <span class="token number">10</span>
OK
<span class="token operator">></span> DEL connections
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>删除成功输出1，删除失败（比如删除原本就不存在的键）输出0。</p>
<h2 id="修改值">修改值</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> connections <span class="token number">10</span>
OK
<span class="token operator">></span> INCR connections
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">11</span>
<span class="token operator">></span> INCRBY connections <span class="token number">100</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">111</span>
<span class="token operator">></span> DECR connections
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">110</span>
<span class="token operator">></span> DECRBY connections <span class="token number">10</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>INCR</code>表示让给定键对应的值自增1，<code>DECR</code>则是自减1，<code>INCRBY</code>和<code>DECRBY</code>分别可以指定增加或减少的值。需要注意的是，这里的操作全都是原子操作。</p>
<h2 id="让键值对存在指定长的时间">让键值对存在指定长的时间</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> resource:<span class="token keyword">lock</span> <span class="token string">"Redis Demo"</span>
OK
<span class="token operator">></span> EXPIRE resource:<span class="token keyword">lock</span> <span class="token number">120</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">110</span>
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">91</span>
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>EXPIRE</code>可以指定给定的键的存在时间（例子中是120秒），<code>TTL</code>可以查看给定的键还剩余多少时间，-2表示键已经不再存在了。对应的<code>PEXPIRE</code>和<code>PTTL</code>将单位换成了毫秒。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> resource:<span class="token keyword">lock</span> <span class="token string">"Redis Demo 1"</span>
OK
<span class="token operator">></span> EXPIRE resource:<span class="token keyword">lock</span> <span class="token number">120</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">119</span>
<span class="token operator">></span> <span class="token keyword">SET</span> resource:<span class="token keyword">lock</span> <span class="token string">"Redis Demo 2"</span>
OK
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>-1表示键不会到期，可以一直存在下去。如果重新<code>SET</code>了一个键，会修改它的终止期限。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> <span class="token keyword">SET</span> resource:<span class="token keyword">lock</span> <span class="token string">"Redis Demo 3"</span> EX <span class="token number">5</span>
OK
<span class="token operator">></span> PERSIST resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> TTL resource:<span class="token keyword">lock</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SET</code>也可以通过追加参数的方式来指定键存在的时间。<code>PERSIST</code>用来取消终止时间。</p>
<h2 id="添加列表元素">添加列表元素</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> RPUSH friends <span class="token string">"Alice"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> RPUSH friends <span class="token string">"Bob"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token operator">></span> LPUSH friends <span class="token string">"Sam"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>RPUSH</code>表示将元素添加到列表末尾，<code>LPUSH</code>则表示将元素添加到列表开头。返回值代表列表中的元素个数。</p>
<h2 id="子列表">子列表</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> LRANGE friends <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"Sam"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"Alice"</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"Bob"</span>
<span class="token operator">></span> LRANGE friends <span class="token number">1</span> <span class="token number">2</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"Alice"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"Bob"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>LRANGE</code>可以获取列表的给定子集，-1表示倒数第一个元素，-2则表示倒数第二个，以此类推。</p>
<h2 id="移除列表元素">移除列表元素</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> LPOP friends
<span class="token string">"Sam"</span>
<span class="token operator">></span> RPOP friends
<span class="token string">"Bob"</span>
<span class="token operator">></span> LLEN friends
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>LPOP</code>移除列表最左侧元素并返回值，<code>RPOP</code>移除列表最右侧元素并返回值，<code>LLEN</code>获取当前列表长度。</p>
<h2 id="一次添加多个列表元素">一次添加多个列表元素</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> RPUSH friends <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><code>RPUSH</code>和<code>LPUSH</code>都是可变参数的，因此可以一次向列表中添加多个元素。</p>
<h2 id="添加集合元素">添加集合元素</h2>
<p>集合类似于列表，只是它没有特定的顺序，而且每个元素只能出现一次。两个数据结构都非常有用,因为列表可以快速访问列表顶部或底部附近的元素，并且元素的顺序被保存下来。集合可以快速测试成员是否存在，也就是说，立即知道是否添加一个给定的元素。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SADD superpowers <span class="token string">"flight"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> SADD superpowers <span class="token string">"x-ray vision"</span> <span class="token string">"reflexes"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SADD</code>向集合中添加元素，可以一次添加多个。如果我们尝试添加的元素已经在里面，那么返回0，否则<code>SADD</code>返回成功添加的元素个数。</p>
<h2 id="移除集合元素">移除集合元素</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SREM superpowers <span class="token string">"reflexes"</span>
<span class="token number">1</span>
<span class="token operator">></span> SREM superpowers <span class="token string">"making pizza"</span>
<span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SREM</code>从集合中移除给定元素，输出1表示成功移除，输出0表示集合中不存在给定元素。</p>
<h2 id="测试给定值是否在集合中">测试给定值是否在集合中</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SISMEMBER superpowers <span class="token string">"flight"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> SISMEMBER superpowers <span class="token string">"reflexes"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SISMEMBER</code>测试给定值是否在集合中，1表示肯定，0表示否定。</p>
<h2 id="列出集合中的元素">列出集合中的元素</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SMEMBERS superpowers
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"x-ray vision"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"flight"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="合并两个集合">合并两个集合</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SADD birdpowers <span class="token string">"pecking"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> SADD birdpowers <span class="token string">"flight"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> SUNION superpowers birdpowers
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"flight"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"x-ray vision"</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"pecking"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SUNION</code>组合两个或多个集合并返回所有元素的列表。</p>
<h2 id="随机删除集合元素">随机删除集合元素</h2>
<p>集合还有一个非常类似于<code>LPOP</code>和<code>RPOP</code>的命令，用于从集合中删除元素，并将它们返回给客户端。但是，由于集合不是有序的数据结构，因此返回（和删除）的元素在本例中完全是随意的。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> SADD letters a b c d e f
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">6</span>
<span class="token operator">></span> SPOP letters
<span class="token string">"c"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="有序集合">有序集合</h2>
<p>排序集与常规集类似，但是现在每个值都有一个关联的分数。这个分数用于对集合中的元素进行排序。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> ZADD hackers <span class="token number">1940</span> <span class="token string">"Alan Kay"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1906</span> <span class="token string">"Grace Hopper"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1953</span> <span class="token string">"Richard Stallman"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1965</span> <span class="token string">"Yukihiro Matsumoto"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1916</span> <span class="token string">"Claude Shannon"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1969</span> <span class="token string">"Linus Torvalds"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1957</span> <span class="token string">"Sophie Wilson"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZADD hackers <span class="token number">1912</span> <span class="token string">"Alan Turing"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> ZRANGE hackers <span class="token number">2</span> <span class="token number">4</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"Claude Shannon"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"Alan Kay"</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"Richard Stallman"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>ZADD</code>在键和值之间添加了一个用于排序的分数，排序集按照从小到大的顺序排序。</p>
<h2 id="哈希">哈希</h2>
<p>哈希（也叫散列）是字符串字段和字符串值之间的映射，所以它们是表示对象的完美数据类型（例如：用户有很多字段，比如名字、姓氏、年龄等等）：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> HSET <span class="token keyword">user</span>:<span class="token number">1000</span> name <span class="token string">"John Smith"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> HSET <span class="token keyword">user</span>:<span class="token number">1000</span> email <span class="token string">"john.smith@example.com"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> HSET <span class="token keyword">user</span>:<span class="token number">1000</span> password <span class="token string">"s3cret"</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>格式：<code>HSET key field value</code></p>
<p>可以看出其实是在key和value之间多加了一层field。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> HGETALL <span class="token keyword">user</span>:<span class="token number">1000</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"name"</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"John Smith"</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"email"</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"john.smith@example.com"</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"password"</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"s3cret"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>HGETALL</code>返回保存的数据。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> HMSET <span class="token keyword">user</span>:<span class="token number">1001</span> name <span class="token string">"Mary Jones"</span> password <span class="token string">"hidden"</span> email <span class="token string">"mjones@example.com"</span>
OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>也可以一次添加多个字段。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> HGET <span class="token keyword">user</span>:<span class="token number">1001</span> name
<span class="token string">"Mary Jones"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果只需要一个字段可以使用<code>HGET</code>。</p>
<h2 id="修改哈希字段的值">修改哈希字段的值</h2>
<p>哈希字段中的数值的处理与简单字符串中的处理完全相同，有一些操作可以以原子的方式递增该值。</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> HSET <span class="token keyword">user</span>:<span class="token number">1000</span> visits <span class="token number">10</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> HINCRBY <span class="token keyword">user</span>:<span class="token number">1000</span> visits <span class="token number">1</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">11</span>
<span class="token operator">></span> HINCRBY <span class="token keyword">user</span>:<span class="token number">1000</span> visits <span class="token number">10</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">21</span>
<span class="token operator">></span> HDEL <span class="token keyword">user</span>:<span class="token number">1000</span> visits
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token operator">></span> HINCRBY <span class="token keyword">user</span>:<span class="token number">1000</span> visits <span class="token number">1</span>
<span class="token punctuation">(</span><span class="token keyword">integer</span><span class="token punctuation">)</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="切换数据库">切换数据库</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">redis <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>:<span class="token number">6379</span><span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token number">1</span>
OK
redis <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>:<span class="token number">6379</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>SELECT</code>用于切换到指定的数据库，Redis默认有16个数据库，编号从0到15。切换成功后命令提示符前会显示当前的数据库编号。</p>
<h2 id="清空数据库内容">清空数据库内容</h2>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">></span> FLUSHDB
OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><code>FLUSHDB</code>命令会清空当前数据库中的所有key。如果要同时清空所有数据库，可以使用<code>FLUSHALL</code>命令。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.runoob.com/redis/redis-tutorial.html">Redis 教程 | 菜鸟教程</a></li>
<li><a href="https://blog.csdn.net/weixin_37696997/article/details/78633444">golang-redis之list类型简单操作_代码界的小姑娘的博客-CSDN博客_go redis list</a></li>
<li><a href="https://blog.csdn.net/wangshubo1989/article/details/75050024">Go实战--golang中使用redis(redigo和go-redis/redis)_一蓑烟雨任平生 也无风雨也无晴-CSDN博客_golang redis</a></li>
</ul>
]]></content>
      <tags>
        <tag>数据库</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>最小费用最大流简介</title>
    <url>/2021/07/11/%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E6%9C%80%E5%A4%A7%E6%B5%81%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<p>任何容量网络的最大流的流量是唯一确定的，但是可行的最大流不唯一。</p>
<p>假设一个容量网络<span class="math inline">\(G=(V, E)\)</span>。源点<span class="math inline">\(V_s\)</span>，汇点<span class="math inline">\(V_t\)</span>，弧<span class="math inline">\(&lt;u, v&gt; \in E\)</span>。<span class="math inline">\(c(u, v)\)</span>表示弧<span class="math inline">\(&lt;u, v&gt;\)</span>的容量，<span class="math inline">\(r(u, v) \geq 0\)</span>表示弧<span class="math inline">\(&lt;u, v&gt;\)</span>的单位流量费用。要求一个最大流<span class="math inline">\(f\)</span>，使得<span class="math inline">\(f\)</span>的总费用<span class="math inline">\(r(f)=\sum_{&lt;u, v&gt; \in E}f(u, v) \times r(u, v)\)</span>最少，称为<strong>最小费用最大流</strong>。</p>
<p>寻找最大流的方法是从某个可行流<span class="math inline">\(f\)</span>出发，找到关于<span class="math inline">\(f\)</span>的一条增广路<span class="math inline">\(P\)</span>，沿着<span class="math inline">\(P\)</span>调整<span class="math inline">\(f\)</span>，如此反复直到不存在增广路为止。</p>
<p>现在要寻找最小费用最大流，首先考察当沿着一条增广路<span class="math inline">\(P\)</span>，以改进量<span class="math inline">\(\alpha=1\)</span>调整可行流<span class="math inline">\(f\)</span>，得到新的可行流<span class="math inline">\(f&#39;\)</span>（显然<span class="math inline">\(|f&#39;|=|f|+1\)</span>）后，<span class="math inline">\(r(f&#39;)\)</span>比<span class="math inline">\(r(f)\)</span>增加了多少？ <span class="math display">\[
\begin{aligned}
r\left(f&#39;\right)-r(f) &amp;= \sum_{&lt;u, v&gt; \in E} f&#39;(u, v) * r(u, v) - \sum_{&lt;u, v&gt; \in E} f(u, v) * r(u, v) \\
&amp;= \sum_{&lt;u, v&gt; \in E} (f&#39;(u, v) - f(u, v)) * r(u, v) \\
&amp;= \left[\sum_{e \in P+} r(e) *\left(f&#39;(e)-f(e)\right)-\sum_{e \in P-} r(e) *\left(f&#39;(e)-f(e)\right)\right] \\
&amp;= \sum_{e \in P+} r(e)-\sum_{e \in P-} r(e)
\end{aligned}
\]</span> 把<span class="math inline">\(\sum_{e \in P+} r(e)-\sum_{e \in P-} r(e)\)</span>叫做这条增广路<span class="math inline">\(P\)</span>的费用。</p>
<p>显然，如果<span class="math inline">\(f\)</span>是流量为<span class="math inline">\(|f|\)</span>时的最小费用流，<span class="math inline">\(P\)</span>是关于<span class="math inline">\(f\)</span>费用最小的增广路，沿<span class="math inline">\(P\)</span>调整<span class="math inline">\(f\)</span>得到<span class="math inline">\(f&#39;\)</span>，就是流量为<span class="math inline">\(|f&#39;|\)</span>时的最小费用流。</p>
<p>寻找最小费用最大流的问题就变成了，从<span class="math inline">\(f=\{0\}\)</span>开始增广，如何寻找最小费用增广路？</p>
<p>构造容量网络关于<span class="math inline">\(f\)</span>的伴随网络<span class="math inline">\(W(f)\)</span>：顶点是源网络中的顶点，每条弧<span class="math inline">\(&lt;u, v&gt;\)</span>都变成两个相反的弧<span class="math inline">\(&lt;u, v&gt;\)</span>和<span class="math inline">\(&lt;v, u&gt;\)</span>，弧的权值为： <span class="math display">\[
W(u, v) = \begin{cases}
 r(u, v) &amp; \text{若} f(u, v) &lt; c(u, v) \\
 +\infty &amp; \text{若} f(u, v) = c(u, v)
\end{cases}
\]</span> <span class="math display">\[
W(v, u) = \begin{cases}
 -r(u, v) &amp; \text{若} f(u, v) &gt; 0 \\
 +\infty &amp; \text{若} f(u, v) = 0
\end{cases}
\]</span></p>
<p>长度为<span class="math inline">\(+\infty\)</span>的弧可以从<span class="math inline">\(W(f)\)</span>中略去。</p>
<p>在网络中寻找关于<span class="math inline">\(f\)</span>的最小费用增广路，等价于在<span class="math inline">\(W(f)\)</span>中寻找从<span class="math inline">\(V_s\)</span>到<span class="math inline">\(V_t\)</span>的最短路（不能使用Dijkstra，可以使用SPFA或Bellman-Ford）。在原网络中得到相应的增广路<span class="math inline">\(P\)</span>，沿<span class="math inline">\(P\)</span>对<span class="math inline">\(f\)</span>调整。 <span class="math display">\[
\alpha = \min\left\{\min_{P+} (c(u, v)-f(u, v)), \min_{P-} f(u, v)\right\}
\]</span> <span class="math display">\[
f&#39;(u, v) = \begin{cases}
f(u, v) + \alpha &amp; (u, v) \in P+ \\
f(u, v) - \alpha &amp; (u, v) \in P- \\
f(u, v) &amp; (u, v) \not\in P
\end{cases}
\]</span></p>
<p>如此反复，直到<span class="math inline">\(f\)</span>为最大流（<span class="math inline">\(W(f)\)</span>中没有最短路径）为止。</p>
<p>MATLAB实现：</p>
<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span> wf<span class="token punctuation">,</span> rwf<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">bg</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> vs<span class="token punctuation">,</span> vt<span class="token punctuation">,</span> r<span class="token punctuation">)</span>
<span class="token comment">% f 最小费用最大流矩阵</span>
<span class="token comment">% wf 最大流量</span>
<span class="token comment">% rwf 最小费用</span>
<span class="token comment">% C 容量矩阵</span>
<span class="token comment">% vs 源点</span>
<span class="token comment">% vt 汇点</span>
<span class="token comment">% r 弧上单位流量的费用</span>
n <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span>
f <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
wf <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
rwf <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
w <span class="token operator">=</span> <span class="token function">createw</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> r<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>path<span class="token punctuation">,</span> len<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">spfa</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> vs<span class="token punctuation">,</span> vt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token operator">~</span><span class="token function">isinf</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span>
    alpha <span class="token operator">=</span> Inf<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token number">0</span>
            alpha <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>alpha<span class="token punctuation">,</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            alpha <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>alpha<span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
    wf <span class="token operator">=</span> wf <span class="token operator">+</span> alpha<span class="token punctuation">;</span>
    sumr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
        <span class="token keyword">if</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token number">0</span>
            <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> alpha<span class="token punctuation">;</span>
            sumr <span class="token operator">=</span> sumr <span class="token operator">+</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> alpha<span class="token punctuation">;</span>
            sumr <span class="token operator">=</span> sumr <span class="token operator">-</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
    rwf <span class="token operator">=</span> rwf <span class="token operator">+</span> sumr<span class="token operator">*</span>alpha<span class="token punctuation">;</span>
    w <span class="token operator">=</span> <span class="token function">createw</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> r<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>path<span class="token punctuation">,</span> len<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">spfa</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> vs<span class="token punctuation">,</span> vt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> w <span class="token operator">=</span> <span class="token function">createw</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> r<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">% w 伴随网络</span>
<span class="token comment">% C 容量矩阵</span>
<span class="token comment">% r 弧上单位流量的费用</span>
<span class="token comment">% f 流量矩阵</span>
n <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span>
w <span class="token operator">=</span> <span class="token function">Inf</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> u <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
    <span class="token keyword">for</span> v <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
        <span class="token keyword">if</span> <span class="token function">f</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token function">C</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
            <span class="token function">w</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">r</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
        <span class="token keyword">if</span> <span class="token function">f</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span>
            <span class="token function">w</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> u<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token function">r</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> <span class="token punctuation">[</span>path<span class="token punctuation">,</span> len<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">spfa</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span> vs<span class="token punctuation">,</span> vt<span class="token punctuation">)</span>
<span class="token comment">% path 最短路径</span>
<span class="token comment">% len 最短路径长度</span>
<span class="token comment">% G 网络的邻接矩阵</span>
<span class="token comment">% vs 源点</span>
<span class="token comment">% vt 汇点</span>
n <span class="token operator">=</span> <span class="token function">length</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span><span class="token punctuation">;</span> %
dist <span class="token operator">=</span> <span class="token function">Inf</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">dist</span><span class="token punctuation">(</span>vs<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
from <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">from</span><span class="token punctuation">(</span>vs<span class="token punctuation">)</span> <span class="token operator">=</span> vs<span class="token punctuation">;</span>
q <span class="token operator">=</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vs<span class="token punctuation">)</span><span class="token punctuation">;</span>
inq <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">inq</span><span class="token punctuation">(</span>vs<span class="token punctuation">)</span> <span class="token operator">=</span> true<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token operator">~</span><span class="token function">isempty</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    <span class="token punctuation">[</span>u<span class="token punctuation">,</span> q<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">inq</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">=</span> false<span class="token punctuation">;</span>
    <span class="token keyword">for</span> v <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n
        <span class="token keyword">if</span> <span class="token function">dist</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token function">dist</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">G</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
            <span class="token function">dist</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">dist</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">G</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">from</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token operator">~</span><span class="token function">inq</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
                q <span class="token operator">=</span> <span class="token function">push</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">inq</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=</span> true<span class="token punctuation">;</span>
            <span class="token keyword">end</span>
        <span class="token keyword">end</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>
path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
v <span class="token operator">=</span> vt<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token function">from</span><span class="token punctuation">(</span>vt<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
    len <span class="token operator">=</span> Inf<span class="token punctuation">;</span>
<span class="token keyword">else</span>
    <span class="token keyword">while</span> v <span class="token operator">~=</span> vs
        path <span class="token operator">=</span> <span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        len <span class="token operator">=</span> len <span class="token operator">+</span> <span class="token function">G</span><span class="token punctuation">(</span><span class="token function">from</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        v <span class="token operator">=</span> <span class="token function">from</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    path <span class="token operator">=</span> <span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> vs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    path <span class="token operator">=</span> <span class="token function">fliplr</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> ansq <span class="token operator">=</span> <span class="token function">push</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
<span class="token comment">% ansq 压入队尾元素的队列</span>
<span class="token comment">% q 队列</span>
<span class="token comment">% el 要压入队尾元素的数字</span>
ansq <span class="token operator">=</span> <span class="token punctuation">[</span>q el<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> <span class="token punctuation">[</span>v<span class="token punctuation">,</span> ansq<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">pop</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
<span class="token comment">% v q的队首元素</span>
<span class="token comment">% ansq 去掉队首元素的队列</span>
<span class="token comment">% q 队列</span>
v <span class="token operator">=</span> <span class="token function">q</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ansq <span class="token operator">=</span> <span class="token function">q</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <tags>
        <tag>算法</tag>
        <tag>网络流</tag>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>电影下载网站整理</title>
    <url>/2019/07/11/%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="音范丝">音范丝</h1>
<p>链接：<a href="https://www.yinfans.me">https://www.yinfans.me</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E9%9F%B3%E8%8C%83%E4%B8%9D%E4%B8%BB%E9%A1%B5.png" alt="音范丝主页.png" /><figcaption aria-hidden="true">音范丝主页.png</figcaption>
</figure>
<h1 id="五号站">五号站</h1>
<p>原来的电影首发站。</p>
<p>链接：<a href="http://www.wuhaozhan.net/movie/list/">http://www.wuhaozhan.net/movie/list/</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E4%BA%94%E5%8F%B7%E7%AB%99%E4%B8%BB%E9%A1%B5.png" alt="五号站主页.png" /><figcaption aria-hidden="true">五号站主页.png</figcaption>
</figure>
<h1 id="蓝光电影网">蓝光电影网</h1>
<p>链接：<a href="http://www.languangdy.com">http://www.languangdy.com</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E8%93%9D%E5%85%89%E7%94%B5%E5%BD%B1%E7%BD%91%E4%B8%BB%E9%A1%B5.png" alt="蓝光电影网主页.png" /><figcaption aria-hidden="true">蓝光电影网主页.png</figcaption>
</figure>
<h1 id="蓝光网">蓝光网</h1>
<p>链接：<a href="http://www.languang.co">http://www.languang.co</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E8%93%9D%E5%85%89%E7%BD%91%E4%B8%BB%E9%A1%B5.png" alt="蓝光网主页.png" /><figcaption aria-hidden="true">蓝光网主页.png</figcaption>
</figure>
<h1 id="中国高清网">中国高清网</h1>
<p>链接：<a href="http://gaoqing.la">http://gaoqing.la</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E4%B8%AD%E5%9B%BD%E9%AB%98%E6%B8%85%E7%BD%91%E4%B8%BB%E9%A1%B5.png" alt="中国高清网主页.png" /><figcaption aria-hidden="true">中国高清网主页.png</figcaption>
</figure>
<h1 id="高清电台">高清电台</h1>
<p>链接：<a href="https://gaoqing.fm">https://gaoqing.fm</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E9%AB%98%E6%B8%85%E7%94%B5%E5%8F%B0%E4%B8%BB%E9%A1%B5.png" alt="高清电台主页.png" /><figcaption aria-hidden="true">高清电台主页.png</figcaption>
</figure>
<h1 id="v电影网">6v电影网</h1>
<p>链接：<a href="http://www.6vhao.tv">http://www.6vhao.tv</a></p>
<p>备用链接：<a href="http://www.dy131.net">http://www.dy131.net</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_6v%E7%94%B5%E5%BD%B1%E7%BD%91%E4%B8%BB%E9%A1%B5.png" alt="6v电影网主页.png" /><figcaption aria-hidden="true">6v电影网主页.png</figcaption>
</figure>
<h1 id="电影天堂">电影天堂</h1>
<p>链接：<a href="https://www.dytt8.net">https://www.dytt8.net</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E4%B8%BB%E9%A1%B5.png" alt="电影天堂主页.png" /><figcaption aria-hidden="true">电影天堂主页.png</figcaption>
</figure>
<h1 id="rarbg">RARBG</h1>
<p>链接：<a href="https://rarbgprx.org/torrents.php">https://rarbgprx.org/torrents.php</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_RARBG%E4%B8%BB%E9%A1%B5.png" alt="RARBG主页.png" /><figcaption aria-hidden="true">RARBG主页.png</figcaption>
</figure>
<h1 id="优质电影网">优质电影网</h1>
<p>链接：<a href="http://www.youzhidy.com">http://www.youzhidy.com</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E4%BC%98%E8%B4%A8%E7%94%B5%E5%BD%B1%E7%BD%91%E4%B8%BB%E9%A1%B5.png" alt="优质电影网主页.png" /><figcaption aria-hidden="true">优质电影网主页.png</figcaption>
</figure>
<h1 id="爱高清">爱高清</h1>
<p>链接：<a href="http://ihd.me/">http://ihd.me/</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E7%88%B1%E9%AB%98%E6%B8%85%E4%B8%BB%E9%A1%B5.png" alt="爱高清主页.png" /><figcaption aria-hidden="true">爱高清主页.png</figcaption>
</figure>
<h1 id="片库">片库</h1>
<p>链接：<a href="https://www.pianku.tv/">https://www.pianku.tv/</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E7%89%87%E5%BA%93%E4%B8%BB%E9%A1%B5.png" alt="片库主页.png" /><figcaption aria-hidden="true">片库主页.png</figcaption>
</figure>
<h1 id="哔嘀影视">哔嘀影视</h1>
<p>链接：<a href="https://www.bde4.com/">https://www.bde4.com/</a></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_07_11_%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86_%E5%93%94%E5%98%80%E5%BD%B1%E8%A7%86%E4%B8%BB%E9%A1%B5.png" alt="哔嘀影视主页.png" /><figcaption aria-hidden="true">哔嘀影视主页.png</figcaption>
</figure>
]]></content>
      <tags>
        <tag>电影</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>自然码口诀</title>
    <url>/2020/08/05/%E8%87%AA%E7%84%B6%E7%A0%81%E5%8F%A3%E8%AF%80/</url>
    <content><![CDATA[<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_08_05_%E8%87%AA%E7%84%B6%E7%A0%81%E5%8F%A3%E8%AF%80_%E8%87%AA%E7%84%B6%E7%A0%81%E5%8F%8C%E6%8B%BC%E6%96%B9%E6%A1%88.jpg" alt="自然码双拼方案.jpg" /><figcaption aria-hidden="true">自然码双拼方案.jpg</figcaption>
</figure>
<p>哇呀（W：ua/ia）布偶（B：ou）贼（Z：ei）软圆（R：uan）</p>
<p>特约（T：ue）您（N：in）来（L：ai）屁闻晕（P：un）</p>
<p>分（F：en）航（H：ang）次要（C：iao）的汪洋（D：uang/iang）</p>
<p>追（V：zh/ui）吉安（J：an）靠（K：ao）棉（M：ian）球（Q：iu）鞋（X：ie）</p>
<p>更（G：eng）怂恿（S：ong/iong）我（O：uo）硬（Y：ing/uai）吃（I：ch）书（U：sh）</p>
]]></content>
      <tags>
        <tag>双拼</tag>
        <tag>自然码</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Chrome浏览器弹出“请停用以开发者模式运行的扩展程序”的问题</title>
    <url>/2019/05/08/%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<div class="note warning"><p>此方法对于Chrome 75已经失效</p>
</div>
<h1 id="问题">问题</h1>
<p>自从自己从本地导入了一个Chrome浏览器的插件之后，每次打开Chrome就会弹出这样的提示，非常麻烦。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F.png" alt="请停用以开发者模式运行的扩展程序.png" /><figcaption aria-hidden="true">请停用以开发者模式运行的扩展程序.png</figcaption>
</figure>
<p>下面来说说我尝试过可行的解决办法。</p>
<h1 id="步骤">步骤</h1>
<ol type="1">
<li><p>找到Chrome浏览器的安装位置。可以从快捷方式的属性里找到安装目录。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95.png" alt="安装目录.png" /><figcaption aria-hidden="true">安装目录.png</figcaption>
</figure></li>
<li><p>在上图标出的数字文件夹中找到<code>chrome.dll</code>，然后最小化这个窗口。</p></li>
<li><p>前往<a href="https://x64dbg.com/">x64dbg官网</a>下载x64dbg这个软件，下载完成后在压缩包的<code>release</code>目录下找到<code>x96dbg.exe</code>，打开，然后选择对应位数的操作系统，比如我是64位操作系统，就选择x64dbg，如果是32位就选择x32dbg。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_x64dbg.png" alt="x64dbg.png" /><figcaption aria-hidden="true">x64dbg.png</figcaption>
</figure></li>
<li><p>将<code>chrome.dll</code>拖入x64dbg，出现两个弹窗，将黑色命令行弹窗最小化，然后连续点击<code>运行到用户代码</code>按钮，直至窗口标题处的模块变成chrome.dll。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E8%BF%90%E8%A1%8C%E5%88%B0%E7%94%A8%E6%88%B7%E4%BB%A3%E7%A0%81.png" alt="运行到用户代码.png" /><figcaption aria-hidden="true">运行到用户代码.png</figcaption>
</figure></li>
<li><p>在主面板右键依次选择<code>搜索→当前模块→字符串</code>。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E6%90%9C%E7%B4%A2%E5%BD%93%E5%89%8D%E6%A8%A1%E5%9D%97%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt="搜索当前模块字符串.png" /><figcaption aria-hidden="true">搜索当前模块字符串.png</figcaption>
</figure></li>
<li><p>然后会打开一个搜索界面，等待进度条加载完毕，搜索</p>
<pre class="line-numbers language-text" data-language="text"><code class="language-text">ExtensionDeveloperModeWarning<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E6%90%9C%E7%B4%A2.png" alt="搜索.png" /><figcaption aria-hidden="true">搜索.png</figcaption>
</figure></li>
<li><p>会搜到2条结果，双击第一个，跳转到反汇编界面，往上翻一点，找到<code>cmp eax, 2</code>或者<code>cmp eax, 3</code>。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%8F%8D%E6%B1%87%E7%BC%96%E7%95%8C%E9%9D%A2.png" alt="跳转到反汇编界面.png" /><figcaption aria-hidden="true">跳转到反汇编界面.png</figcaption>
</figure></li>
<li><p>双击刚才找到的命令打开编辑页面，修改成<code>cmp eax,9</code>或者<code>cmp eax, 0x9</code>，然后点击确定。（注意只需要点击一次确定即可，点击确定后它还是会继续弹出其它行的编辑界面，此时直接关闭对话框即可）</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E4%BF%AE%E6%94%B9%E6%B1%87%E7%BC%96.png" alt="修改汇编.png" /><figcaption aria-hidden="true">修改汇编.png</figcaption>
</figure></li>
<li><p><code>Ctrl+P</code>导出修改过的dll文件（点击<code>修补文件</code>按钮就是导出dll文件），选择某个导出位置（比如桌面，注意名称得是<code>chrome.dll</code>）。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_05_08_%E8%A7%A3%E5%86%B3Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%B9%E5%87%BA%E2%80%9C%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%E2%80%9D%E7%9A%84%E9%97%AE%E9%A2%98_%E5%AF%BC%E5%87%BA.png" alt="导出.png" /><figcaption aria-hidden="true">导出.png</figcaption>
</figure></li>
<li><p>最后把我们制作好的dll文件替换掉原来目录下的<code>chrome.dll</code>，重启Chrome浏览器，问题解决！</p></li>
</ol>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/58111436">解决谷歌浏览器【请停用以开发者模式运行的扩展程序】 - 知乎</a></li>
</ul>
]]></content>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式的原则</title>
    <url>/2020/09/15/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8E%9F%E5%88%99/</url>
    <content><![CDATA[<h1 id="为什么会有设计模式">为什么会有设计模式？</h1>
<p>在软件设计过程中，会有一些不断重复发生的问题。针对这些问题，计算机前辈们总结出了一系列的解决方案和套路，这就是设计模式的来源。设计模式，是一套被反复使用的代码设计经验的总结。它具有一定的普遍性，可以反复使用。其目的是为了提高代码的可重用性、可读性和可靠性。</p>
<h1 id="使用设计模式有什么好处">使用设计模式有什么好处？</h1>
<p>设计模式本质是对面向对象设计原则的深刻理解。正确使用设计模式具有以下优点：</p>
<ul>
<li>使软件的开发效率大大提高。</li>
<li>使代码的可重用性高、可读性强、可靠性高、灵活性好、可维护性强。</li>
</ul>
<h1 id="什么是设计模式的原则">什么是设计模式的原则？</h1>
<p>在软件开发中，为了提高软件系统的可维护性和可复用性，增加软件的可扩展性和灵活性，程序员要尽量根据 7 条原则来开发程序，从而提高软件开发效率、节约软件开发成本和维护成本。</p>
<h1 id="开闭原则">开闭原则</h1>
<blockquote>
<p>软件实体应当对扩展开放，对修改关闭。</p>
</blockquote>
<p>这里的软件实体包括：项目中划分出的模块、类与接口、方法。</p>
<p>开闭原则的含义是：当应用的需求改变时，在不修改软件实体的源代码或者二进制代码的前提下，可以扩展模块的功能，使其满足新的需求。</p>
<h2 id="开闭原则的作用">开闭原则的作用</h2>
<p>开闭原则是面向对象程序设计的终极目标，它使软件实体拥有一定的适应性和灵活性的同时具备稳定性和延续性。具体来说，其作用如下。</p>
<ul>
<li><p>对软件测试的影响</p>
<p>软件遵守开闭原则的话，软件测试时只需要对扩展的代码进行测试就可以了，因为原有的测试代码仍然能够正常运行。</p></li>
<li><p>可以提高代码的可复用性</p>
<p>粒度越小，被复用的可能性就越大；在面向对象的程序设计中，根据原子和抽象编程可以提高代码的可复用性。</p></li>
<li><p>可以提高软件的可维护性</p>
<p>遵守开闭原则的软件，其稳定性高和延续性强，从而易于扩展和维护。</p></li>
</ul>
<h2 id="开闭原则的实现方法">开闭原则的实现方法</h2>
<p>可以通过“抽象约束、封装变化”来实现开闭原则，即通过接口或者抽象类为软件实体定义一个相对稳定的抽象层，而将相同的可变因素封装在相同的具体实现类中。</p>
<p>因为抽象灵活性好，适应性广，只要抽象的合理，可以基本保持软件架构的稳定。而软件中易变的细节可以从抽象派生来的实现类来进行扩展，当软件需要发生变化时，只需要根据需求重新派生一个实现类来扩展就可以了。</p>
<h1 id="里氏替换原则">里氏替换原则</h1>
<blockquote>
<p>继承必须确保超类所拥有的性质在子类中仍然成立。</p>
</blockquote>
<p>里氏替换原则主要阐述了什么时候应该使用继承，什么时候不应该使用。通俗来讲就是：子类可以扩展父类的功能，但不能改变父类原有的功能。也就是说：子类继承父类时，除了添加新的方法完成新增功能之外，尽量不要重写父类的方法。这可以保证在那些需要使用父类的地方可以用子类代替。</p>
<h2 id="里氏替换原则的作用">里氏替换原则的作用</h2>
<ul>
<li><strong>里氏替换原则是实现开闭原则的重要方式之一。</strong></li>
<li>它克服了继承中重写父类造成的可复用性变差的缺点。</li>
<li>它是动作正确性的保证。即类的扩展不会给已有的系统引入新的错误，降低了代码出错的可能性。</li>
<li>加强程序的健壮性，同时变更时可以做到非常好的兼容性，提高程序的维护性、可扩展性，降低需求变更时引入的风险。</li>
</ul>
<h2 id="里氏替换原则的实现方法">里氏替换原则的实现方法</h2>
<ul>
<li>子类可以实现父类的抽象方法，但不能覆盖父类的非抽象方法</li>
<li>子类中可以增加自己特有的方法</li>
<li>当子类的方法重载父类的方法时，方法的前置条件（即方法的输入参数）要比父类的方法更宽松</li>
<li>当子类的方法实现父类的方法时（重写/重载或实现抽象方法），方法的后置条件（即方法的的输出/返回值）要比父类的方法更严格或相等</li>
</ul>
<p>如果程序违背了里氏替换原则，则继承类的对象在基类出现的地方会出现运行错误。这时其修正方法是：取消原来的继承关系，重新设计它们之间的关系。</p>
<h1 id="依赖倒置原则">依赖倒置原则</h1>
<blockquote>
<p>高层模块不应该依赖低层模块，两者都应该依赖其抽象；抽象不应该依赖细节，细节应该依赖抽象。</p>
</blockquote>
<p>其核心思想是：要面向接口编程，不要面向实现编程。</p>
<p><strong>依赖倒置原则是实现开闭原则的重要途径之一</strong>，它降低了客户与实现模块之间的耦合。</p>
<p>由于在软件设计中，细节具有多变性，而抽象层则相对稳定，因此以抽象为基础搭建起来的架构要比以细节为基础搭建起来的架构要稳定得多。这里的抽象指的是接口或者抽象类，而细节是指具体的实现类。</p>
<p>使用接口或者抽象类的目的是制定好规范和契约，而不去涉及任何具体的操作，把展现细节的任务交给它们的实现类去完成。</p>
<h2 id="依赖倒置原则的作用">依赖倒置原则的作用</h2>
<ul>
<li>降低类间的耦合性。</li>
<li>提高系统的稳定性。</li>
<li>减少并行开发引起的风险。</li>
<li>提高代码的可读性和可维护性。</li>
</ul>
<h2 id="依赖倒置原则的实现方法">依赖倒置原则的实现方法</h2>
<p>依赖倒置原则的目的是通过要面向接口的编程来降低类间的耦合性，所以我们在实际编程中只要遵循以下4点，就能在项目中满足这个规则。</p>
<ul>
<li>每个类尽量提供接口或抽象类，或者两者都具备。</li>
<li>变量的声明类型尽量是接口或者是抽象类。</li>
<li>任何类都不应该从具体类派生。</li>
<li>使用继承时尽量遵循里氏替换原则。</li>
</ul>
<h1 id="单一职责原则">单一职责原则</h1>
<blockquote>
<p>一个类应该有且仅有一个职责（引起它变化的原因），否则类应该被拆分。</p>
</blockquote>
<p>该原则提出一个对象不应该承担太多职责。如果一个对象承担了太多职责，至少会存在以下两个缺点：</p>
<ul>
<li>ー个职责的变化可能会削弱或者抑制这个类实现其他职责的能力</li>
<li>当客户端需要该对象的某一个职责时，不得不将其他不需要的职责全都包含进来，从而造成冗余代码或代码的浪费</li>
</ul>
<h2 id="单一职责原则的优点">单一职责原则的优点</h2>
<p>单一职责原则的核心就是控制类的粒度大小、将对象解耦、提高其内聚性。如果遵循单一职责原则将有以下优点。</p>
<ul>
<li>降低类的复杂度。一个类只负责一项职责，其逻辑肯定要比负责多项职责简单得多。</li>
<li>提高类的可读性。复杂性降低，自然其可读性会提高。</li>
<li>提高系统的可维护性。可读性提高，那自然更容易维护了。</li>
<li>变更引起的风险降低。变更是必然的，如果单一职责原则遵守得好，当修改一个功能时，可以显著降低对其他功能的影响。</li>
</ul>
<h2 id="单一职责原则的实现方法">单一职责原则的实现方法</h2>
<p>单一职责原则是最简单但又最难运用的原则，需要设计人员发现类的不同职责并将其分离，再封装到不同的类或模块中。而发现类的多重职责需要设计人员具有较强的分析设计能力和相关重构经验。</p>
<p>单一职责同样也适用于方法。一个方法应该尽可能做好一件事情。如果一个方法处理的事情太多，其颗粒度会变得很粗，不利于重用。</p>
<h1 id="接口隔离原则">接口隔离原则</h1>
<blockquote>
<p>客户端不应该被迫依赖于它不使用的方法。</p>
<p>或</p>
<p>一个类对另一个类的依赖应该建立在最小的接口上。</p>
</blockquote>
<p>接口隔离原则要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。</p>
<p>以上两个定义的含义是：要为各个类建立它们需要的专用接口，而不要试图去建立一个很庞大的接口供所有依赖它的类去调用。</p>
<p>接口隔离原则和单一职责都是为了提高类的内聚性、降低它们之间的耦合性，体现了封装的思想，但两者是不同的：</p>
<ul>
<li>单一职责原则注重的是职责，而接口隔离原则注重的是对接口依赖的隔离。</li>
<li>单一职责原则主要是约束类，它针对的是程序中的实现和细节；接口隔离原则主要约束接口，主要针对抽象和程序整体框架的构建。</li>
</ul>
<h2 id="接口隔离原则的优点">接口隔离原则的优点</h2>
<p>接口隔离原则是为了约束接口、降低类对接口的依赖性，遵循接口隔离原则有以下 5 个优点。</p>
<ul>
<li>将臃肿庞大的接口分解为多个粒度小的接口，可以预防外来变更的扩散，提高系统的灵活性和可维护性。</li>
<li>接口隔离提高了系统的内聚性，减少了对外交互，降低了系统的耦合性。</li>
<li>如果接口的粒度大小定义合理，能够保证系统的稳定性；但是，如果定义过小，则会造成接口数量过多，使设计复杂化；如果定义太大，灵活性降低，无法提供定制服务，给整体项目带来无法预料的风险。</li>
<li>使用多个专门的接口还能够体现对象的层次，因为可以通过接口的继承，实现对总接口的定义。</li>
<li>能减少项目工程中的代码冗余。过大的大接口里面通常放置许多不用的方法，当实现这个接口的时候，被迫设计冗余的代码。</li>
</ul>
<h2 id="接口隔离原则的实现方法">接口隔离原则的实现方法</h2>
<p>在具体应用接口隔离原则时，应该根据以下几个规则来衡量。</p>
<ul>
<li>接口尽量小，但是要有限度。一个接口只服务于一个子模块或业务逻辑。</li>
<li>为依赖接口的类定制服务。只提供调用者需要的方法，屏蔽不需要的方法。</li>
<li>了解环境，拒绝盲从。每个项目或产品都有选定的环境因素，环境不同，接口拆分的标准就不同深入了解业务逻辑。</li>
<li>提高内聚，减少对外交互。使接口用最少的方法去完成最多的事情。</li>
</ul>
<h1 id="迪米特法则最少知识原则">迪米特法则（最少知识原则）</h1>
<blockquote>
<p>只与你的直接朋友交谈，不跟“陌生人”说话。</p>
</blockquote>
<p>其含义是：如果两个软件实体无需直接通信，那么就不应当发生直接的相互调用，可以通过第三方转发该调用。</p>
<p>目的是降低耦合度。</p>
<p>迪米特法则中的“朋友”是指：当前对象本身、当前对象的成员对象、当前对象所创建的对象、当前对象的方法参数等，这些对象同当前对象存在关联、聚合或组合关系，可以直接访问这些对象的方法。</p>
<h2 id="迪米特法则的优点">迪米特法则的优点</h2>
<p>迪米特法则要求限制软件实体之间通信的宽度和深度，正确使用迪米特法则有以下两个优点。</p>
<ul>
<li>降低了类之间的耦合度，提高了模块的相对独立性。</li>
<li>由于亲和度降低，提高了类的可复用率和系统的扩展性。</li>
</ul>
<p>但是，过度使用迪米特法则会使系统产生大量的中介类，从而增加系统的复杂性，使模块之间的通信效率降低。所以，在釆用迪米特法则时需要反复权衡，确保高内聚和低耦合的同时，保证系统的结构清晰。</p>
<h2 id="迪米特法则的实现方法">迪米特法则的实现方法</h2>
<p>迪米特法则强调以下两点：</p>
<ul>
<li>从依赖者的角度来说，只依赖应该依赖的对象。</li>
<li>从被依赖者的角度说，只暴露应该暴露的方法。</li>
</ul>
<p>因此，在运用迪米特法则时注意以下6点：</p>
<ul>
<li>创建弱耦合的类。耦合越弱，可复用性越强。</li>
<li>尽量降低类成员的访问权限。</li>
<li>优先考虑将一个类设置成不变类。</li>
<li>将引用其他对象的次数降到最低。</li>
<li>不暴露类的属性成员，而应该提供相应的访问器（set和get方法）</li>
<li>谨慎使用序列化功能。</li>
</ul>
<h1 id="合成复用原则">合成复用原则</h1>
<blockquote>
<p>在软件复用时，尽量先使用组合或聚合等关联关系来实现，其次才考虑使用继承关系来实现。</p>
</blockquote>
<p>如果要使用继承关系，则必须严格遵循里氏替换原则。</p>
<p><strong>合成复用原则是开闭原则的具体实现规范之一。</strong></p>
<h2 id="合成复用原则的重要性">合成复用原则的重要性</h2>
<p>继承复用虽然简单易实现，但它也存在一些缺点：</p>
<ul>
<li>破坏了类的封装性。因为继承会将父类的细节暴露给子类，父类对子类是透明的，这种复用又称为“白箱”复用。</li>
<li>父类和子类的耦合度高。父类实现的任何改变都会导致子类的实现发生变化，不利于类的扩展和维护。</li>
<li>限制了复用的灵活性。从父类继承而来的实现是静态的，在编译时已经定义，所以在运行时不可能发生变化。</li>
</ul>
<p>采用组合或聚合复用时，可以将已有对象纳入新对象中，使之成为新对象的一部分，新对象可以调用已有对象的功能，它有以下优点。</p>
<ul>
<li>维持了类的封装性。让已有对象成为新对象的一部分，这种复用又称为“黑箱”复用。</li>
<li>新旧类之间的耦合度低。这种复用所需的依赖较少，新对象存取成分对象的唯一方法是通过成分对象的接口。</li>
<li>复用的灵活性高。这种复用可以在运行时动态进行，新对象可以动态地引用与成分对象类型相同的对象。</li>
</ul>
<h2 id="合成复用原则的实现方法">合成复用原则的实现方法</h2>
<p>合成复用原则是通过将已有的对象纳入新对象中，作为新对象的成员对象来实现的，新对象可以调用已有对象的功能，从而达到复用。</p>
<h1 id="总结">总结</h1>
<ul>
<li>开闭原则：总纲。要对扩展开放，对修改关闭。</li>
<li>里氏替换原则：不要破坏继承体系。</li>
<li>依赖倒置原则：面向接口编程。</li>
<li>单一职责原则：实现类要职责单一。</li>
<li>接口隔离原则：接口要精简单一。</li>
<li>迪米特法则：降低耦合度。</li>
<li>合成符永原则：优先使用组合或聚合关系，少用继承关系。</li>
</ul>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="http://c.biancheng.net/view/1317.html">软件设计模式概述</a></li>
</ul>
]]></content>
      <tags>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS笔记</title>
    <url>/2021/05/05/CSS%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="css简单介绍">CSS简单介绍</h1>
<p>HTML+CSS+JavaScript</p>
<p>结构+表现+交互</p>
<p>骨头+皮+肌肉</p>
<h2 id="如何学习">如何学习</h2>
<ol type="1">
<li>CSS是什么</li>
<li>CSS怎么用（快速入门）</li>
<li>CSS选择器（重点+难点）</li>
<li>美化网页（文字，阴影，超链接，列表，渐变……）</li>
<li>盒子模型</li>
<li>浮动</li>
<li>定位</li>
<li>网页动画（特效效果）</li>
</ol>
<h2 id="什么是css">什么是CSS</h2>
<p>Cascading Style Sheet 层叠样式表</p>
<p>CSS：表现（美化网页）</p>
<p>字体，颜色，边距，高度，宽度，背景图片，网页定位，网页浮动……</p>
<h2 id="css的优势">CSS的优势</h2>
<ol type="1">
<li>内容和表现分离</li>
<li>网页结构表现统一，可以实现复用</li>
<li>样式十分丰富</li>
<li>建议使用独立于HTML的CSS文件</li>
<li>利用SEO，容易被搜索引擎收录</li>
</ol>
<h1 id="css快速入门">CSS快速入门</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>我的第一个CSS程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 规范，style可以编写CSS的代码 --></span>
    <span class="token comment">&lt;!--
        语法：
        选择器 &#123;
            声明1;
            声明2;
            声明3;
        &#125;
        每一个声明最好使用分号结尾
    --></span>
    <span class="token comment">&lt;!-- &lt;style>
        h1 &#123;
            color: red;
        &#125;
    &lt;/style> --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="css的三种导入方式">CSS的三种导入方式</h1>
<ul>
<li><p>行内样式</p></li>
<li><p>内部样式</p></li>
<li><p>外部样式</p>
<ul>
<li><p>链接式</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>导入式（CSS2.1）</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
      <span class="token atrule"><span class="token rule">@import</span> url=<span class="token punctuation">(</span><span class="token string">"css/style.css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul></li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>导入方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>

    <span class="token comment">&lt;!-- 内部样式 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/* CSS注释 */</span>
        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

    <span class="token comment">&lt;!-- 外部样式 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 优先级：就近原则 --></span>
    <span class="token comment">&lt;!-- 行内样式：在标签元素中，添加一个style属性，编写样式即可 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="选择器">选择器</h1>
<p>作用：选择页面上的某一个或者某一类元素。</p>
<h2 id="基本选择器">基本选择器</h2>
<ul>
<li>标签选择器</li>
<li>类选择器</li>
<li>ID选择器</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/*
        标签选择器：会选择到页面上所有这个标签的元素
        */</span>
        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>40<span class="token punctuation">,</span> 207<span class="token punctuation">,</span> 138<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255 227 88<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>学Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>学Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>听狂神说<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/*
        类选择器的格式 .class的名称&#123;&#125;
        好处：可以多个标签归类，可以复用
        */</span>
        <span class="token selector">.qinjiang</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #02ff2c<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.kuangshen</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #0270ff<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qinjiang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kuangshen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qinjiang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>kuangshen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>P标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/*
        ID选择器：ID必须保证全局唯一
        #ID名称 &#123;&#125;
        优先级：ID选择器>类选择器>标签选择器
        */</span>
        <span class="token selector">#qinjiang</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.style1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qinjiang<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>style1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>style1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>style1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="层次选择器">层次选择器</h2>
<ul>
<li><p>后代选择器：在某个元素的后面</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 后代选择器 */</span>
<span class="token selector">body p</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>子选择器：一代</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 子选择器 */</span>
<span class="token selector">body>p</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>相邻兄弟选择器：向下相邻，弟弟选择器</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 相邻兄弟选择器 */</span>
<span class="token selector">.active+p</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> brown<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>通用兄弟选择器：所有弟弟选择器</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 通用兄弟选择器 */</span>
<span class="token selector">.active~p</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token selector">p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 后代选择器 */</span>
        <span class="token selector">body p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 子选择器 */</span>
        <span class="token selector">body>p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 相邻兄弟选择器 */</span>
        <span class="token selector">.active+p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> brown<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 通用兄弟选择器 */</span>
        <span class="token selector">.active~p</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="结构伪类选择器">结构伪类选择器</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 避免使用class、id选择器 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/* ul的第一个子元素 */</span>
        <span class="token selector">ul li:first-child</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* ul的最后一个子元素 */</span>
        <span class="token selector">ul li:last-child</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 选中p1 */</span>
        <span class="token comment">/* 选择当前元素的父级元素的第一个子元素，并且只有当子元素为p时才生效 */</span>
        <span class="token selector">p:nth-child(1)</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 选择当前元素的父级元素的第一个类型为p的子元素 */</span>
        <span class="token selector">p:nth-of-type(1)</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="属性选择器">属性选择器</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token selector">.demo a</span> <span class="token punctuation">&#123;</span>
            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
            <span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
            <span class="token property">font</span><span class="token punctuation">:</span> bold 20px/50px Arial<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">/* 属性名，属性名=属性值（正则） */</span>
        <span class="token comment">/*
        = 严格等于
        *= 包含
        ^= 以开头
        $= 以结尾
        */</span>
        <span class="token comment">/* 存在ID属性的元素 */</span>
        <span class="token selector">a[id]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* ID为first的元素 */</span>
        <span class="token selector">a[id=first]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> yellowgreen<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* class中有links的元素 */</span>
        <span class="token selector">a[class*="links"]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* herf中以http开头的元素 */</span>
        <span class="token selector">a[href^="http"]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">a[href$="pdf"]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> darkred<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item first<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item active<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.html<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/123.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/a.pdf<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/abc.pdf<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc.doc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abcd.doc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>links item last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="美化网页元素">美化网页元素</h1>
<p>为什么要美化网页？</p>
<ul>
<li>有效传递页面信息</li>
<li>吸引用户</li>
<li>凸显页面主题</li>
<li>提高用户体验</li>
</ul>
<p>span标签：重点要突出的字，使用span标签套起来。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token selector">#title1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    欢迎学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="字体样式">字体样式</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/*
        font-faminly 字体
        font-size 字体大小
        font-weight 字体粗细
        color 字体颜色
        */</span>
        <span class="token selector">body</span> <span class="token punctuation">&#123;</span>
            <span class="token property">font-family</span><span class="token punctuation">:</span> 楷体<span class="token punctuation">,</span> Airal<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> greenyellow<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token selector">.p1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>故事介绍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        平静安详的元泱境界，每隔333年，总会有一个神秘而恐怖的异常生物重生，它就是魁拔！魁拔的每一次出现，都会给元泱境界带来巨大的灾难！即便是天界的神族，也在劫难逃。在天地两界各种力量的全力打击下，魁拔一次次被消灭，但又总是按333年的周期重新出现。魁拔纪元1664年，天神经过精确测算后，在第六代魁拔苏醒前一刻对其进行毁灭性打击。但谁都没有想到，由于一个差错导致新一代魁拔成功地逃脱了致命一击。很快，天界魁拔司和地界神圣联盟均探测到了魁拔依然生还的迹象。因此，找到魁拔，彻底消灭魁拔，再一次成了各地热血勇士的终极目标。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        在偏远的兽国窝窝乡，蛮大人和蛮吉每天为取得象征成功和光荣的妖侠纹耀而刻苦修炼，却把他们生活的村庄搅得鸡犬不宁。村民们绞尽脑汁把他们赶走。一天，消灭魁拔的征兵令突然传到窝窝乡，村长趁机怂恿蛮大人和蛮吉从军参战。然而，在这个一切都凭纹耀说话的世界，仅凭蛮大人现有的一块杂牌纹耀，不要说参军，就连住店的资格都没有。受尽歧视的蛮吉和蛮大人决定，混上那艘即将启程去消灭魁拔的巨型战舰，直接挑战魁拔，用热血换取至高的荣誉。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        Let me not to the marriage of true minds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Admit impediments. Love is not love<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Which alters when it alteration finds,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Or bends with the remover to remove:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        O no! it is an ever-fixed mark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        That looks on tempests and is never shaken;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        It is the star to every wandering bark,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Whose worth's unknown, although his highth be taken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Love's not Time's fool, though rosy lips and cheeks<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Within his bending sickle's compass come:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Love alters not with his brief hours and weeks,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        But bears it out even to the edge of doom.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        If this be error and upon me proved,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        I never writ, nor no man ever loved.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="文本样式">文本样式</h2>
<ul>
<li>颜色</li>
<li>对齐方式</li>
<li>首行缩进</li>
<li>行高</li>
<li>装饰</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/*
        color 颜色
            单词
            #RGB 0~f
            RGBA A:0~1
        text-align 排版
        text-indent 缩进，一般用em
        height 块的高度
        line-height 行高，和块的高度一致就可以上下居中
        text-decoration 装饰，下划线，中划线，上划线，超链接去下划线
        vertical-align 垂直对齐
        */</span>
        <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #07cf00<span class="token punctuation">;</span>
            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.p1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.p3</span> <span class="token punctuation">&#123;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
            <span class="token property">line-height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.l1</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.l2</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.l3</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-decoration</span><span class="token punctuation">:</span> overline<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">.image *</span><span class="token punctuation">&#123;</span>
            <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/a.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        assdfkjads;lfj
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123123123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123123123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>l3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123123123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>故事介绍<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        平静安详的元泱境界，每隔333年，总会有一个神秘而恐怖的异常生物重生，它就是魁拔！魁拔的每一次出现，都会给元泱境界带来巨大的灾难！即便是天界的神族，也在劫难逃。在天地两界各种力量的全力打击下，魁拔一次次被消灭，但又总是按333年的周期重新出现。魁拔纪元1664年，天神经过精确测算后，在第六代魁拔苏醒前一刻对其进行毁灭性打击。但谁都没有想到，由于一个差错导致新一代魁拔成功地逃脱了致命一击。很快，天界魁拔司和地界神圣联盟均探测到了魁拔依然生还的迹象。因此，找到魁拔，彻底消灭魁拔，再一次成了各地热血勇士的终极目标。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        在偏远的兽国窝窝乡，蛮大人和蛮吉每天为取得象征成功和光荣的妖侠纹耀而刻苦修炼，却把他们生活的村庄搅得鸡犬不宁。村民们绞尽脑汁把他们赶走。一天，消灭魁拔的征兵令突然传到窝窝乡，村长趁机怂恿蛮大人和蛮吉从军参战。然而，在这个一切都凭纹耀说话的世界，仅凭蛮大人现有的一块杂牌纹耀，不要说参军，就连住店的资格都没有。受尽歧视的蛮吉和蛮大人决定，混上那艘即将启程去消灭魁拔的巨型战舰，直接挑战魁拔，用热血换取至高的荣誉。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        Let me not to the marriage of true minds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Admit impediments. Love is not love<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Which alters when it alteration finds,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Or bends with the remover to remove:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        O no! it is an ever-fixed mark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        That looks on tempests and is never shaken;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        It is the star to every wandering bark,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Whose worth's unknown, although his highth be taken<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Love's not Time's fool, though rosy lips and cheeks<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Within his bending sickle's compass come:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        Love alters not with his brief hours and weeks,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        But bears it out even to the edge of doom.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        If this be error and upon me proved,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        I never writ, nor no man ever loved.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="文本阴影和超链接伪类">文本阴影和超链接伪类</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token comment">/* 默认的颜色 */</span>
        <span class="token comment">/* a &#123;
            text-decoration: none;
        &#125; */</span>
        <span class="token selector">a:link</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> plum<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token selector">a:visited</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> grey<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 鼠标悬浮的颜色 */</span>
        <span class="token selector">a:hover</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 鼠标按住的状态 */</span>
        <span class="token selector">a:active</span> <span class="token punctuation">&#123;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token comment">/* 文字阴影：水平偏移 垂直偏移 模糊半径 阴影颜色 */</span>
        <span class="token selector">#color</span> <span class="token punctuation">&#123;</span>
            <span class="token property">text-shadow</span><span class="token punctuation">:</span> 5px 5px 5px <span class="token function">rgb</span><span class="token punctuation">(</span>11<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 213<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/a.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>冯哥头像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>狗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>白色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="列表">列表</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* ul li */</span>
<span class="token comment">/*
list-style
    none 去掉圆点
    circle 空心圆
    decimal 数字
    square 正方形
*/</span>
<span class="token selector">ul li</span> <span class="token punctuation">&#123;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">text-indent</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="背景">背景</h2>
<ul>
<li><p>背景颜色</p></li>
<li><p>背景图片</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 700px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"images/a.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
    <span class="token comment">/* 默认是全部平铺的 */</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.div1</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-x<span class="token punctuation">;</span>
    <span class="token comment">/* 水平平铺 */</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.div2</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-y<span class="token punctuation">;</span>
    <span class="token comment">/* 垂直平铺 */</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.div3</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
    <span class="token comment">/* 不平铺 */</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h2 id="渐变">渐变</h2>
<p>https://www.grabient.com/</p>
<h1 id="盒子模型">盒子模型</h1>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_05_CSS%E7%AC%94%E8%AE%B0_%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.png" alt="盒子模型.png" /><figcaption aria-hidden="true">盒子模型.png</figcaption>
</figure>
<p>margin：外边距</p>
<p>border：边框</p>
<p>padding：内边距</p>
<h2 id="边框">边框</h2>
<ul>
<li>粗细</li>
<li>样式</li>
<li>颜色</li>
</ul>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
border: 粗细 样式 颜色
*/</span>
<span class="token selector">#box</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">form</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">form div:nth-of-type(1) input</span> <span class="token punctuation">&#123;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">form div:nth-of-type(2) input</span> <span class="token punctuation">&#123;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 3px dashed powderblue<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="内外边距">内外边距</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
外边距的妙用：居中元素
margin: 0 auto;
顺时针
margin: 1px; 上右下左
margin: 1px 2px; 上下 左右
margin: 1px 2px 3px 4px; 上 右 下 左
*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="圆角边框">圆角边框</h2>
<p>4个角</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
左上 右上 右下 左下 顺时针方向
*/</span>
<span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 10px solid red<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="阴影">阴影</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
box-shadow 盒子阴影
*/</span>
<span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 10px solid red<span class="token punctuation">;</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 10px 10px 10px yellow<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="http://www.cssmoban.com">模板之家</a></p>
<p><a href="https://ice.work/">飞冰 - 让前端开发简单而友好</a></p>
<p><a href="https://www.layui.com/">Layui - 经典开源模块化前端 UI 框架</a></p>
<p><a href="https://element-plus.gitee.io/#/zh-CN">Element Plus - The world's most popular Vue 3 UI framework</a></p>
<h1 id="浮动">浮动</h1>
<h2 id="标准文档流">标准文档流</h2>
<p>指的是元素排版布局过程中，元素会默认自动从左往右，从上往下的流式排列方式。</p>
<p>块级元素：独占一行</p>
<p>行内元素：不独占一行</p>
<h2 id="display">display</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
block 块元素
inline 行内元素
inline-block 行内元素，但是保留块元素的特性
none 消失
*/</span>
<span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">span</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="浮动-1">浮动</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
float 浮动
	left 左浮
	right 右浮
*/</span>
<span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="父级边框塌陷的问题">父级边框塌陷的问题</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
clear 指定一个元素是否必须移动到在它之前的浮动元素下面。
	left 左侧不允许有浮动元素
	right 右侧不允许有浮动元素
	both 两侧不允许有浮动元素
	none
*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>父级元素设置高度</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#father</span> <span class="token punctuation">&#123;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>父级元素中，末尾增加一个空div标签，清除浮动</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>overflow</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
overflow
	hidden 隐藏
	scroll 滚动条
*/</span>
<span class="token selector">#content</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/*
在父级元素中增加一个overflow: hidden
*/</span>
<span class="token selector">#father</span> <span class="token punctuation">&#123;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>父类添加一个伪类（推荐）</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#father:after</span> <span class="token punctuation">&#123;</span>
    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h1 id="定位">定位</h1>
<h2 id="相对定位">相对定位</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*
相对定位：相对于自己原来的位置进行偏移，仍然在标准文档流中。
*/</span>
<span class="token selector">body</span> <span class="token punctuation">&#123;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#father</span> <span class="token punctuation">&#123;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #666<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#first</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #a13d30<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #b27530<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token comment">/* 相对定位：上下左右 */</span>
    <span class="token property">top</span><span class="token punctuation">:</span> -20px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#second</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #255099<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #255066<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#third</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #1c6699<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #1c6615<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="绝对定位">绝对定位</h2>
<p>没有父级元素定位的情况下，基于浏览器定位。</p>
<p>父级元素存在定位的情况下，相对于父级元素进行偏移。</p>
<p>在父级元素范围内移动。</p>
<p>不在标准文档中，原来的位置不会被保留。</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">div</span> <span class="token punctuation">&#123;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#father</span> <span class="token punctuation">&#123;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #666<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#first</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #a13d30<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #b27530<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#second</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #255099<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #255066<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">#third</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #1c6699<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px dashed #1c6615<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="固定定位">固定定位</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/* 绝对定位 */</span>
<span class="token selector">div:nth-of-type(1)</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">/* 固定定位 */</span>
<span class="token selector">div:nth-of-type(2)</span> <span class="token punctuation">&#123;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token property">right</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">bottom</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="z-index">z-index</h2>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 父级元素相对定位 */</span>
<span class="token selector">#content ul</span> <span class="token punctuation">&#123;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.tipText, .tipBg</span> <span class="token punctuation">&#123;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.tipBg</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span> <span class="token comment">/* 透明度 */</span>
<span class="token punctuation">&#125;</span>
<span class="token selector">.tipText</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span> 999<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="动画">动画</h1>
<p>CSS动画</p>
<p>JavaScript动画</p>
<p>Canvas动画</p>
<h1 id="css预处理器">CSS预处理器</h1>
<p>CSS是一门标记语言，不是编程语言，因此不可以自定义变量，不可以引用，不具备任何语法支持。它的主要缺陷如下：</p>
<ul>
<li>语法不够强大，比如无法嵌套书写，导致模块化开发中需要书写很多重复的选择器。</li>
<li>没有变量和合理的样式复用机制，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致难以维护。</li>
</ul>
<p>CSS预处理器定义了一种新的语言，基本思想是，用一种专门的编程语言，进行Web页面样式设计，再通过编译器转化为正常的CSS文件。常用的CSS预处理器有：</p>
<ul>
<li>SASS：基于Ruby，通过服务端处理，功能强大，解析效率高，需要学习Ruby语言，上手难度高于LESS。</li>
<li>LESS：基于NodeJS，通过客户端处理，使用简单。功能比SASS简单，解析效率低于SASS，但在实际开发中足够，建议使用。</li>
</ul>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.bilibili.com/video/BV1YJ411a7dy">【狂神说Java】CSS3最新教程快速入门通俗易懂_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
</ul>
]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker笔记</title>
    <url>/2021/05/20/Docker%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="什么是docker">什么是Docker</h1>
<h2 id="docker为什么出现">Docker为什么出现</h2>
<p>产品开发到上线需要两套环境。环境配置十分麻烦。每一个机器都要部署环境，费时费力。</p>
<p>项目能不能带上环境安装？</p>
<p>使用Docker。</p>
<p>Docker核心思想是隔离，打包装箱（logo），每个“箱子”是互相隔离的。</p>
<p>官网：https://www.docker.com/</p>
<p>文档：https://docs.docker.com/</p>
<p>仓库：https://hub.docker.com/</p>
<h2 id="docker能干嘛">Docker能干嘛</h2>
<p>对比虚拟机技术：</p>
<p>虚拟机技术缺点：</p>
<ul>
<li>启动慢</li>
<li>资源占用多</li>
<li>冗余步骤多</li>
</ul>
<p>容器化技术：容器化技术并没有模拟一个完整的操作系统。</p>
<p>Docker和虚拟机的不同：</p>
<p>传统虚拟机，虚拟出一套硬件，运行一个完整的操作系统，在这个系统上安装和运行软件。</p>
<p>容器内的应用直接运行在宿主机的内核，容器是没有自己的内核的，也没有硬件。每个容器间相互隔离，每个容器内都有一个属于自己的文件系统，互不影响。</p>
<p>DevOps（开发、运维）：更快速的交付和部署，更便捷的升级和扩缩容，更简单的系统运维，更高效的计算资源利用。</p>
<h1 id="docker安装">Docker安装</h1>
<h2 id="docker的基本组成">Docker的基本组成</h2>
<p>镜像（image）：Docker镜像就好比是一个模板，可以通过这个模板来创建容器服务。通过一个镜像可以创建多个容器。最终服务运行或者项目运行就是在容器中的。</p>
<p>容器（container）：Docker利用容器技术，通过镜像来创建并独立运行一个或者一组应用。目前可以把容器理解为一个简易的Linux系统。</p>
<p>仓库（repository）：仓库就是存放镜像的地方。仓库分为公有仓库和私有仓库。默认是国外的Docker Hub，国内通常要配置镜像加速。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_20_Docker%E7%AC%94%E8%AE%B0_Docker%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.svg" alt="Docker系统架构.svg" /><figcaption aria-hidden="true">Docker系统架构.svg</figcaption>
</figure>
<h2 id="安装docker">安装Docker</h2>
<p><a href="https://docs.docker.com/get-docker/">Get Docker | Docker Documentation</a></p>
<p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package">在 Windows 10 上安装 WSL | Microsoft Docs</a></p>
<p>如果是Windows需要在BIOS打开CPU虚拟化技术。</p>
<p>可以在任务管理器查看虚拟化是否打开。</p>
<p>另外还需要在启用或关闭Windows功能中打开适用于Linux的Windows子系统，并安装WSL 2。</p>
<h3 id="配置阿里云镜像加速">配置阿里云镜像加速</h3>
<p>在Docker Engine设置选项中，配置</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>阿里云镜像加速的地址<span class="token punctuation">]</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>加速地址可以在登录阿里云之后的容器镜像服务-镜像工具-镜像加速器找到。</p>
<h1 id="docker命令">Docker命令</h1>
<ul>
<li><p>查看Docker版本，验证Docker是否安装成功。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>运行hello world程序。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>查看已经下载的镜像。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>帮助命令。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token punctuation">[</span>命令<span class="token punctuation">]</span> --help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>显示Docker系统信息，包括镜像和容器的数量。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>官方帮助文档：<a href="https://docs.docker.com/reference/">Reference documentation | Docker Documentation</a></p></li>
<li><p>提交镜像。提交到本地的镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker commit 容器ID <span class="token punctuation">[</span>目标镜像名<span class="token punctuation">[</span>:tag<span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>提交信息：<code>-m string</code></p>
<p>作者：<code>-a string</code></p></li>
</ul>
<h2 id="镜像命令">镜像命令</h2>
<ul>
<li><p>列出镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    d1165f221234   <span class="token number">2</span> months ago   <span class="token number">13</span>.3kB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>REPOSITORY：镜像的仓库源，使用这个名字从仓库下载镜像。</p>
<p>TAG：镜像的标签</p>
<p>IMAGE ID：镜像的ID</p>
<p>CREATED：镜像的创建时间</p>
<p>SIZE：镜像的大小</p>
<p>列出所有镜像：<code>-a</code></p>
<p>只显示镜像ID：<code>-q</code></p></li>
<li><p>搜索镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker search mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">NAME                              DESCRIPTION
            STARS     OFFICIAL   AUTOMATED
mysql                             MySQL is a widely used, open-source relation…   <span class="token number">10932</span>     <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
mariadb                           MariaDB Server is a high performing <span class="token function">open</span> sou…   <span class="token number">4134</span>      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
mysql/mysql-server                Optimized MySQL Server Docker images. Create…   <span class="token number">812</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
percona                           Percona Server is a fork of the MySQL relati…   <span class="token number">539</span>       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>过滤搜索结果：<code>-f=STARS=3000</code>过滤标星3000以下的镜像。</p></li>
<li><p>下载镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker pull 镜像名<span class="token punctuation">[</span>:TAG<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Using default tag: latest <span class="token comment"># 如果不写TAG，默认就是latest</span>
latest: Pulling from library/mysql
69692152171a: Pull complete <span class="token comment"># 分层下载，docker image的核心 联合文件系统</span>
1651b0be3df3: Pull complete
951da7386bc8: Pull complete
0f86c95aa242: Pull complete
37ba2d8bd4fe: Pull complete
6d278bb05e94: Pull complete
497efbd93a3e: Pull complete
f7fddf10c2c2: Pull complete
16415d159dfb: Pull complete
0e530ffc6b73: Pull complete
b0a4a1a77178: Pull complete
cd90f92aa9ef: Pull complete
Digest: sha256:d50098d7fcb25b1fcb24e2d3247cae3fc55815d64fec640dc395840f8fa80969 <span class="token comment"># 签名</span>
Status: Downloaded newer image <span class="token keyword">for</span> mysql:latest
docker.io/library/mysql:latest <span class="token comment"># 真实地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>删除镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker rmi 镜像的名称或ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>批量删除全部的镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker rmi -f <span class="token variable"><span class="token variable">$(</span>docker images -aq<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>强制删除：<code>-f</code></p></li>
</ul>
<h2 id="容器命令">容器命令</h2>
<p>有了镜像才可以创建容器。先下载一个CentOS系统进行学习。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker pull centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><p>新建容器并启动。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run <span class="token punctuation">[</span>可选参数<span class="token punctuation">]</span> image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>容器名字：<code>--name="name"</code>用来区分容器。</p>
<p>后台方式运行：<code>-d</code>，问题：<code>docker ps</code>发现停止了。常见的坑：如果Docker容器使用后台运行，就必须要有一个前台进程，如果Docker发现没有前台应用，就会自动停止容器。</p>
<p>使用交互方式运行，进入容器查看内容：<code>-it</code></p>
<p>指定容器的端口：<code>-p</code></p>
<ul>
<li><code>-p IP:主机端口:容器端口</code></li>
<li><code>-p 主机端口:容器端口</code></li>
<li><code>-p 容器端口</code></li>
<li><code>容器端口</code></li>
</ul>
<p>随机指定端口：<code>-P</code></p>
<p>用完即删除：<code>--rm</code></p>
<p>设置环境变量：<code>-e list</code></p>
<p>添加到其他容器的链接：<code>--link list</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -it centos /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>停止容器并退出。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>退出但不停止容器。</p>
<p><code>Ctrl+p Ctrl+q</code></p></li>
<li><p>列出所有正在运行的容器。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看所有容器：<code>-a</code>注意这个不是查看所有镜像。</p>
<p>显示最近创建的n个容器：<code>-n int</code></p>
<p>只显示容器的ID：<code>-q</code></p></li>
<li><p>删除容器，不能删除正在运行的容器。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">rm</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>删除所有容器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -aq<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>强制删除：<code>-f</code>，可以删除掉正在运行的容器。</p>
<p>删除所有容器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">ps</span> -aq <span class="token operator">|</span> <span class="token function">xargs</span> docker <span class="token function">rm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>启动容器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker start 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>停止正在运行的容器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker stop 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>重启容器</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker restart 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>强制停止容器，在stop报错的时候可以使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">kill</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>管理卷</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker volume<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>查看镜像的历史，就是说查看指定的镜像是怎么构建出来的。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">history</span> 镜像<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>登录Docker仓库。登录之后可以使用push等命令。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker login -u xfdj<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>登出Docker仓库。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token builtin class-name">logout</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>向仓库推送镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker push 镜像名<span class="token punctuation">[</span>:TAG<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>给镜像打标签。当push被拒绝的时候，需要给要提交的镜像按照一定的格式打标签重命名。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker tag 原镜像<span class="token punctuation">[</span>:TAG<span class="token punctuation">]</span> 新镜像名称<span class="token punctuation">[</span>:TAG<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>比如</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker tag myapp xfdj/myapp:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>要提交的镜像需要在命名的时候在镜像名之前加上用户名，然后在最后加上ID。</p></li>
<li><p>将一个或多个镜像打包成一个tar压缩包。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker save -o 输出文件名 镜像1 <span class="token punctuation">[</span>镜像2<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>从压缩包中读取镜像</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker load -i 压缩包<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>管理网络</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="常用其它命令">常用其它命令</h2>
<ul>
<li><p>查看日志</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker logs 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>显示时间戳：<code>-t</code></p>
<p>持续显示日志：<code>-f</code></p>
<p>显示指定条数的日志：<code>-n 数量</code></p></li>
<li><p>查看容器中的进程信息</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">top</span> 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>查看Docker对象的元数据。包括名称、挂载信息。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker inspect 名称或ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>进入当前正在运行的容器</p>
<p>开启一个新的Shell</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token builtin class-name">exec</span> -it 容器ID 使用的Shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>进入当前正在运行命令的Shell</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker attach 容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>在容器和主机之间拷贝文件或文件夹</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">cp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>查看容器的资源占用信息</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker stats<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_20_Docker%E7%AC%94%E8%AE%B0_Docker%20Command%20Diagram.png" alt="Docker Command Diagram.png" /><figcaption aria-hidden="true">Docker Command Diagram.png</figcaption>
</figure>
<h1 id="docker底层原理">Docker底层原理</h1>
<p>Docker是怎么工作的？</p>
<p>Docker是一个Client-Server结构的系统。Docker的服务进程运行在主机上，通过Socket从客户端访问。服务进程接收到客户端的指令之后操作Docker容器。</p>
<p>Docker为什么比虚拟机快？</p>
<ol type="1">
<li>Docker比虚拟机有更少的抽象层。</li>
<li>Docker利用的是宿主机的内核，虚拟机需要一个Guest OS。</li>
</ol>
<h1 id="可视化">可视化</h1>
<ul>
<li><p>portainer</p>
<p>什么是portainer？Docker图形化界面管理工具，提供一个后台面板供我们操作。</p></li>
</ul>
<h1 id="docker镜像详解">Docker镜像详解</h1>
<p>镜像是什么？</p>
<p>镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。</p>
<p>如何得到镜像？</p>
<ul>
<li>从远程仓库下载</li>
<li>从其他渠道获得</li>
<li>自己制作一个镜像DockerFile</li>
</ul>
<h2 id="docker镜像加载原理">Docker镜像加载原理</h2>
<p>UnionFS（联合文件系统）</p>
<p>UnionFS是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下。UnionFS是Docker镜像的基础。镜像可以通过分层来进行继承，基于基础镜像，可以制作各种具体的应用镜像。</p>
<p>特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统叠加起来，这样最终的文件系统会包含所有底层的文件和目录。</p>
<p>Docker的镜像实际上是由一层一层的文件系统组成。</p>
<p>bootfs（boot file system）主要包含bootloader和kernel，bootloader主要是引导加载kernel，Linux刚启动时会加载bootfs文件系统，在Docker镜像的最底层是bootfs。这一层和典型的Linux/Unix系统一样，包含boot加载器和内核。当boot加载完成之后整个内核就都在内存中了，此时内存的使用权已由bootfs转交给内核，此时系统也会卸载bootfs。</p>
<p>rootfs（root file system），在bootfs之上。包含的就是典型Linux系统中的/dev、/proc、/bin、/etc等标准目录和文件。rootfs就是各种不同的操作系统发行版，比如Ubuntu、CentOS等等。</p>
<p>对于一个精简的OS，rootfs可以很小，只需要包含最基本的命令、工具和程序库就可以了，因为底层直接用host的kernel，自己只需要提供rootfs就可以了。由此可见对于不同的linux发行版，bootfs基本是一致的，rootfs会有差别，因此不同的发行版可以公用bootfs。</p>
<p>Docker采用快照机制来实现镜像层堆栈，并保证多层镜像对外展示为统一的文件系统。上层镜像中的文件会覆盖底层镜像中的文件。这样就使得文件的更新版本作为一个新镜像层添加到镜像当中。</p>
<p>Docker镜像都是只读的，当容器启动时，一个新的可写层被加载到镜像的顶部，这一层就是我们通常说的容器层，容器之下的都叫镜像层。</p>
<h1 id="数据卷">数据卷</h1>
<p>什么是数据卷？</p>
<p>Docker的理念是把应用和环境打包成一个镜像。数据不应该放在容器中，如果数据都在容器中，只要容器一删除，数据就会丢失！需求：数据可以持久化。</p>
<p>容器之间可以有一个数据共享的技术。Docker容器中产生的数据，能直接保存到容器外。</p>
<p>将容器内的目录挂载到本机上。实现容器的持久化和同步操作。容器间也可以数据共享。</p>
<h2 id="使用数据卷">使用数据卷</h2>
<ul>
<li><p>使用命令方式来挂载</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -v 主机目录:容器内目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="具名和匿名挂载">具名和匿名挂载</h2>
<ul>
<li><p>匿名挂载</p>
<pre class="line-numbers language-none"><code class="language-none">docker run -v 容器内目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>具名挂载。卷名不以<code>/</code>开头。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -v 卷名:容器内目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>指定路径挂载</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -v 主机目录:容器内目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="读写权限">读写权限</h2>
<ul>
<li><p>只读。这个路径智能通过宿主机来操作，容器内部无法操作。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -v 容器内目录:ro<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>读写（默认）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -v 容器内目录:rw<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="数据卷容器">数据卷容器</h2>
<p>子容器可以继承父容器的数据卷，此时的父容器既是一个容器也是一个数据卷，因此叫做数据卷容器。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run --volume-from 父容器ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>通过数据卷容器可以实现容器之间的数据同步。而且数据卷不会随着容器的删除而被删除。数据卷容器的生命周期一直持续到没有容器使用为止。</p>
<h1 id="dockerfile">Dockerfile</h1>
<p>什么是Dockerfile？</p>
<p>Dockerfile就是用来构建Docker镜像的构建文件。使用Dockerfile来构建Docker镜像是除去使用commit来构建Docker镜像的第二种方式。</p>
<p>通过Dockerfile这个脚本可以生成镜像。镜像是一层一层的，脚本是一个一个的命令，每个命令都是一层。</p>
<p>编写一个Dockerfile。命名为<code>dockerfile1</code></p>
<pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM centos
VOLUME [ &quot;volume01&quot;, &quot;volume02&quot; ]
CMD [ &quot;&#x2F;bin&#x2F;bash&quot; ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>每一个命令，就相当于镜像的一层。</p>
<p>使用Dockerfile构建镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker build -f dockerfile1 -t centos:1.0 <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>-f</code>表示使用的文件，<code>-t</code>表示生成的名字和标签。最后的<code>.</code>不能忘记！表示构建的路径。</p>
<p>官方推荐的命名为<code>Dockerfile</code>，如果没有<code>-f</code>参数，Docker会自动寻找官方推荐命名的文件来构建镜像。</p>
<p>启动并进入镜像。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -it 镜像名/ID /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>进入镜像之后使用<code>ls</code>命令。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bin  etc   lib    lost+found  mnt  proc  run   srv  tmp  var       volume02
dev  home  lib64  media       opt  root  sbin  sys  usr  volume01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这里的两个新的目录<code>volume01</code>和<code>volume02</code>就是生成镜像的时候自动挂载的数据卷目录。</p>
<p>如果构建镜像的时候没有挂载卷，要手动挂载。<code>-v 卷名:容器内路径</code></p>
<h2 id="dockerfile构建步骤">Dockerfile构建步骤</h2>
<ol type="1">
<li>编写Dockerfile</li>
<li>docker build构建镜像</li>
<li>docker run运行镜像</li>
<li>docker push发布镜像（Docker Hub、阿里云）</li>
</ol>
<h2 id="dockerfile的指令">Dockerfile的指令</h2>
<p>Dockerfile的指令是忽略大小写的，只是通常建议大写。</p>
<pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile"># 基础镜像，从这个镜像开始构建
FROM
# 镜像是谁维护的，姓名+邮箱
MAINTAINER
# 镜像构建的时候需要运行的命令
RUN
# 添加内容或者文件的命令
ADD
# 镜像的工作目录
WORKDIR
# 挂载的目录
VOLUME
# 指定对外的端口
EXPOSE
# 指定这个容器启动的时候要运行的命令，只有最后一个会生效，而且会被命令行中的命令覆盖
CMD
# 指定这个容器启动的时候要运行的命令，可以在命令行追加命令
ENTRYPOINT
# 当构建一个被继承的Dockerfile的时候就会运行。是一个触发指令
ONBUILD
# 类似ADD，将文件拷贝到镜像中
COPY
# 构建的时候设置环境变量
ENV<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="发布自己的镜像">发布自己的镜像</h2>
<h3 id="docker-hub">Docker Hub</h3>
<ol type="1">
<li>注册账号。<a href="https://hub.docker.com/">Docker Hub</a></li>
<li>确定这个账号可以登录<code>docker login</code></li>
<li>提交自己的镜像<code>docker push</code></li>
</ol>
<h2 id="阿里云">阿里云</h2>
<ol type="1">
<li>登录阿里云。<a href="https://cn.aliyun.com/">阿里云</a></li>
<li>找到容器镜像服务-实例列表-镜像仓库</li>
<li>创建命名空间</li>
<li>创建镜像仓库</li>
</ol>
<p>提交或拉取步骤参考官方文档。</p>
<h1 id="docker网络">Docker网络</h1>
<p>Docker是如何处理容器的网络访问的？</p>
<p>如果使用<code>ip addr</code>查看容器的内部网络地址，会发现容器启动的时候会得到一个类似于<code>eth0@if15</code>的IP地址<code>172.17.0.2</code>，这个地址是Docker分配的。如果在Linux上<code>ping</code>容器内部的地址，是可以ping通的。</p>
<p>如果使用<code>ip addr</code>查看Linux的IP地址，会发现其中有一个docker0的IP地址<code>172.17.0.1</code>。而且会多出一个地址类似<code>veth11306d6@if14</code>的网络。</p>
<p>每启动一个Docker容器，Docker就会给Docker容器分配一个IP，只要安装了Docker，就会有一个网卡docker0。这个网卡使用的是桥接模式，使用的技术是veth-pair技术。</p>
<p>不同的容器也可以通过这个分配的IP互相ping通。这是把docker0当做路由器来实现的。而docker0还充当物理网卡的网桥。</p>
<p>Docker中所有的网络接口都是虚拟的，转发效率高。容器只要删除，对应的一对网桥就没了。</p>
<h2 id="link">--link</h2>
<p>添加到其他容器的链接。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -dP --name tomcat03 --link tomcat02 tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样容器可以使用名字来ping通。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token builtin class-name">exec</span> -it tomcat03 <span class="token function">ping</span> tomcat02<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PING tomcat02 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.3<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from tomcat02 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.3<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.131</span> ms
<span class="token number">64</span> bytes from tomcat02 <span class="token punctuation">(</span><span class="token number">172.17</span>.0.3<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">64</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">0.104</span> ms
<span class="token punctuation">..</span>.
^C
--- tomcat02 <span class="token function">ping</span> statistics ---
<span class="token number">6</span> packets transmitted, <span class="token number">6</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 157ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">0.086</span>/0.105/0.133/0.022 ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>原理：在<code>/etc/hosts</code>配置中增加了一条映射。</p>
<p>现在Docker不建议使用<code>--link</code>。docker0存在的问题：不支持容器名连接访问。</p>
<h2 id="自定义网络">自定义网络</h2>
<p>网络模式：</p>
<ul>
<li>bridge：桥接模式（默认）。</li>
<li>none：不配置网络。</li>
<li>host：和宿主机共享网络。</li>
<li>container：容器内网络连通。</li>
</ul>
<p>平时启动容器的命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -dP --name tomcat01 tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>实际上和下面的命令是等价的：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -dP --name tomcat01 --net bridge tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中的bridge实际上就是默认的docker0网络。</p>
<p>docker0网络的特点：</p>
<ul>
<li>默认</li>
<li>域名不能访问</li>
</ul>
<p>自定义网络：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network create --driver bridge --subnet <span class="token number">192.168</span>.0.0/16 --gateway <span class="token number">192.168</span>.0.1 mynet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在自定义网络中启动容器：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -dP --name tomcat-net-01 --net mynet tomcat
docker run -dP --name tomcat-net-02 --net mynet tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>在自定义网络中可以直接通过容器名ping通：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token builtin class-name">exec</span> -it tomcat-net-01 <span class="token function">ping</span> tomcat-net-02<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>而且这不是通过写hosts的方式实现的。</p>
<p>好处：</p>
<ul>
<li>不同的集群使用不同的网络，网络之间是隔离的。保证集群是健康的</li>
<li>不同的网络之间还可以连通</li>
</ul>
<h2 id="网络连通">网络连通</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker network connect 网络 容器<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个命令可以将一个容器连接到一个网络。</p>
<p>连通之后就会把容器放到该网络下。</p>
<p>一个容器两个IP地址。</p>
<h1 id="docker-compose">Docker Compose</h1>
<p>原先使用Docker：</p>
<p>编写Dockerfile，build，run。手动操作，单个容器。</p>
<p>如果实际场景需要部署100个微服务，而且这100个微服务还具有依赖关系怎么办？</p>
<p>Docker Compose是用来定义运行多个容器的工具，可以轻松高效地管理容器。</p>
<blockquote>
<p>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application's services. Then, with a single command, you create and start all the services from your configuration.</p>
<p>Using Compose is basically a three-step process:</p>
<ol type="1">
<li>Define your app's environment with a <code>Dockerfile</code> so it can be reproduced anywhere.</li>
<li>Define the services that make up your app in <code>docker-compose.yml</code> so they can be run together in an isolated environment.</li>
<li>Run <code>docker-compose up</code> and Compose starts and runs your entire app.</li>
</ol>
</blockquote>
<p>一个<code>docker-compose.yml</code>文件类似下面这个样子：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>  <span class="token comment"># optional since v1.27.0</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">web</span><span class="token punctuation">:</span>
    <span class="token key atrule">build</span><span class="token punctuation">:</span> .
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">"5000:5000"</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> .<span class="token punctuation">:</span>/code
      <span class="token punctuation">-</span> logvolume01<span class="token punctuation">:</span>/var/log
    <span class="token key atrule">links</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> redis
  <span class="token key atrule">redis</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> redis
<span class="token key atrule">volumes</span><span class="token punctuation">:</span>
  <span class="token key atrule">logvolume01</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Compose 有一些重要的概念：</p>
<ul>
<li>服务service：容器或者应用。（web、Redis、MySQL...）</li>
<li>项目project：一组关联的容器。</li>
</ul>
<h2 id="安装">安装</h2>
<p><a href="https://docs.docker.com/compose/install/">Install Docker Compose | Docker Documentation</a></p>
<p>加速下载：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> -L <span class="token string">"https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -s<span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>"</span> -o /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML笔记</title>
    <url>/2021/04/24/HTML%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="初识html">初识HTML</h1>
<p>HTML：超文本标记语言（Hyper Text Markup Language）。超文本包括：文字、图片、音频、视频、动画等。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment">&lt;!-- 网页头部 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>我的第一个网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token comment">&lt;!-- 主体部分 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    我的第一个网页
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="网页基本信息">网页基本信息</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- DOCTYPE：告诉浏览器,我们要使用什么规范 --></span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- head标签代表网页头部 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- meta描述性标签，它用来描述我们网站的一些信息 --></span>
    <span class="token comment">&lt;!-- meta一般用来做SEO --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>狂神说Java,西部开源<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>来这个地方可以学习Java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token comment">&lt;!-- title网页标题 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>我的第一个网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- body标签代表网页主体 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    我的第一个网页
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="网页基本标签">网页基本标签</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>基本标签学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 标题标签 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>二级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>三级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>四级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>五级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>六级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 段落标签 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        两只老虎
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 换行标签 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 水平线标签 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 字体样式标签 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>粗体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 特殊符号 --></span>
    空格：<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>
    大于号：<span class="token entity named-entity" title="&gt;">&amp;gt;</span>
    小于号：<span class="token entity named-entity" title="&lt;">&amp;lt;</span>
    版权符号：<span class="token entity named-entity" title="&copy;">&amp;copy;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="图像标签">图像标签</h1>
<p><code>&lt;img src="path" alt="text" title="text" width="x" height="y" /&gt;</code></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>图像标签学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        img学习
        src：图片地址（必填） 相对地址，绝对地址
        ../ 上一级目录
        alt：图片的替代名字（必填）
        title：鼠标悬停提示文字
        width：图像宽度
        height：图像高度
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="超链接标签及应用">超链接标签及应用</h1>
<p><code>&lt;a href="path" target="目标窗口位置"&gt;链接文本或图像&lt;/a&gt;</code></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>链接标签学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 使用name作为标记 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        a标签
        href：必填，表示要跳转到哪个页面
        target：表示窗口在哪里打开
            _blank：在新标签页打开
            _self：在当前标签页打开
     --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击我跳转到页面一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击我跳转到百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>头像<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>悬停文字<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

    <span class="token comment">&lt;!--
        锚链接
        1. 需要一个锚标记
        2. 跳转到标记
        #
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.链接标签.html#top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>可以实现文件间跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        功能性链接
        邮件链接：mailto
        QQ链接：QQ推广
    --></span>
    &lt;href="mailto:1056982090@qq.com">通过邮箱联系我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://wpa.qq.com/msgrd?v=3&amp;uin=&amp;site=qq&amp;menu=yes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://wpa.qq.com/pa?p=2::51<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>获取电影资源<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>获取电影资源<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="块元素和行内元素">块元素和行内元素</h1>
<p>块元素：无论内容多少，独占一行</p>
<p>行内元素：内容撑开宽度，左右都是行内元素的可以排在一行</p>
<h1 id="列表标签">列表标签</h1>
<p>列表分类</p>
<ul>
<li>无序列表</li>
<li>有序列表</li>
<li>自定义列表</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>列表学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 有序列表 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>运维<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>前端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>C/C++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 无序列表 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>运维<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>前端<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>C/C++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
    自定义列表
    dl：标签
    dt：列表名称
    dd：列表内容
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>学科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Linux<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>位置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>西安<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>新疆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="表格标签">表格标签</h1>
<p>基本结构</p>
<ul>
<li>单元格</li>
<li>行</li>
<li>列</li>
<li>跨行</li>
<li>跨列</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>表格学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表格table
        tr：行
        td：列
        border：表格边框
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
            <span class="token comment">&lt;!-- colspan 跨列 --></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
            <span class="token comment">&lt;!-- rowspan 跨行 --></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="媒体元素">媒体元素</h1>
<p>视频元素：video</p>
<p>音频元素：audio</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>媒体元素学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        video视频
        src：资源路径
        controls：控制条
        autoplay：自动播放
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/video/棉花糖V1.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        audio 音频
        src：资源路径
        controls：控制条
        autoplay：自动播放
     --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/audio/棉花糖V1.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="页面结构分析">页面结构分析</h1>
<table>
<thead>
<tr class="header">
<th>元素名</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>header</td>
<td>标题头部区域的内容（用于页面或页面中的一块区域）</td>
</tr>
<tr class="even">
<td>footer</td>
<td>标记脚部区域的内容（用于整个页面或页面的一块区域）</td>
</tr>
<tr class="odd">
<td>section</td>
<td>Web页面中的一块独立区域</td>
</tr>
<tr class="even">
<td>article</td>
<td>独立的文章内容</td>
</tr>
<tr class="odd">
<td>aside</td>
<td>相关内容或应用（常用于侧边栏）</td>
</tr>
<tr class="even">
<td>nav</td>
<td>导航类辅助内容</td>
</tr>
</tbody>
</table>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>页面结构分析<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>网页头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>网页主体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>网页脚部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="iframe内联框架">iframe内联框架</h1>
<p><code>&lt;iframe src="path" name="mainFrame"&gt;&lt;/iframe&gt;</code></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>iframe学习<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        iframe内联框架
        src：引用页面地址
        name：框架标识名
        width：宽度
        height：高度
     --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid=55631961&amp;bvid=BV1x4411V75C&amp;cid=97257967&amp;page=11<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span>
        <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>800px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>800px<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://xfdj_dragon.gitee.io<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="初识表单post和get提交">初识表单post和get提交</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- method规定如何发送表单数据 常用值：get|post --></span>
<span class="token comment">&lt;!-- action表示向何处发送表单数据 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>result.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Reset<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>重填<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 文本输入框：input type="text" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="文本框和单选框">文本框和单选框</h1>
<table>
<colgroup>
<col style="width: 13%" />
<col style="width: 86%" />
</colgroup>
<thead>
<tr class="header">
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>type</td>
<td>指定元素的类型。text、password、checkbox、radio、submit、reset、file、hidden、image、button，默认为text</td>
</tr>
<tr class="even">
<td>name</td>
<td>指定表单元素的名称（必需）</td>
</tr>
<tr class="odd">
<td>value</td>
<td>元素的初始值。type为radio时必须指定一个值</td>
</tr>
<tr class="even">
<td>size</td>
<td>指定表单元素的初始宽度。当type为text或password时，表单元素的大小以字符为单位。对于其他类型，宽度以像素为单位</td>
</tr>
<tr class="odd">
<td>maxlength</td>
<td>type为text或password时，输入的最大字符数</td>
</tr>
<tr class="even">
<td>checked</td>
<td>type为radio或checkbox时，指定按钮是否被选中</td>
</tr>
</tbody>
</table>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文本输入框：input type="text"
            value：默认初始值
            maxlength：最多能写几个字符
            size：文本框的长度
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>帅<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            单选框：input type="radio"
            value：单选框的值
            name：组
         --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="按钮和多选框">按钮和多选框</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文本输入框：input type="text"
            value：默认初始值
            maxlength：最多能写几个字符
            size：文本框的长度
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>帅<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            单选框：input type="radio"
            value：单选框的值
            name：组
         --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            多选框：
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            爱好：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sleep<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>睡觉
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>敲代码
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>聊天
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            按钮：
            input type="button" 普通按钮
            input type="image" 图片按钮
            input type="submit" 提交按钮
            input type="reset" 重置按钮
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            按钮：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击变长<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="列表框文本域和文件域">列表框文本域和文件域</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文本输入框：input type="text"
            value：默认初始值
            maxlength：最多能写几个字符
            size：文本框的长度
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>帅<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            单选框：input type="radio"
            value：单选框的值
            name：组
         --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            多选框：
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            爱好：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sleep<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>睡觉
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>敲代码
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chat<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>聊天
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            按钮：
            input type="button" 普通按钮
            input type="image" 图片按钮
            input type="submit" 提交按钮
            input type="reset" 重置按钮
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            按钮：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击变长<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            下拉框，列表框
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            下拉框：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>china<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>usa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>美国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swi<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>瑞士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--文本域--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            反馈：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文件域
            input type="file" name="files"
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="搜索框滑块和简单验证">搜索框滑块和简单验证</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文本输入框：input type="text"
            value：默认初始值
            maxlength：最多能写几个字符
            size：文本框的长度
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>帅<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            单选框：input type="radio"
            value：单选框的值
            name：组
         --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>女
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            多选框：
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            爱好：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sleep<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>睡觉
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>敲代码
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chat<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>聊天
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            按钮：
            input type="button" 普通按钮
            input type="image" 图片按钮
            input type="submit" 提交按钮
            input type="reset" 重置按钮
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            按钮：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击变长<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            下拉框，列表框
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            下拉框：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>china<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>usa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>美国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swi<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>瑞士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--文本域--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            反馈：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文件域
            input type="file" name="files"
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--邮件验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            邮箱：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--URL验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            URL：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--数字验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            数字：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--滑块--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            滑块：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>voice<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--搜索框--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            搜索：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="表单的应用">表单的应用</h1>
<ul>
<li>隐藏域 hidden</li>
<li>只读 readonly</li>
<li>禁用 disabled</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>登录注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单form
        action：表单提交的位置，可以是网站，也可以是一个请求处理地址
        method：post,get 提交方式
            get方式提交：我们可以在url中看到我们提交的信息，不安全，高效
            post：比较安全，传输大文件
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文本输入框：input type="text"
            value：默认初始值
            maxlength：最多能写几个字符
            size：文本框的长度
            readonly：只读
            hidden：隐藏，可以用来传一些默认值
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>名字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>帅<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 密码框：input type="password" --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            单选框：input type="radio"
            value：单选框的值
            name：组
            checked：选择
            disabled：禁用
         --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>女
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            多选框：
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            爱好：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sleep<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>睡觉
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>敲代码
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chat<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>聊天
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>game<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>游戏
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            按钮：
            input type="button" 普通按钮
            input type="image" 图片按钮
            input type="submit" 提交按钮
            input type="reset" 重置按钮
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            按钮：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点击变长<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../resource/image/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!--
            下拉框，列表框
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            下拉框：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>china<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>usa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>美国<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swi<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>瑞士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--文本域--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            反馈：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--
            文件域
            input type="file" name="files"
        --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--邮件验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            邮箱：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--URL验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            URL：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--数字验证--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            数字：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--滑块--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            滑块：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>voice<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!--搜索框--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            搜索：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token comment">&lt;!-- 增强鼠标可用性 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="表单初级验证">表单初级验证</h1>
<p>常用方式</p>
<ul>
<li>placeholder：提示信息</li>
<li>required：不能为空</li>
<li>pattern：正则表达式</li>
</ul>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.bilibili.com/video/BV1x4411V75C">【狂神说Java】HTML5完整教学通俗易懂_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
</ul>
]]></content>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript笔记</title>
    <url>/2021/05/12/JavaScript%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>JavaScript（行为）：是一种弱类型脚本语言，其源代码不需要经过编译，而是由浏览器解释运行，用于控制网页的行为。</p>
<p>ECMAScript是JavaScript的一个标准。最新版本为ES6。但是大部分浏览器支持的版本为ES5。导致开发环境和线上环境版本不一致。</p>
<h1 id="快速入门">快速入门</h1>
<h2 id="引入javascript">引入JavaScript</h2>
<ul>
<li><p>内部标签</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- script标签内，写JavaScript代码 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hello, world!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>外部引入</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/qj.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'hello, world!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h2 id="基本语法入门">基本语法入门</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// JavaScript严格区分大小写！</span>
<span class="token comment">// 定义变量 变量类型 变量名 = 变量值;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 条件控制</span>
<span class="token keyword">var</span> score <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token operator">&amp;&amp;</span> score <span class="token operator">&lt;</span> <span class="token number">70</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'60~70'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>score <span class="token operator">>=</span> <span class="token number">70</span> <span class="token operator">&amp;&amp;</span> score <span class="token operator">&lt;</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'70~80'</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'other'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// console.log(score); 在浏览器的控制台打印变量</span>

浏览器调试（<span class="token constant">F12</span>，审查元素）：

Elements：查看并调试<span class="token constant">HTML</span>和<span class="token constant">CSS</span>代码。

Console：JavaScript控制台。

Sources：JavaScript源文件，可以调试JavaScript。

Network：网络抓包。

Application：查看Cookies等的一些信息。

## 数据类型入门

数值、文本、图形、音频、视频……

JavaScript不区分小数和整数，统一用number表示。

​<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>`javascript
<span class="token number">123</span> <span class="token comment">// 整数</span>
<span class="token number">123.1</span> <span class="token comment">// 浮点数</span>
<span class="token number">123.1e3</span> <span class="token comment">// 科学计数法</span>
<span class="token operator">-</span><span class="token number">99</span> <span class="token comment">// 负数</span>
<span class="token number">NaN</span> <span class="token comment">// not a number</span>
<span class="token number">Infinity</span> <span class="token comment">// 无限大</span>
<span class="token string">'abc'</span> <span class="token comment">// 字符串</span>
<span class="token string">"abc"</span> <span class="token comment">// 字符串</span>
<span class="token boolean">true</span> <span class="token comment">// 布尔值</span>
<span class="token boolean">false</span> <span class="token comment">// 布尔值</span>
<span class="token operator">&amp;&amp;</span> <span class="token comment">// 逻辑与</span>
<span class="token operator">||</span> <span class="token comment">// 逻辑或</span>
<span class="token operator">!</span> <span class="token comment">// 逻辑非</span>
<span class="token operator">=</span> <span class="token comment">// 赋值</span>
<span class="token operator">==</span> <span class="token comment">// 等于（类型不一样，值一样，也会判断为true）这是一个JS的缺陷，坚持不要使用==</span>
<span class="token operator">===</span> <span class="token comment">// 绝对等于（类型一样，值一样，结果true）</span>
<span class="token number">NaN</span><span class="token operator">===</span><span class="token number">NaN</span> <span class="token comment">// false，NaN与所有的数值都不相等，包括自己</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true，智能通过isNaN()来判断NaN</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span><span class="token operator">===</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// false，存在精度问题</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.000001</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token keyword">null</span> <span class="token comment">// 空</span>
<span class="token keyword">undefined</span> <span class="token comment">// 未定义</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'hello'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span> <span class="token comment">// 数组，如果越界会undefined</span>
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"qinjiang"</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'js'</span><span class="token punctuation">,</span> <span class="token string">'java'</span><span class="token punctuation">,</span> <span class="token string">'web'</span><span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span> <span class="token comment">// 对象</span>
person<span class="token punctuation">.</span>name <span class="token comment">// 对象取值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="严格检查模式">严格检查模式</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token string">'use strict'</span><span class="token punctuation">;</span> <span class="token comment">// 严格检查模式，预防JavaScript的随意性导致产生的一些问题</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="数据类型">数据类型</h1>
<h2 id="字符串">字符串</h2>
<p>正常字符串使用单引号或者双引号包裹。</p>
<p>转义字符<code>\n \' \t \u4e2d \x41</code>。</p>
<p>多行字符串使用反引号。</p>
<p>模板字符串。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'qinjiang'</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>字符串长度<code>console.log(str.length)</code></p>
<p>字符串的可变性：不可变。</p>
<p>大小写转换</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>获取下标<code>str.indexOf('t')</code></p>
<p>截取（左闭右开）<code>str.substring(left, right)</code>可以省略right，表示截取到末尾。</p>
<h2 id="数组">数组</h2>
<p>Array，可以包含任意的数据类型。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// 取值</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// 赋值</span>
arr<span class="token punctuation">.</span>length <span class="token comment">// 长度，可以更改，会导致数组大小发生变化</span>
arr<span class="token punctuation">.</span><span class="token function">indexof</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// 返回元素的下标索引</span>
arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span> <span class="token comment">// 截取Array的一部分，返回一个新数组</span>
arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 压入到尾部</span>
arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 弹出尾部的一个元素</span>
arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 压入到头部</span>
arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 弹出头部的一个元素</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 排序</span>
arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 翻转</span>
arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 连接两个数组，返回一个新数组</span>
arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span> <span class="token comment">// 打印拼接数组，使用特定的字符串拼接</span>
arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 多维数组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="对象">对象</h2>
<p>若干个键值对</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> 对象名 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    属性名<span class="token operator">:</span> 属性值<span class="token punctuation">,</span>
    属性名<span class="token operator">:</span> 属性值<span class="token punctuation">,</span>
    属性名<span class="token operator">:</span> 属性值    
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"kuangshen"</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    email<span class="token operator">:</span> <span class="token string">"24736743@qq.com"</span><span class="token punctuation">,</span>
    score<span class="token operator">:</span> <span class="token number">0</span>
<span class="token punctuation">&#125;</span>
person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"qinjiang"</span><span class="token punctuation">;</span> <span class="token comment">// 对象赋值</span>
person<span class="token punctuation">.</span>haha <span class="token comment">// undefined，使用一个不存在的对象属性，不会报错</span>
<span class="token keyword">delete</span> person<span class="token punctuation">.</span>name <span class="token comment">// 删除对象的属性</span>
person<span class="token punctuation">.</span>haha <span class="token operator">=</span> <span class="token string">"haha"</span><span class="token punctuation">;</span> <span class="token comment">// 动态添加对象的属性</span>
<span class="token string">'age'</span> <span class="token keyword">in</span> person <span class="token comment">// true，判断属性值或方法是否在对象中，JavaScript中的属性名都是字符串，属性值是任意对象</span>
person<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token comment">// 等同于person.name</span>
person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'toString'</span><span class="token punctuation">)</span> <span class="token comment">// false，判断一个属性是否是这个对象自身拥有的，继承的属性返回false</span>
person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'score'</span><span class="token punctuation">)</span> <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="map和set">Map和Set</h2>
<p>ES6的新特性</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'tom'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'jack'</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'haha'</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> score <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token number">123456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">'tom'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set可以去重</span>
set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true 是否包含某个元素</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> set<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="流程控制">流程控制</h1>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">// 条件判断</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"haha"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"baba"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"fuck"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// 循环</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    age<span class="token operator">++</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
age<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 遍历索引</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> num <span class="token keyword">of</span> age<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 遍历值</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="函数">函数</h1>
<h2 id="定义函数">定义函数</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 绝对值函数</span>
<span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果没有执行return，函数执行完会返回undefined。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 定义方式2，定义一个匿名函数，然后赋值给一个变量</span>
<span class="token keyword">var</span> <span class="token function-variable function">abs</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="调用函数">调用函数</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 10</span>
<span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>JavaScript可以传任意个参数，也可以不传参数。</p>
<h2 id="参数判断">参数判断</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// 手动抛出异常来判断</span>
    <span class="token comment">// 使用typeof来判断参数类型</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">!==</span> <span class="token string">'number'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">throw</span> <span class="token string">'Not a Number'</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">!==</span> <span class="token string">'number'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">throw</span> <span class="token string">'Not a Number'</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"x=>"</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>arguments代表传递进来的所有的参数，是一个可变数组。</p>
<p>问题：arguments包含所有的参数，我们有时候想使用多余的参数来进行附加操作，需要排除已有的参数。</p>
<p>ES6引入的新特性：获取除了已经定义的参数之外的所有参数。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"a=>"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b=>"</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>argument<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 新特性</span>
<span class="token comment">// rest参数只能写在最后面，必须用...标识</span>
<span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"a=>"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b=>"</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="变量的作用域">变量的作用域</h2>
<p>在JavaScript中，var定义变量是有作用域的。但是在ES6之前，JS只有函数作用域和全局作用域，没有块级作用域，所以大括号{}限定不了var声明变量的访问范围。</p>
<p>var命令会发生“变量提升”的现象，即在作用域内，变量可以在声明之前使用，值为undefined。导致JS程序员的习惯是所有的var变量全部在开头定义。</p>
<p>在函数体中声明，则在函数体外不能使用。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">qj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError: x is not defined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>内部函数可以访问外部函数的成员，反之则不行。</p>
<p>查找变量从自身函数开始，由内向外查找。如果内外存在同名的函数，则内部函数会屏蔽外部函数的变量。</p>
<p>全局对象window。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">'xxx'</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 默认所有的全局变量，都会自动绑定在window对象下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>由于所有的全局变量都会绑定到window上，如果不同的JS文件使用了相同的全局变量，如何能够减少冲突？定义唯一全局变量，将自己的全局变量绑定在唯一全局变量下，降低全局命名冲突的问题。相当于命名空间。jQuery使用的就是这种方式。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 唯一全局变量</span>
<span class="token keyword">var</span> KuangApp <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token comment">// 定义全局变量</span>
KuangApp<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'kuangshen'</span><span class="token punctuation">;</span>
KuangApp<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>局部作用域 let。建议使用let代替var。let的作用域是块级作用域。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>常量const。ES6之前，用var 大写变量名的方式表示常量。ES6引入常量关键字。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: Assignment to constant variable.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="方法">方法</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> kuangshen <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'秦疆'</span><span class="token punctuation">,</span>
    birth<span class="token operator">:</span> <span class="token number">2020</span><span class="token punctuation">,</span>
    <span class="token comment">// 方法</span>
    <span class="token function-variable function">age</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birth<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// 属性</span>
kuangshen<span class="token punctuation">.</span>name
<span class="token comment">// 方法</span>
kuangshen<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birth<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">var</span> kuangshen <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">'秦疆'</span><span class="token punctuation">,</span>
    birth<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> getAge
<span class="token punctuation">&#125;</span>
kuangshen<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ok</span>
<span class="token function">getAge</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>kuangshen<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// this指向了kuangshen对象，参数为空（也可以不填）</span>
<span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>this默认指向调用它的对象。在JS中可以使用apply控制this的指向。</p>
<h1 id="内部对象">内部对象</h1>
<p>标准对象</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">typeof</span> <span class="token number">123</span>
<span class="token string">"number"</span>
<span class="token keyword">typeof</span> <span class="token string">"123"</span>
<span class="token string">"string"</span>
<span class="token keyword">typeof</span> <span class="token boolean">true</span>
<span class="token string">"boolean"</span>
<span class="token keyword">typeof</span> <span class="token number">NaN</span>
<span class="token string">"number"</span>
<span class="token keyword">typeof</span> <span class="token number">Infinity</span>
<span class="token string">"number"</span>
<span class="token keyword">typeof</span> <span class="token keyword">undefined</span>
<span class="token string">"undefined"</span>
<span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token string">"object"</span>
<span class="token keyword">typeof</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
<span class="token string">"object"</span>
<span class="token keyword">typeof</span> alert
<span class="token string">"function"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="date">Date</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 年</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 月 0~11</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 日</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 星期</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 时</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 分</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 秒</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 时间戳</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 时间戳转换为时间</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 区域时间</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toGMTString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 格林尼治标准时间</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="json">JSON</h2>
<p>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。</p>
<p>简洁和清晰的层次结构使得JSON成为理想的数据交换语言。</p>
<p>易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</p>
<p>任何JS支持的类型都可以用JSON来表示。</p>
<p>格式：</p>
<ul>
<li>对象都用{}</li>
<li>数组都用[]</li>
<li>所有的键值对都使用key: value</li>
</ul>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"qinjiang"</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    sex<span class="token operator">:</span> <span class="token string">'male'</span>
<span class="token punctuation">&#125;</span>
<span class="token comment">// 对象转化为JSON字符串</span>
<span class="token keyword">var</span> jsonUser <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// JSON字符串转化为对象</span>
<span class="token keyword">var</span> parseUser <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonUser<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ajax">Ajax</h2>
<ul>
<li>原生JS写法 xhr 异步请求</li>
<li>jQuery 封装好的方法 $("#name").ajax("")</li>
<li>axios 请求</li>
</ul>
<h1 id="面向对象编程">面向对象编程</h1>
<h2 id="面向对象原型继承">面向对象原型继承</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> Student <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"qinjiang"</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" run"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> xiaoming <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"xiaoming"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
<span class="token comment">// 小明的原型是Student</span>
xiaoming<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> Student<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="面向对象class继承">面向对象class继承</h2>
<p>class关键字是在ES6引入的。</p>
<p>JS语言中使用构造函数（constructor）作为对象的模板。所谓构造函数，就是一个提供生成对象的模板，并描述对象的基本结构的函数。一个构造函数，可以生成多个对象，每个对象都有相同的结构。</p>
<p>构造函数的特点：</p>
<ul>
<li>构造函数的函数名首字母通常大写</li>
<li>函数体内使用this关键字，代表所要生成的对象实例</li>
<li>生成对象的时候，必须使用new命令来调用构造函数</li>
</ul>
<p>new命令的作用，就是执行一个构造函数，并返回一个对象实例。使用new命令时，它后面的函数调用不是正常的调用，而是依次执行下面的步骤。</p>
<ol type="1">
<li>创建一个空对象，作为将要返回的对象实例。</li>
<li>将空对象的原型指向构造函数的prototype属性。</li>
<li>将空对象赋值给构造函数内部的this关键字。</li>
<li>开始执行构造函数内部的代码。</li>
</ol>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 之前创建类的方式</span>
<span class="token comment">// 构造函数</span>
<span class="token keyword">function</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// 给Student新增一个方法</span>
<span class="token class-name">Student</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> xiaoming <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"xiaoming"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// ES6之后</span>
<span class="token comment">// 定义一个学生的类</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> xiaoming <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"xiaoming"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">XiaoStudent</span> <span class="token keyword">extends</span> <span class="token class-name">Student</span> <span class="token punctuation">&#123;</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> grade</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>grade <span class="token operator">=</span> grade<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token function">myGrade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"我是一名小学生"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">var</span> xiaohong <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XiaoStudent</span><span class="token punctuation">(</span><span class="token string">"xiaohong"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>__proto__和prototype的区别：</p>
<ul>
<li>__proto__是每个对象都有的一个属性，prototype是函数才会有的属性。</li>
<li>__proto__指向的是当前对象的原型对象，prototype指向的是以当前函数作为构造函数而构造出来的对象的原型对象。</li>
<li>一个对象的__proto__来自构造函数的prototype。</li>
</ul>
<h1 id="操作bom对象">操作BOM对象</h1>
<p>BOM：浏览器对象模型</p>
<p>IE、Chrome、Safari、Firefox、Edge</p>
<p>window代表浏览器窗口。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span>innerHeight
<span class="token number">715</span>
window<span class="token punctuation">.</span>innerWidth
<span class="token number">525</span>
window<span class="token punctuation">.</span>outerHeight
<span class="token number">835</span>
window<span class="token punctuation">.</span>outerWidth
<span class="token number">1096</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Navigator封装了浏览器的信息。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">navigator<span class="token punctuation">.</span>appName
<span class="token string">"Netscape"</span>
navigator<span class="token punctuation">.</span>appVersion
<span class="token string">"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 Edg/90.0.818.56"</span>
navigator<span class="token punctuation">.</span>userAgent
<span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 Edg/90.0.818.56"</span>
navigator<span class="token punctuation">.</span>platform
<span class="token string">"Win32"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>大多数时候不会使用navigator对象，因为会被人为修改，不建议使用这些属性来判断和编写代码。</p>
<p>screen代表屏幕尺寸。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">screen<span class="token punctuation">.</span>width
<span class="token number">1080</span>
screen<span class="token punctuation">.</span>height
<span class="token number">1920</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>location代表当前页面的URL信息</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">location
Location <span class="token punctuation">&#123;</span>ancestorOrigins<span class="token operator">:</span> DOMStringList<span class="token punctuation">,</span> href<span class="token operator">:</span> <span class="token string">"https://www.baidu.com/"</span><span class="token punctuation">,</span> origin<span class="token operator">:</span> <span class="token string">"https://www.baidu.com"</span><span class="token punctuation">,</span> protocol<span class="token operator">:</span> <span class="token string">"https:"</span><span class="token punctuation">,</span> host<span class="token operator">:</span> <span class="token string">"www.baidu.com"</span><span class="token punctuation">,</span> …<span class="token punctuation">&#125;</span>
ancestorOrigins<span class="token operator">:</span> DOMStringList <span class="token punctuation">&#123;</span>length<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">&#125;</span>
assign<span class="token operator">:</span> ƒ <span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
hash<span class="token operator">:</span> <span class="token string">""</span>
host<span class="token operator">:</span> <span class="token string">"www.baidu.com"</span>
hostname<span class="token operator">:</span> <span class="token string">"www.baidu.com"</span>
href<span class="token operator">:</span> <span class="token string">"https://www.baidu.com/"</span>
origin<span class="token operator">:</span> <span class="token string">"https://www.baidu.com"</span>
pathname<span class="token operator">:</span> <span class="token string">"/"</span>
port<span class="token operator">:</span> <span class="token string">""</span>
protocol<span class="token operator">:</span> <span class="token string">"https:"</span>
reload<span class="token operator">:</span> ƒ <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
replace<span class="token operator">:</span> ƒ <span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
search<span class="token operator">:</span> <span class="token string">""</span>
toString<span class="token operator">:</span> ƒ <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
valueOf<span class="token operator">:</span> ƒ <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">Symbol</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
__proto__<span class="token operator">:</span> Location
location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 刷新网页</span>
location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">'https://www.bilibili.com'</span><span class="token punctuation">)</span> <span class="token comment">// 跳转网页</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>document代表当前的页面，HTML DOM文档树。通过document能够获取具体的文档树节点。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span>title
<span class="token string">"百度一下，你就知道"</span>
document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"hahaha"</span>
<span class="token string">"hahaha"</span>
document<span class="token punctuation">.</span>cookie <span class="token comment">// 劫持cookie的原理</span>
<span class="token string">"BAIDUID=..."</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>JavaSE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>JavaEE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> dl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'app'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>history代表历史记录</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">history
History <span class="token punctuation">&#123;</span>length<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> scrollRestoration<span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span> state<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">&#125;</span>
history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="操作dom对象">操作DOM对象</h1>
<p>DOM：文档对象模型</p>
<p>浏览器网页就是一个DOM树形结构</p>
<ul>
<li>更新：更新DOM节点</li>
<li>遍历：得到DOM节点</li>
<li>删除：删除DOM节点</li>
<li>添加：添加新的DOM节点</li>
</ul>
<p>要操作一个DOM节点，就必须要先获得这个DOM节点。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> h1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'h1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'p1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'p2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> children <span class="token operator">=</span> father<span class="token punctuation">.</span>children<span class="token punctuation">;</span> <span class="token comment">// 获取父节点下的所有子节点</span>
    <span class="token keyword">var</span> first <span class="token operator">=</span> father<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>
    <span class="token keyword">var</span> last <span class="token operator">=</span> father<span class="token punctuation">.</span>lastChild<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>更新节点</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"id1"</span><span class="token operator">></span>

<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
    <span class="token keyword">var</span> id1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'id1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    id1<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">'123'</span><span class="token punctuation">;</span>
    id1<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">'&lt;strong>123&lt;/strong>'</span><span class="token punctuation">;</span> <span class="token comment">// 可以解析HTML文本标签</span>
    <span class="token comment">// 操作样式</span>
    id1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span> <span class="token comment">// 属性使用字符串</span>
    id1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token string">'20px'</span><span class="token punctuation">;</span> <span class="token comment">// 使用驼峰命名</span>
    id1<span class="token punctuation">.</span>style<span class="token punctuation">.</span>padding <span class="token operator">=</span> <span class="token string">'8px'</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>删除节点</p>
<p>先获取父节点，再通过父节点删除自己。</p>
<p>删除多个节点的时候，children是在动态变化的，要注意要删除的节点的下标。</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"father"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>h1<span class="token operator">></span>标题<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
    <span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"p1"</span><span class="token operator">></span>p1<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"p2"</span><span class="token operator">></span>p2<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span>script<span class="token operator">></span>
    <span class="token keyword">var</span> h1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'h1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'p1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> p2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'p2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'father'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> children <span class="token operator">=</span> father<span class="token punctuation">.</span>children<span class="token punctuation">;</span> <span class="token comment">// 获取父节点下的所有子节点</span>
    <span class="token keyword">var</span> first <span class="token operator">=</span> father<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>
    <span class="token keyword">var</span> last <span class="token operator">=</span> father<span class="token punctuation">.</span>lastChild<span class="token punctuation">;</span>
    <span class="token keyword">var</span> father <span class="token operator">=</span> p1<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span> <span class="token comment">// 找到要删除节点的父节点</span>
    father<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 删除节点</span>
	father<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>插入节点</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaScript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ee<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaEE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>se<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaSE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pid</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>me<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pid</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> js <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>js<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把js移动到list里了</span>
    <span class="token comment">// 创建一个新的节点</span>
    <span class="token keyword">var</span> newp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个p标签</span>
    newp<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'newp'</span><span class="token punctuation">;</span>
    newp<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'Hello'</span><span class="token punctuation">;</span>
    newp<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>newp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> myScript <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    myScript<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span> <span class="token string">'text/javascript'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>myScript<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> body <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ee <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ee'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>js<span class="token punctuation">,</span> ee<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把js插到ee的前面</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="操作表单">操作表单</h1>
<p>文本框、下拉框、单选框、多选框、隐藏域、密码框……</p>
<p>表单的目的：提交信息</p>
<h2 id="获得表单信息">获得表单信息</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>性别：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 男
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>woman<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 女
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> input_text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 得到输入框的值</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input_text<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 修改输入框的值</span>
    input_text<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> boy_radio <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'boy'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> girl_radio <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'girl'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 对于单选框、多选框等固定的值，.value只能取到当前的值</span>
    <span class="token comment">// 使用checked查看返回的结果是否为true，如果是则被选中</span>
    boy_radio<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>
    girl_radio<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="提交表单">提交表单</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- MD5工具类 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!--
        表单绑定
        如果onsubmit="return aaa()"
        这样如果aaa()返回了false，就会阻止提交
        只有aaa()返回了true，就会提交通过
    --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.baidu.com/<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md5-password<span class="token punctuation">"</span></span> <span class="token attr-name">,</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md5-password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 绑定事件，onclick被点击的时候执行的事件 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">var</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> password <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> md5_password <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'md5-password'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uname<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>password<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// MD5算法加密</span>
            <span class="token comment">// 使用隐藏的表单项提交，防止出现密码栏密码变长的情况</span>
            md5_password<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>password<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="jquery">jQuery</h1>
<p>JavaScript和jQuery的关系：jQuery库中有大量的JavaScript函数。</p>
<p>获取jQuery：<a href="https://jquery.com/">jQuery</a></p>
<p>文档：<a href="https://jquery.cuishifeng.cn/">jQuery API 中文文档 | jQuery API 中文在线手册 | jquery api 下载 | jquery api chm</a></p>
<p>CDN jQuery：</p>
<ul>
<li><a href="https://www.bootcdn.cn/jquery/">jquery (v3.6.0) - jQuery 是一个高效、精简并且功能丰富的 JavaScript 工具库。它提供的 API 易于使用且兼容众多浏览器，这让诸如 HTML 文档遍历和操作、事件处理、动画和 Ajax 操作更加简单。 | BootCDN - Bootstrap 中文网开源项目免费 CDN 加速服务</a></li>
<li><a href="https://cdnjs.com/libraries/jquery">jquery - Libraries - cdnjs - The #1 free and open source CDN built to make life easier for developers</a></li>
<li><a href="https://www.jq22.com/cdn/">jQuery cdn加速</a></li>
</ul>
<p>公式：<code>$(selector).action()</code></p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- CDN引入 --></span>
    <span class="token comment">&lt;!-- &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js">&lt;/script> --></span>
    <span class="token comment">&lt;!-- 本地导入 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/jquery-3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test-jquery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 选择器就是CSS选择器</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test-jquery'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Hello, jQuery'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="选择器">选择器</h2>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 原生JS，选择器少</span>
<span class="token comment">// 标签</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ID</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 类</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery</span>
<span class="token comment">// 标签</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ID</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'$id'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 类</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.class'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="事件">事件</h2>
<ul>
<li>鼠标事件
<ul>
<li>mousedown()</li>
<li>mouseup()</li>
<li>mousemove()</li>
<li>...</li>
</ul></li>
<li>键盘事件</li>
<li>其他事件</li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/jquery-3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token selector">#divMove</span> <span class="token punctuation">&#123;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 获取鼠标当前的坐标 --></span>
    mouse: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mouseMove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>divMove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        在这里移动鼠标试试
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 当网页元素加载完毕之后，响应事件</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#divMove'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mousemove</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#mouseMove'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'x:'</span><span class="token operator">+</span>e<span class="token punctuation">.</span>pageX<span class="token operator">+</span><span class="token string">'y:'</span><span class="token operator">+</span>e<span class="token punctuation">.</span>pageY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="操作dom">操作DOM</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lib/jquery-3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test-ul<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>JavaScript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>python<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 取值</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test-ul li[name=python]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置值</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#test-ul li[name=python]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'设置值'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// $().html();</span>

        <span class="token comment">// CSS</span>
        <span class="token comment">// 获取样式属性的值</span>
        <span class="token comment">// $().css("color");</span>
        <span class="token comment">// 设置样式属性的值</span>
        <span class="token comment">// $().css("color", "red");</span>
        <span class="token comment">// $().css(&#123;"color": "red", "background": "blue"&#125;);</span>

        <span class="token comment">// 元素的显示和隐藏，本质CSS: display: none</span>
        <span class="token comment">// $().show();</span>
        <span class="token comment">// $().hide();</span>
        <span class="token comment">// $().toggle();</span>
        
        <span class="token comment">// Ajax</span>
        <span class="token operator">/</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="ajax-1">Ajax</h1>
<p>Ajax（Asynchronous JavaScript and XML）：异步的JavaScript和XML。</p>
<p>Ajax不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。</p>
<p>增加B/S的体验性。</p>
<p>使用Ajax，用户可以创建接近本地桌面应用的直接、高可用、更丰富、更动态的Web用户界面。</p>
<p>Ajax的核心是XMLHttpRequest（XHR）。XHR为向服务器发送请求和解析服务器响应提供了接口。能够以异步方式从服务器获取新数据。</p>
<p>jQuery提供多个与Ajax有关的方法。</p>
<p>通过jQuery Ajax方法，你能够使用HTTP Get和HTTP Post从远程服务器上请求文本、HTML、XML或JSON，并且把这些外部数据直接载入网页的被选元素中。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery-3.6.0.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">a1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">// 将文本框输入的值发送给服务器，接收服务器返回的数据</span>
            <span class="token comment">// 默认是Get请求</span>
            $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
                url<span class="token operator">:</span> <span class="token string">"https://www.google.com/search"</span><span class="token punctuation">,</span>
                data<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token string">"q"</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#txtName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> status</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
            <span class="token comment">// $.get(&#123;...&#125;)</span>
            <span class="token comment">// $.post(&#123;...&#125;)</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    用户名：
    <span class="token comment">&lt;!-- onblur失去焦点产生事件 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>txtName<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">a1</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.bilibili.com/video/BV1JJ41177di">【狂神说Java】JavaScript最新教程通俗易懂_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
</ul>
]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>【转】强化学习中无处不在的贝尔曼最优性方程，背后的数学原理知多少？</title>
    <url>/2020/09/29/%E3%80%90%E8%BD%AC%E3%80%91%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B8%AD%E6%97%A0%E5%A4%84%E4%B8%8D%E5%9C%A8%E7%9A%84%E8%B4%9D%E5%B0%94%E6%9B%BC%E6%9C%80%E4%BC%98%E6%80%A7%E6%96%B9%E7%A8%8B%EF%BC%8C%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86%E7%9F%A5%E5%A4%9A%E5%B0%91%EF%BC%9F/</url>
    <content><![CDATA[<p>在星际争霸（AlphaStar）和围棋（AlphaGO）游戏中，强化学习已取得了举世瞩目的成功。 而这些成功背后的核心则是用于求解马尔可夫决策过程（MDP）的贝尔曼最优性方程（Bellman Optimality Equation）。</p>
<p>可以说，贝尔曼方程在强化学习（RL）中无处不在，了解此方程的数学基础对于理解 RL 算法的工作原理必不可少。它是由美国应用数学家理查德·贝尔曼（Richard Bellman）提出，用于求解马尔可夫决策过程。</p>
<p>文本对此方程背后的数学基础进行了详尽介绍，通俗易懂而又不失数学上的严格性。</p>
<p>好文共赏之，以下译出原文与大家分享：</p>
<p>在星际争霸（AlphaStar）和围棋（AlphaGO）游戏中，强化学习已取得了举世瞩目的成功。 而这些成功背后的核心则是用于求解马尔可夫决策过程（Markov decision processes，MDP）的贝尔曼最优性方程。</p>
<p>强化学习中无处不在的贝尔曼最优性方程，背后的数学原理知多少？ <span class="math display">\[
v_{*}(s)=\max _{a} R_{s}^{a}+\gamma \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a} v_{*}\left(s^{\prime}\right)
\]</span></p>
<center>
贝尔曼最优性方程
</center>
<p>贝尔曼最优性方程是一个递归方程，可由动态规划（dynamic programming，DP）算法求解，通过求解该方程可以找到最优值函数和最优策略。</p>
<h1 id="本文将涉及到的数学符号">本文将涉及到的数学符号</h1>
<p><span class="math inline">\(S\)</span>表示状态空间。</p>
<p><span class="math inline">\(v\)</span>表示值函数。</p>
<p><span class="math inline">\(v_*\)</span>表示最优值函数。</p>
<p><span class="math inline">\(v(s)\)</span>表示值函数在状态为 s时的取值。</p>
<p><span class="math inline">\(\pi\)</span>表示策略。</p>
<p><span class="math inline">\(\pi^*\)</span>表示最优策略。</p>
<p><span class="math inline">\(\pi(s)\)</span>返回在状态为<span class="math inline">\(s\)</span>时策略<span class="math inline">\(\pi\)</span>所采取的行动。</p>
<p><span class="math inline">\(P\)</span>表示转移概率矩阵。</p>
<p><span class="math inline">\(A\)</span>表示所有可能行动的集合。</p>
<h1 id="预备知识">预备知识</h1>
<p>尽管我尽力让文章易懂，但限于篇幅且要同时确保分析的严格性，我还是假定读者已经了解以下预备知识：</p>
<ul>
<li><p>马尔可夫决策过程（MDP）</p></li>
<li><p>贝尔曼方程式以及如何使用迭代法求解此方程</p></li>
<li><p>RL基础，诸如价值函数，奖励，策略，折现因子等概念</p></li>
<li><p>线性代数</p></li>
<li><p>向量求导</p></li>
</ul>
<h1 id="理解贝尔曼方程的几大要点">理解贝尔曼方程的几大要点</h1>
<p>如果你对 RL 和 MDP 略有研究，想必你一定会遇到过此类说法：“对于每个MDP，总有至少一个策略优于或等于所有其他策略。”</p>
<p>在Sutton和Barto的经典教科书中以及David Silver的系列讲座中读到或听到这些说法时似乎非常直观，不证自明。但是，我们必得更深入地研究并以更具体的（当然，你懂得，作者意思是数学上的具体，而非常识上的直观）方式理解为何这么说。因此，在本文中，我将在数学上证明以下定理：</p>
<blockquote>
<p>对于任何有限的MDP，都存在一个最佳策略<span class="math inline">\(\pi^*\)</span>，满足其他所有可能的策略<span class="math inline">\(\pi\)</span>都不会比这个策略更好。</p>
</blockquote>
<p>在寻找最佳策略之前，我们需要先了解一下策略的顺序。即什么时候我们认为一项策略（<span class="math inline">\(\pi_1\)</span>）比另一项策略（<span class="math inline">\(\pi_2\)</span>）好？</p>
<p>如果对于状态空间中的每个状态，使用<span class="math inline">\(\pi_1\)</span>派生的值函数在此状态的值都大于或等于使用<span class="math inline">\(\pi_2\)</span>派生的值函数在此状态的值，则可以说策略<span class="math inline">\(\pi_1\)</span>优于策略<span class="math inline">\(\pi_2\)</span>。数学上，可以这样写： <span class="math display">\[
\pi_{1} \geq \pi_{2} \text { if } v_{\pi_{1}}(s) \geq v_{\pi_{2}}(s) \forall s \in S
\]</span></p>
<center>
策略间的比较
</center>
<p>既然我们已经知道如何比较策略，接下来我们需要证明始终存在一个比所有其他策略都更好的策略。 我们将使用巴拿赫不动点定理证明这一点，方法是证明贝尔曼最优算子是对带有L-无穷范数度量的实数完备度量空间上的闭映射。 为此，我们首先说说不动点问题以及关于柯西序列的完整度量空间。</p>
<p>上一段听起来很吓人，但是一旦我们理解了每个基本术语的含义，它将变得非常容易和直观。 所以别怕！我们接下来将一个一个地讨论上段标粗体的术语。 让我们克服我们的恐惧，以一种自下而上的方法，学习每个概念：</p>
<h2 id="不动点问题">1. 不动点问题</h2>
<p>我相信我们大多数人都熟悉方程求根问题。 我们求使函数<span class="math inline">\(f(x) = 0\)</span>的点<span class="math inline">\(x\)</span>。 在不动点问题中，我们则求解使得<span class="math inline">\(f(x) = x\)</span>的点<span class="math inline">\(x\)</span>。</p>
<p>顾名思义，点<span class="math inline">\(x\)</span>是一个不动点，就是说即使在其上应用函数<span class="math inline">\(f(x)\)</span>，它的值也不会改变。 通过构造另一个函数<span class="math inline">\(g(x) = f(x)-x = 0\)</span>，不动点问题可以转化为方程求根的问题。</p>
<p>实际上，方程求根问题也可以转换回求不动点问题。 但是（在特定情况下）解决不动点问题更容易，这使得不动点问题变得非常有趣和有用（节省了计算开销）。</p>
<p>要解决不动点问题，随机选择一个<span class="math inline">\(x\)</span>的作为起始值，并无限次重复应用<span class="math inline">\(f(x)\)</span>。 如果“函数是收敛的”，那么你将找到不动点问题的解。</p>
<p>从数学上讲，这很简单，让我们先介绍一个符号： <span class="math display">\[
\begin{aligned}
&amp;f^{n}(x): \text { apply the function } f() \text { n times on } x\\
&amp;\text { example, } f^{2}(x)=f(f(x))
\end{aligned}
\]</span> 记号<span class="math inline">\(f^n(x)\)</span>表示在<span class="math inline">\(x\)</span>点上连续应用<span class="math inline">\(n\)</span>次函数。</p>
<p>现在，如果函数是收敛的，那么它必须收敛到某个值，比方说，<span class="math inline">\(x^*\)</span>。 下面论证则是要说明这个值<span class="math inline">\(x^*\)</span>确实是不动点问题的解：</p>
<p>让我们选择一任意值<span class="math inline">\(x_0\)</span>并在其上无限次应用函数<span class="math inline">\(f(.)\)</span>以获得<span class="math inline">\(x^*\)</span>，然后使用它来解决不动点问题，如下图所示： <span class="math display">\[
\begin{aligned}
\operatorname{let}, x^{*} &amp;=\lim_{n \rightarrow \infty} f^{n}\left(x_{o}\right) \\
f\left(x^{*}\right) &amp;=f\left(\lim_{n \rightarrow \infty} f^{n}\left(x_{o}\right)\right) \\
&amp;=\lim_{n \rightarrow \infty} f\left(f^{n}\left(x_{o}\right)\right) \\
&amp;=\lim_{n \rightarrow \infty} f^{n+1}\left(x_{o}\right) \\
&amp;=x^{*}
\end{aligned}
\]</span></p>
<center>
求解不动点问题
</center>
<p>这背后的直觉很简单，如果某个函数在某个点收敛，那么该函数在那个收敛点的值就是收敛点本身。 因此，这个收敛点就是不动点。</p>
<p>也可以通过以下代码从经验上观察到函数收敛到不动点，代码链接如下：</p>
<ul>
<li><a href="https://gist.github.com/TimeTraveller-San/8e37399d4740928a258f395413bde2e7/raw/c48fecd50fa29634eea144917f92787c3ccd7bf3/Fixed%20point%20problem.ipynb">https://gist.github.com/TimeTraveller-San/8e37399d4740928a258f395413bde2e7/raw/c48fecd50fa29634eea144917f92787c3ccd7bf3/Fixed%20point%20problem.ipynb</a></li>
</ul>
<h2 id="度量空间">2. 度量空间</h2>
<p>度量空间只是一个在其上定义了度量的集合，度量则是定义了集合中任何两个元素之间的距离。 例如，欧几里德空间是度量空间，其距离定义为欧几里德距离。 因此，度量空间<span class="math inline">\(M\)</span>可表示为<span class="math inline">\((X, d)\)</span>，其中<span class="math inline">\(X\)</span>是集合，<span class="math inline">\(d\)</span>是某种度量。 一个度量<span class="math inline">\(d\)</span>必须满足以下四条性质：</p>
<ul>
<li><p>单位性：<span class="math inline">\(d(x,x) = 0\)</span></p></li>
<li><p>非负性：<span class="math inline">\(d(x, y) &gt;0\)</span></p></li>
<li><p>对称性：<span class="math inline">\(d(x,y) = d(y,x)\)</span></p></li>
<li><p>三角不等式：<span class="math inline">\(d(x,z) ≤ d(x,y)+d(y,x)\)</span></p></li>
</ul>
<h2 id="柯西序列">3. 柯西序列</h2>
<p>对于度量空间<span class="math inline">\((X,d)\)</span>，集合<span class="math inline">\(X\)</span>中的元素组成的序列<span class="math inline">\((x_1,x_2,x_3 \dots x_n)\)</span>是柯西序列， 如果对于任意正实数<span class="math inline">\(\varepsilon\)</span>，存在一个整数<span class="math inline">\(N\)</span>，使得以下等式成立：</p>
<p><span class="math display">\[
d\left(x_{a}, x_{b}\right)&lt;\varepsilon ; a, b&gt;N
\]</span></p>
<center>
柯西序列
</center>
<p>这里的数学解释有点小复杂，还不够直观（然而实际定义就是这样的）。 用简单的话说，度量空间元素组成的序列如果在某个点收敛（它们无限接近于某个点），这个序列就是柯西序列。</p>
<h2 id="完备度量空间">4. 完备度量空间</h2>
<p>如果由集合<span class="math inline">\(X\)</span>中元素组成的每个可能的柯西序列都收敛到集合<span class="math inline">\(X\)</span>中的元素，则度量空间<span class="math inline">\((X, d)\)</span>是完备的。 也就是说，由集合元素组成的每个柯西序列的极限所对应元素也属于该集合， 这也是为什么它被称为“完备”的原因。</p>
<h2 id="压缩映像">5. 压缩映像</h2>
<p>在度量空间<span class="math inline">\((X, d)\)</span>的元素上定义的函数（算子或映射）是一个压缩映像（或压缩子），如果存在某个常数<span class="math inline">\(\gamma\in[0,1)\)</span>，使得对于度量空间中任意两个元素<span class="math inline">\(x_1\)</span>和<span class="math inline">\(x_2\)</span>，满足以下条件：</p>
<p><span class="math display">\[
d\left(f\left(x_{1}\right), f\left(x_{2}\right)\right) \leq \gamma d\left(x_{1}, x_{2}\right)
\]</span></p>
<center>
压缩映像
</center>
<p>这也就意味着在将元素<span class="math inline">\(x_1\)</span>和<span class="math inline">\(x_2\)</span>上应用了映射<span class="math inline">\(f(.)\)</span>之后，它们彼此之间的距离至少在小于1的一个乘数因子<span class="math inline">\(\gamma\)</span>意义下更接近 。而且，该常数的最小值被称为Lipschitz常数（这是生成对抗网络的重要常数）。 另外，如果<span class="math inline">\(\gamma=1\)</span>，则映射不再是压缩映射，而是短映射。 直观上来说，在应用压缩映射后，元素之间序列值会越来越接近。</p>
<h2 id="巴拿赫不动点定理">6. 巴拿赫不动点定理</h2>
<p>此定理是我们证明的灵魂。非正式地讲，这个定理是说，对于一个完整的度量空间，将压缩映射一遍又一遍地应用到集合的元素上，我们最终将得到唯一的一个最优值。我们知道：</p>
<ul>
<li>压缩映射将集合中元素聚集到一起。</li>
<li>不停地运用这个压缩映射，我们会得到一个柯西序列。</li>
<li>完备度量空间中的柯西序列始终会收敛到自身中的一个值。</li>
</ul>
<p>形式上，该定理可以表述为：</p>
<blockquote>
<p>令<span class="math inline">\((X, d)\)</span>是一个完备的度量空间，函数<span class="math inline">\(f: X\to X\)</span>是一个压缩映射，则<span class="math inline">\(f\)</span>具有唯一一个不动点<span class="math inline">\(x^*\in X\)</span>（即，<span class="math inline">\(f(x^*)=x^*\)</span>），使得序列<span class="math inline">\(f(f(f(…f(x))))\)</span>收敛至<span class="math inline">\(x^*\)</span>。</p>
</blockquote>
<p>现在，为了数学上证明这一点，我们需要证明<span class="math inline">\(x^*\)</span>的唯一性和存在性。</p>
<p>唯一性： 我们将通过反证法证明这一点。我们假设收敛值不是唯一的，并且<span class="math inline">\(x_1^*\)</span>和<span class="math inline">\(x_2^*\)</span>是压缩映射序列收敛的两个值，那么我们会有：</p>
<p><span class="math display">\[
d\left(f\left(x_{1}^{*}\right), f\left(x_{2}^{*}\right)\right)=d\left(x_{1}^{*}, x_{2}^{*}\right)\tag{1}
\]</span> <span class="math inline">\(x_1^*\)</span>和<span class="math inline">\(x_2^*\)</span>是最优值，压缩映射已在这两点收敛，距离不再会变。此外，注意到<span class="math inline">\(f\)</span>是压缩映射，因此必须具有以下性质：</p>
<p><span class="math display">\[
d\left(f\left(x_{1}^{*}\right), f\left(x_{2}^{*}\right)\right) \leq \gamma d\left(x_{1}^{*}, x_{2}^{*}\right)\tag{2}
\]</span> 现在，由于<span class="math inline">\(\gamma\in[0,1)\)</span>，无法同时满足等式(1)和(2)，导出矛盾（因为此处假定两点距离大于零）。 因此，我们的假设是错误的，<span class="math inline">\(x^*\)</span>必是唯一的。</p>
<p>存在性 现在我们已经证明<span class="math inline">\(x^*\)</span>是唯一的，我们还需要证明<span class="math inline">\(x^*\)</span>存在。 令<span class="math inline">\((x_1,x_2,x_3 \dots x_n)\)</span>为重复应用压缩映射所形成的序列。</p>
<p><span class="math display">\[
x_{n}=f^{n}(x)
\]</span></p>
<center>
重复应用压缩映射所形成的序列的通项
</center>
<p>如果我们假设序列<span class="math inline">\((x_1,x_2,x_3 \dots x_n)\)</span>是柯西序列，我们知道该序列将收敛到某个点，例如，<span class="math inline">\(x^*\)</span>。 而且，由于度量空间是完整的，所以该收敛点<span class="math inline">\(x^*\)</span>属于度量空间<span class="math inline">\((X,d)\)</span>。 现在，我们只需要证明此序列是柯西序列即可。 我们取序列中<span class="math inline">\(x_n\)</span>和<span class="math inline">\(x_m\)</span>中两个元素，使得<span class="math inline">\(m &gt;&gt; n\)</span>，并使得<span class="math inline">\(m\)</span>足够大，然后通过重复应用度量<span class="math inline">\(d\)</span>的三角不等式性质来证明此序列是柯西序列， 我们有：</p>
<p><span class="math display">\[
\begin{aligned}
d\left(x_{m}, x_{n}\right) &amp; \leq d\left(x_{m}, x_{m-1}\right)+d\left(x_{m-1}, x_{n}\right) \\
&amp; \leq d\left(x_{m}, x_{m-1}\right)+d\left(x_{m-1}, x_{m-2}\right)+d\left(x_{m-2}, x_{n}\right) \\
&amp; \leq d\left(x_{m}, x_{m-1}\right)+\ldots+d\left(x_{n+1}, x_{n}\right) \\
&amp; \leq d\left(f^{m}\left(x_{o}\right), f^{m-1}\left(x_{o}\right)\right)+\ldots+d\left(f^{n+1}\left(x_{o}\right), f^{n}\left(x_{o}\right)\right)
\end{aligned}
\]</span></p>
<center>
展开度量d上的三角不等式
</center>
<p>现在，由于<span class="math inline">\(f\)</span>是压缩映射，我们知道：</p>
<p><span class="math display">\[
d\left(f^{n}\left(x_{1}\right), f^{n}\left(x_{2}\right)\right) \leq \gamma d\left(f^{n-1}\left(x_{1}\right), f^{n-1}\left(x_{2}\right)\right) \ldots . \leq \gamma^{n-1} d\left(f\left(x_{1}\right), f\left(x_{2}\right)\right) \leq \gamma^{n} d\left(x_{1}, x_{2}\right)
\]</span></p>
<center>
重复运用压缩映射不等式
</center>
<p>我们可进一步将<span class="math inline">\(d(x_m, x_n)\)</span>化为如下形式 ：</p>
<p><span class="math display">\[
\begin{aligned}
d\left(x_{m}, x_{n}\right) &amp; \leq d\left(f^{m}\left(x_{o}\right), f^{m-1}\left(x_{o}\right)\right)+\ldots+d\left(f^{n+1}\left(x_{o}\right), f^{n}\left(x_{o}\right)\right) \\
&amp; \leq \gamma^{m-1} d\left(f\left(x_{o}\right), x_{o}\right)+\ldots+\gamma^{n} d\left(f\left(x_{o}\right), x_{o}\right) \\
&amp; \leq d\left(f\left(x_{o}\right), x_{o}\right) \sum_{i=n}^{m-1} \gamma^{i} \\
&amp; \leq \gamma^{n} d\left(f\left(x_{o}\right), x_{o}\right) \sum_{i=0}^{m-n-1} \gamma^{i}\\
&amp;\leq \gamma^{n} d\left(f\left(x_{o}\right), x_{o}\right) \sum_{i=0}^{\infty} \gamma^{i} \quad(\mathrm{m}-\mathrm{n}-1 \text { is very large })\\
&amp;\leq \frac{\gamma^{n}}{(1-\gamma)} d\left(f\left(x_{o}\right), x_{o}\right)
\end{aligned}
\]</span> 现在，通过选择一个足够大的<span class="math inline">\(n\)</span>，我们可以使上式的右边小于任何正实数<span class="math inline">\(\varepsilon\)</span>。因此，序列序列<span class="math inline">\((x_1,x_2,x_3 \dots x_n)\)</span>是柯西序列，并且存在最优的<span class="math inline">\(x^*\in X\)</span>。 这就证明了巴拿赫不动点定理。</p>
<h1 id="回到贝尔曼最优性方程">回到贝尔曼最优性方程</h1>
<p>对于值函数<span class="math inline">\(v(s)\)</span>，我们定义一个新的算子，即最优贝尔曼算子<span class="math inline">\(B\)</span>，它接受一个值函数并返回一个新的值函数。 具体地，我们将此算子定义如下：</p>
<p><span class="math display">\[
B v(s)=\max _{a} R_{s}^{a}+\gamma \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a} v\left(s^{\prime}\right)
\]</span></p>
<center>
贝尔曼算子
</center>
<p>可以很容易地观察到，<span class="math inline">\(B\)</span>是一个递归算子。 因此，对初始值函数重复运用此算子将生成一系列值函数。 如果我们可以证明<span class="math inline">\(B\)</span>确实是某个度量空间<span class="math inline">\((X,d)\)</span>上的压缩映射，那么根据巴拿赫不动点定理，我们可以得出结论，最优贝尔曼算子的重复应用最终将导出唯一的最优值函数函数，通过值函数可以得到最优策略。 因此，我们的工作现在都简化为证明<span class="math inline">\(B\)</span>是压缩映射。 首先，让我们定义度量空间如下：</p>
<p>度量空间<span class="math inline">\((X,d)\)</span>：集合X是值函数的取值空间，定义如下：</p>
<p><span class="math display">\[
X : v \in \mathbb{R}^{|\mathbb{S}|}
\]</span> <span class="math inline">\(X\)</span>的定义，表示值函数在所有状态上的取值，故是实数集的笛卡尔积。</p>
<p>对此度量空间，我们使用的L-无穷范数定义如下：</p>
<p><span class="math display">\[
||X||_{\infty}=\max _{i \in[0,|X|]} |X_{i}|
\]</span></p>
<center>
L-无穷范数
</center>
<p>根据此度量空间范数的定义，两个值函数之间的距离等于两个值函数向量各方向绝对值之差的最大值。 同样，对于有限奖励的有限MDP，值函数将始终在实数空间中。 因此，此有限空间是完备的。</p>
<p>定理：贝尔曼算子<span class="math inline">\(B\)</span>是有限空间<span class="math inline">\((X, L_\infty)\)</span>上的压缩映射</p>
<p>证明：假设<span class="math inline">\(v_1\)</span>和<span class="math inline">\(v_2\)</span>是两个值函数。 则：</p>
<p><span class="math display">\[
\begin{aligned}
||B v_{1}(s)-B v_{2}(s)|| &amp;=\left\| \max _{a}\left(R_{s}^{a}+\gamma \sum_{s^{\prime}} P_{s s^{\prime}}^{a} v_{1}\left(s^{\prime}\right)\right)-\max _{a^{\prime}}\left(R_{s}^{a^{\prime}}+\gamma \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a^{\prime}} v_{2}\left(s^{\prime}\right)\right) \right\| \\
&amp; \leq\left\|\max _{a}\left(R_{s}^{a}+\gamma \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a} v_{1}\left(s^{\prime}\right)-R_{s}^{a}+\gamma \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a} v_{2}\left(s^{\prime}\right)\right)\right\| \\
&amp; \leq \gamma \left\| \max _{a}\sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a}\left(v_{1}\left(s^{\prime}\right)-v_{2}\left(s^{\prime}\right)\right) \right\|\\
&amp; \leq \gamma \max _{a, s^{\prime}} \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a}\left(v_{1}\left(s^{\prime}\right)-v_{2}\left(s^{\prime}\right)\right) \\
&amp; \leq \gamma\left\|v_{1}\left(s^{\prime}\right)-v_{2}\left(s^{\prime}\right)\right\| \max _{a, s^{\prime}} \sum_{s^{\prime} \in S} P_{s s^{\prime}}^{a} \\
&amp; \leq \gamma\left\|v_{1}\left(s^{\prime}\right)-v_{2}\left(s^{\prime}\right)\right\|
\end{aligned}
\]</span> 在上面的第二步中，我们通过用<span class="math inline">\(a\)</span>代替第二个值函数中的<span class="math inline">\(a&#39;\)</span>来引入不等式。这是因为通过将最优动作<span class="math inline">\(a\)</span>替换为其他动作<span class="math inline">\(a&#39;\)</span>，我们降低了其总价值，从而引入了不等式。</p>
<p>在上面的第四步中，我们通过在状态空间<span class="math inline">\(s&#39;\)</span>上取最大值来移除L-无穷范数（回想一下在前面我们关于值函数的L-无穷范数的定义）</p>
<p>在最后一步中，因为概率和始终为1，我们消去了求和号。</p>
<p>最后，在贝尔曼最优性方程中，由于<span class="math inline">\(\gamma\in[0,1)\)</span>（现在暂时忽略<span class="math inline">\(\gamma=1\)</span>的可能性），因此贝尔曼算子是压缩映射。</p>
<p>现在我们知道：</p>
<ul>
<li><span class="math inline">\((X, L_\infty)\)</span>是一个完备的度量空间</li>
<li>贝尔曼算子<span class="math inline">\(B\)</span>是压缩映射</li>
</ul>
<p>因此，根据巴拿赫不动点定理，我们得出结论，对每个MDP，存在唯一的最优值函数<span class="math inline">\(v_*\)</span>，使用这个值函数，我们可以得到最优策略<span class="math inline">\(\pi^*\)</span>。</p>
<p>因此证明，对于任何有限的MDP，都存在一个最优策略<span class="math inline">\(\pi^*\)</span>，不差于其他所有可能的策略<span class="math inline">\(\pi\)</span>。</p>
<p>那么，问题来了，如何找到这种最优的策略和值函数呢？一种方法就是在随机初始值函数上重复运用贝尔曼算子以获得最佳函数。但是，这在计算上非常耗时，此法经常是完全不可行的。因此，我们要使用诸如值和策略迭代之类的迭代方法或诸如Q-Learning或SARSA之类的时间差分方法。有关更多信息，请参阅作者的博客（https://towardsdatascience.com/reinforcement-learning-temporal-difference-sarsa-q-learning-expected-sarsa-on-python-9fecfda7467e）或者github（https://github.com/TimeTraveller-San/RL_from_scratch）。</p>
<h1 id="总结">总结</h1>
<p>我们了解了一些基本的数学工具，例如度量空间，完备度量空间，柯西序列，压缩映射和巴拿赫不动点定理。 基于这些数学工具，我们在数学上证明了用于求解 MDP 的贝尔曼最优方程的唯一性和最优性。</p>
<h1 id="转载自">转载自</h1>
<ul>
<li>[强化学习中无处不在的贝尔曼最优性方程，背后的数学原理知多少？ | 雷锋网](</li>
</ul>
]]></content>
      <tags>
        <tag>转载</tag>
        <tag>数学</tag>
        <tag>强化学习</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建一个免费博客</title>
    <url>/2018/07/27/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="我为什么需要一个博客">我为什么需要一个博客</h1>
<p>这个博客的诞生，源于我一直以来的一个想法。</p>
<p>在童年没有什么特殊要求的时候，我使用QQ空间记录日志。</p>
<p>上了大学以后，由于课程的要求，我开通了CSDN的账号撰写技术博客。</p>
<p>这两段经历告诉了我使用<strong>第三方博客工具存在的限制</strong>：</p>
<ol type="1">
<li>如Word一般混乱的<strong>排版</strong>规则（QQ空间）。QQ空间的文章可以选择纯文本编辑或者HTML，像我这样平凡的小朋友肯定是选择纯文本编辑的，字号、字体、颜色之类的格式用顶端提供的样式条来解决。最后发表出来的文章没有统一的层次结构，看起来混乱且没有美感，配合着QQ空间屎一样的皮肤，让人没有想读下去的欲望，同时显得很low。</li>
<li>无法消除的<strong>广告</strong>（QQ空间、CSDN）。使用第三方博客工具躲不掉地要做出些妥协。那些在文章两侧，虽不影响阅读但很影响心情的广告，就像顽固的牛皮藓一般死死贴在那里。</li>
<li>令人气恼的<strong>审核</strong>（CSDN）。如果我写了一篇文章，我肯定希望马上能显示在博客上供自己阅读。但是使用CSDN发表博客的时候，时不时的文章就会被拿去审核，无法立刻放出来，我就想问只是几篇技术博客，又不是反动的政治言论，有任何审核的必要吗？</li>
</ol>
<p>就是说，我在有自己的博客前，已经在用这些现成的产品记录文字了，但是时间一长，现成的产品暴露出这样那样的不方便的时候，我就开始憧憬一个<strong>只属于我自己的，几乎没有什么限制的博客</strong>。这是客观原因。</p>
<p>当然，还有一些更主观的原因。我曾经向我的好朋友诉苦，说自己在大学里并不快乐。两年的大学生活依然没能让我适应大学的教学风格，也许是自己曾经有过太好的高中老师，我对于一个老师的评价标准可以说到了苛刻的地步。同时，大学的种种也没有自己想象中的美好，没有那么多可以一起讨论学术的同学，总是打游戏的“室友”，只能称之为“PPT复读机”的大学教授，只会罗列术语的教材，很水的课程。我每天没有学到了新东西的快乐，只有深深的孤独。</p>
<p>所以，我需要按照自己的步调，自己的思维来学习，我需要一个整理的空间，一个交谈的对象。可能，会很困难，会付出很多很多的精力，很多很多的时间，可能会拖累学习的进度。但是，我受够了垃圾老师和垃圾教材，我想写一种，只给自己看的，不买弄术语，不用英文缩写装逼，不晦涩不难懂，真正为了学懂学明白的文章。我想证明，大学里有一些知识的门槛是被一些傻瓜人为提高的，难学只是因为讲授的人或书的表达能力捉急而已。于是，这个想法蹦进了我的脑袋里：开一个自己的播客吧。</p>
<p>嗯，首先，得有一个博客。</p>
<h1 id="选择建立博客的路线">选择建立博客的路线</h1>
<p>作为一个基本不会HTML，不会PHP，不会建站的小白，我在迈出第一步之前相当谨慎，尽量确保我明白自己在干什么，而不是跟着教程瞎做。我查找了很多不同的文章，看到了几种不同的搭建思路。我相信如果大家也去搜索的话，大致分为下面列出的两条路线。这里列出的东西没有必要都了解。</p>
<ul>
<li>动态博客路线。以WordPress、Ghost为代表。</li>
<li>静态博客路线。以Hexo、Jekyll为代表。更多见<a href="http://topspeedsnail.com/static-website-generators_or_tools/">11个最流行的静态(博客)网站生成工具</a>。</li>
</ul>
<p>当然，如果不想不明不白就拥有了一个博客的话，你需要知道我在说什么，也就是动态博客和静态博客的意思以及区别。</p>
<ul>
<li>动态博客需要服务器和数据库，静态博客不需要。</li>
<li>资源占用上，静态的相比动态占用服务器资源少，还可以托管在GitHub上。</li>
<li>发布更新操作上，由于静态博客没有管理后台，所以发布更新内容要比动态博客繁琐。</li>
<li>访问速度上，由于静态博客没有数据库，所以访问速度更快。</li>
<li>安全性上，静态博客相比动态博客免疫了很多Web攻击套路。</li>
</ul>
<p>包括一些没有列出来的原因，我最终选择了静态博客。最根本的原因嘛……对于我一个穷逼来说，免费才是第一吸引力啊！</p>
<p>我的最初方案：</p>
<ul>
<li>博客框架：Hexo。这是一个静态博客框架。至于博客框架是什么意思，读到怎么发布一篇博客的时候就能明白了。</li>
<li>托管平台：GitHub。<del>这是世界上最大的同性交友网站。</del>对于我们来说，只要理解成是博客网站保存的地方就可以了。</li>
</ul>
<p>这么选择的理由主要有这么几点：</p>
<ul>
<li>GitHub+Hexo的组合是比较流行的博客解决方案，在网上有丰富的资料可以参考。</li>
<li>博客属于内容导向型的网站，静态博客就可以很好的达到我的目的。</li>
<li>GitHub上搭建的博客保存可靠，空间足够。</li>
</ul>
<p>我暂时没有追求（不排除以后会有追求的可能）：</p>
<ul>
<li>自己的域名。目前来说，只要能访问得到我的博客就足够了。</li>
<li>个性化自己的博客。至少这篇博文的目标只是把博客搭起来，后续的优化会在其他文章里呈现。</li>
</ul>
<h1 id="开始搭建">开始搭建</h1>
<p>诚实的说，这里的搭建过程和网上大多数你可以搜得到的教程大同小异。</p>
<h2 id="环境的准备">环境的准备</h2>
<p>环境，就好像一间可以满足你的办公需求的办公室。所以搭建博客的第一步，就是搭建好所谓的环境。我的操作系统是Windows 10，以下的环境搭建全部都是在Windows 10中完成。</p>
<h3 id="安装node.js">安装Node.js</h3>
<blockquote>
<p>Node.js 是一个 JavaScript 运行环境。</p>
<p>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>
<p>——<a href="http://nodejs.cn/">Node.js中文网</a></p>
</blockquote>
<p>为什么需要Node.js呢？因为Hexo需要通过Node.js的包管理器npm下载，Hexo的运行也需要Node.js的支持。最好下载LTS版本，也就是长期支持版。<a href="https://nodejs.org/zh-cn/">前往官网下载Node.js</a></p>
<p>安装过程很简单，一路默认就行了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%281%29.png" alt="Node.js安装过程 (1).png" /><figcaption aria-hidden="true">Node.js安装过程 (1).png</figcaption>
</figure>
<p>👆点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%282%29.png" alt="Node.js安装过程 (2).png" /><figcaption aria-hidden="true">Node.js安装过程 (2).png</figcaption>
</figure>
<p>👆勾选I accept the terms in the License Agreement，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%283%29.png" alt="Node.js安装过程 (3).png" /><figcaption aria-hidden="true">Node.js安装过程 (3).png</figcaption>
</figure>
<p>👆选择安装路径，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%284%29.png" alt="Node.js安装过程 (4).png" /><figcaption aria-hidden="true">Node.js安装过程 (4).png</figcaption>
</figure>
<p>👆选择安装组件，Node.js runtime和npm package manager一定要装，Add to PATH也选了，不然接下来在命令行输入指令会没反应，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%285%29.png" alt="Node.js安装过程 (5).png" /><figcaption aria-hidden="true">Node.js安装过程 (5).png</figcaption>
</figure>
<p>👆点击Install安装。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Node.js%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%286%29.png" alt="Node.js安装过程 (6).png" /><figcaption aria-hidden="true">Node.js安装过程 (6).png</figcaption>
</figure>
<p>👆点击Finish完成安装。</p>
<h3 id="安装git">安装Git</h3>
<blockquote>
<p>Git is a free and open source distributed version control system designed to handle projects.</p>
<p>Git是一个免费开源的分布式版本管理系统，被用来管理项目。</p>
<p>——<a href="https://git-scm.com/">Git官网</a></p>
</blockquote>
<p>你可以把Git当成是拿着毛笔记录历史的史官，你在他的注视下做的一切改动都会被忠实地记录下来，并且厉害的是，这个史官可以恢复你所做的改动。</p>
<p>不明白版本管理系统是什么也没关系，安装它是因为把博客发布到GitHub上需要通过Git的命令来完成。当然Git本身是个很值得花点时间掌握的工具，网上有数不清的教程，这里就不赘述了。</p>
<p>安装步骤比较多，但是很简单，如果看不明白选项是什么意思就按照默认设置，不影响接下来的使用。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%281%29.png" alt="Git安装过程 (1).png" /><figcaption aria-hidden="true">Git安装过程 (1).png</figcaption>
</figure>
<p>👆点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%282%29.png" alt="Git安装过程 (2).png" /><figcaption aria-hidden="true">Git安装过程 (2).png</figcaption>
</figure>
<p>👆选择安装路径，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%283%29.png" alt="Git安装过程 (3).png" /><figcaption aria-hidden="true">Git安装过程 (3).png</figcaption>
</figure>
<p>👆选择安装组件，按照图示勾选即可，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%284%29.png" alt="Git安装过程 (4).png" /><figcaption aria-hidden="true">Git安装过程 (4).png</figcaption>
</figure>
<p>👆创建开始菜单，按照默认就行，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%285%29.png" alt="Git安装过程 (5).png" /><figcaption aria-hidden="true">Git安装过程 (5).png</figcaption>
</figure>
<p>👆选择默认编辑器，这个不影响，之后也是可以用自己喜欢的编辑器的，可以直接点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%286%29.png" alt="Git安装过程 (6).png" /><figcaption aria-hidden="true">Git安装过程 (6).png</figcaption>
</figure>
<p>👆选择第二个可以通过添加环境变量的方式，在Windows的命令行中使用Git，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%287%29.png" alt="Git安装过程 (7).png" /><figcaption aria-hidden="true">Git安装过程 (7).png</figcaption>
</figure>
<p>👆选择HTTPS传输后端，我们用OpenSSL库，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%288%29.png" alt="Git安装过程 (8).png" /><figcaption aria-hidden="true">Git安装过程 (8).png</figcaption>
</figure>
<p>👆配置行结束转换。Windows平台和Unix/Linux平台的行结束符不一样，在Windows下选第一个，可以让Git在提交的时候自动换成Unix格式的结束符。点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%289%29.png" alt="Git安装过程 (9).png" /><figcaption aria-hidden="true">Git安装过程 (9).png</figcaption>
</figure>
<p>👆配置终端模拟器以与Git Bash一起使用，选择第一个比较方便，点击Next。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%2810%29.png" alt="Git安装过程 (10).png" /><figcaption aria-hidden="true">Git安装过程 (10).png</figcaption>
</figure>
<p>👆配置额外的选项，按照默认，点击Install进行安装。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%20%2810%29.png" alt="Git安装过程 (11).png" /><figcaption aria-hidden="true">Git安装过程 (11).png</figcaption>
</figure>
<p>👆安装完成，点击Finish结束安装。</p>
<h3 id="安装hexo">安装Hexo</h3>
<p>打开命令提示符或者Git Bash，输入下面的命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条命令会调用Node.js的包管理器npm安装Hexo。<code>-g</code>看帮助信息是全局安装的意思，hexo-cli是Hexo的命令行界面。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_Hexo%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.png" alt="Hexo安装过程.png" /><figcaption aria-hidden="true">Hexo安装过程.png</figcaption>
</figure>
<p>输入完命令后稍微等待一下，如果结果类似上面，有<code>+ hexo-cli</code>的字样，就说明安装成功了，npm给出的WARN信息可以忽略。</p>
<h3 id="创建本地博客目录">创建本地博客目录</h3>
<p>找一个自己喜欢的目录位置，我们先在本地创建Hexo的博客目录。比如说我在桌面上新建了一个叫blog的文件夹，进入这个文件夹下，右键打开Git Bash（当然你也可以用命令提示符，只是注意路径要改到这个目录）。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80Git%20Bash.png" alt="右键打开Git Bash.png" /><figcaption aria-hidden="true">右键打开Git Bash.png</figcaption>
</figure>
<p>输入下面的命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条命令在当前的目录下搭建Hexo的框架。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E5%88%9D%E5%A7%8B%E5%8C%96Hexo.png" alt="初始化Hexo.png" /><figcaption aria-hidden="true">初始化Hexo.png</figcaption>
</figure>
<p>如果最后出现了<code>INFO Start blogging with Hexo!</code>，证明初始化成功完成。</p>
<p>接着执行下面几行命令，先不用管什么意思，很快你就会明白的，我们先来看看成果。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate
hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>注意这些指令都要在刚才创建博客的目录下运行。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E7%94%9F%E6%88%90%E6%9C%AC%E5%9C%B0%E7%BD%91%E9%A1%B5.png" alt="生成本地网页.png" /><figcaption aria-hidden="true">生成本地网页.png</figcaption>
</figure>
<p>之后我们打开浏览器，输入网址<code>http://localhost:4000/</code>，就可以看到Hexo默认的博客网页了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E6%9C%AC%E5%9C%B0%E7%BD%91%E9%A1%B5.png" alt="本地网页.png" /><figcaption aria-hidden="true">本地网页.png</figcaption>
</figure>
<p>可以看到博客上有一篇自动生成的文章，告诉你怎么在这个博客上发文章，可以读一读。</p>
<p>至此，本地的配置基本上完成了。接下来是网络上的配置。</p>
<h3 id="配置github">配置GitHub</h3>
<p>还记得Git是什么吗？Git是一个<del>史官</del>版本管理工具，既可以在本地管理，也可以在提供服务的网站上管理，而GitHub就是一个那样的网站。</p>
<p>为什么需要GitHub呢？因为保存在自己电脑上的博客，是不能在其他电脑上访问的。为了让你的博客不管在哪台电脑上都能看到，我们需要把博客网站“放”到另一个网站上，“放”到一个有网的电脑都能访问的网站上，所以我们需要GitHub。</p>
<p>如果你没有GitHub账号，那么需要注册一个。<a href="https://github.com/">前往GitHub官网</a></p>
<p>注册完账号之后登录进去，点击右上角的➕，然后点击<code>New repository</code>，意思是新建仓库。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="新建仓库.png" /><figcaption aria-hidden="true">新建仓库.png</figcaption>
</figure>
<p>之后会弹出一个完善信息的页面，在<code>Repository name</code>框内填入<code>你的Owner名称.github.io</code>，比如我需要填的是<code>xfdj.github.io</code>，一定要按照格式来，这样GitHub才会把它当做一个网站来解析。之后直接点击<code>Create repository</code>就创建成功了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%20%282%29.png" alt="新建仓库 (2).png" /><figcaption aria-hidden="true">新建仓库 (2).png</figcaption>
</figure>
<h3 id="配置git">配置Git</h3>
<p>因为Git的发布到GitHub上时需要名称以及邮箱信息，所以当有了账号之后需要在本地配置一下Git，打开Git Bash，输入下面两行命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"你的Owner名称"</span>
<span class="token function">git</span> config --global user.email <span class="token string">"你注册时的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果没有什么输出的话就证明没问题了。</p>
<h3 id="配置hexo参数">配置Hexo参数</h3>
<p>为了让本地的Hexo目录与在GitHub上新建的仓库关联起来，我们需要配置一下Hexo。</p>
<p>现在需要进入到博客的目录下，找到名为<code>_config.yml</code>的文件，用默认或其它文本编辑器打开，以修改其中的参数信息。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E5%8D%9A%E5%AE%A2%E7%9B%AE%E5%BD%95.png" alt="博客目录.png" /><figcaption aria-hidden="true">博客目录.png</figcaption>
</figure>
<p>来说一下需要修改的内容。</p>
<p><strong>注意：修改时使用英文标点符号，冒号后面一定要有一个空格，不填的内容直接空着就好。</strong></p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Site</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> xfdj的博客
<span class="token key atrule">subtitle</span><span class="token punctuation">:</span>
<span class="token key atrule">description</span><span class="token punctuation">:</span>
<span class="token key atrule">keyword</span><span class="token punctuation">:</span>
<span class="token key atrule">author</span><span class="token punctuation">:</span> xfdj
<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN
<span class="token key atrule">timezone</span><span class="token punctuation">:</span> Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>首先是网站的信息，上面放出的是我的博客的信息，从上到下依次填的是：</p>
<ul>
<li>title 网站标题，会显示在浏览器的标签上。</li>
<li>subtitle 副标题，可以不填</li>
<li>description 网站描述，可以不填</li>
<li>keyword 网站关键词，一般和description用于SEO（搜索引擎优化），可以不填</li>
<li>author 你的名字</li>
<li>language 网站使用的语言，一般填zh-CN。</li>
<li>timezone 网站时区，默认是电脑时间</li>
</ul>
<p>language和timezone都是有输入规范的，详细可参考<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">语言规范</a>和<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区规范</a>。</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># URL</span>
<span class="token comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span>
<span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xfdj.github.io
<span class="token key atrule">root</span><span class="token punctuation">:</span> /
<span class="token key atrule">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">:</span>year/<span class="token punctuation">:</span>month/<span class="token punctuation">:</span>day/<span class="token punctuation">:</span>title/
permalink_defaults<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>接着配置url部分，把url后面的网址改成你的博客网址，就是你在新建仓库时填写的<code>你的Owner名称.github.io</code>，其它的保持默认就好。（这一部分是可选的，不配置不会有影响，最新的建议是用<code>#</code>注释掉url和root行，这样在同时部署到多个网站时会减少困惑的发生）</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span>
<span class="token comment">## Docs: https://hexo.io/docs/deployment.html</span>
<span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/xfdj/xfdj.github.io.git
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最后是最关键的部署部分的配置，你需要在type后填写git，然后再加2项：repo和branch，在repo处填写一串地址，你可以进入刚刚创建的仓库，在下图所示的地方找到地址，点击右侧的按钮即可复制下来，粘贴到repo处。branch后面填写master，先不必理解这是什么意思。注意repo和branch要缩进，和type对齐。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AErepo.png" alt="部署配置repo.png" /><figcaption aria-hidden="true">部署配置repo.png</figcaption>
</figure>
<p>配置完之后记得保存。</p>
<h2 id="撰写博文">撰写博文</h2>
<p>如果你阅读了Hexo默认的第一篇文章，就知道如何撰写并发表博文了。</p>
<h3 id="新建文章">新建文章</h3>
<p>在博客目录下（注意，不是在别的目录下）打开Git Bash或者命令提示符，执行下列命令创建一篇新文章。标题要用英文双引号括起来。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"你的文章标题"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>比如我新建了一个名为test的文章，如果出现了下图所示的类似输出，就说明文章已经新建成功了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0.png" alt="新建文章.png" /><figcaption aria-hidden="true">新建文章.png</figcaption>
</figure>
<p>然后就可以到INFO给出的路径下打开这个名为test.md的文件写文章了。</p>
<h3 id="编辑文章">编辑文章</h3>
<p>写文章的格式是Markdown，这是一种非常简单好学的轻量级的标记语言，网上有大量的教程，不需要多长时间就能使用，这里就不介绍了。</p>
<p>下图是示范性在test.md文件里写了一句话。1至5行是自动生成的，之后的文章中会介绍如何编辑这一部分，目前直接忽略就行了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E7%BC%96%E8%BE%91%E6%96%87%E7%AB%A0.png" alt="编辑文章.png" /><figcaption aria-hidden="true">编辑文章.png</figcaption>
</figure>
<h3 id="预览并发表文章">预览并发表文章</h3>
<p>文章写好之后，我们依然可以用之前用过的三条命令来预览和发表文章。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>之前没有解释，这条指令的意思是生成静态页面至public目录，保存了文章之后要执行这条命令Hexo才会把Markdown文本转换成网页，最后推送到GitHub上的只有public目录中的网页内容。在这条命令之前你可以先执行<code>hexo clean</code>命令来清除缓存和原有的public目录。当然一般情况下也可以不执行。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>你依然可以通过这条命令在本地预览博客的样子，像之前一样在浏览器打开<code>http://localhost:4000/</code>即可。这不是必须的，你也可以跳过。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>最后一步，发布到GitHub上，只需要输入这一句，你很可能会看到这个结果。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_deploy%E5%87%BA%E9%94%99%E4%BF%A1%E6%81%AF.png" alt="deploy出错信息.png" /><figcaption aria-hidden="true">deploy出错信息.png</figcaption>
</figure>
<p>这是因为没有安装Git的部署插件，我们需要输入另外一条命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这条命令会在Hexo上安装Git的部署插件，<code>--save</code>表示将安装包信息加入到dependencies（生产阶段的依赖），有什么用我也不太懂，不过大家的教程都把这个参数加上了。</p>
<p>补：<code>--save</code>和<code>-g</code>的区别是前者只是把包安装在该文件夹下，并写入<code>package.json</code>，后者是安装在全局，并且会加入环境变量，所有文件夹下都可以使用。<code>package.json</code>的作用可以参考之后的文章<a href="https://xfdj.github.io/2018/08/21/%E5%B0%86%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/">将博客迁移到另一台电脑</a>。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2018_07_27_%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2_%E5%AE%89%E8%A3%85Git%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6.png" alt="安装Git部署插件.png" /><figcaption aria-hidden="true">安装Git部署插件.png</figcaption>
</figure>
<p>同样的，出现了<code>+ hexo-deployer-git</code>的信息就表示安装成功。重新执行<code>hexo deploy</code>（最好是重新打开Git Bash窗口），在一堆乱七八糟的消息之后会弹出一个窗口，输入你的GitHub用户名和密码，等待最后出现<code>INFO  Deploy done:</code>的信息之后，在浏览器打开<code>你的Owner名称.github.io</code>的网址，是不是能看到和本地预览一样的网页？如果是的话，恭喜你，你可以在任何一个有网的地方通过这个网址访问到你的博客了！</p>
<h3 id="命令总结">命令总结</h3>
<p>总结起来，博客发布只需要记住下面的几条指令（<code>#</code>后面是注释）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"name"</span>   <span class="token comment"># 新建文章</span>
hexo clean        <span class="token comment"># 清除缓存</span>
hexo generate     <span class="token comment"># 生成页面</span>
hexo server       <span class="token comment"># 本地预览</span>
hexo deploy       <span class="token comment"># 部署</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>至此，一个有基本功能的简陋博客已经搭建起来了，之后我会更新博客的优化以及博客迁移的内容。</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>Git</tag>
        <tag>Node.js</tag>
        <tag>npm</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>李宏毅机器学习笔记</title>
    <url>/2020/12/16/%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前言">前言</h1>
<p>李宏毅机器学习课程从2016年秋到2021年春有很多不同的版本，讲授的内容不完全一样。每个版本都有一些变化，增添一些学术上新的发展，删去一些比较旧的技术。下面想整理一下每个学期讲授知识点的差异。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Learning%20Map%202017%20Spring.png" alt="Learning Map 2017 Spring.png" /><figcaption aria-hidden="true">Learning Map 2017 Spring.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Learning%20Map%202020%20Spring.jpg" alt="Learning Map 2020 Spring.jpg" /><figcaption aria-hidden="true">Learning Map 2020 Spring.jpg</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Learning%20Map%202021%20Spring.png" alt="2020_12_16_李宏毅机器学习笔记_Learning Map 2021 Spring" /><figcaption aria-hidden="true">2020_12_16_李宏毅机器学习笔记_Learning Map 2021 Spring</figcaption>
</figure>
<table>
<thead>
<tr class="header">
<th>知识点</th>
<th>ML2019春</th>
<th>ML2020春</th>
<th>ML2021春</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>深度学习</td>
<td>√</td>
<td></td>
<td>√</td>
</tr>
<tr class="even">
<td>回归</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="odd">
<td>分类</td>
<td></td>
<td>√</td>
<td>√</td>
</tr>
<tr class="even">
<td>CNN</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="odd">
<td>自注意力</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr class="even">
<td>RNN</td>
<td>√</td>
<td>√</td>
<td></td>
</tr>
<tr class="odd">
<td>集成学习</td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr class="even">
<td>Transformer</td>
<td>√</td>
<td></td>
<td>√</td>
</tr>
<tr class="odd">
<td>可解释性AI</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="even">
<td>对抗恶意攻击</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="odd">
<td>网络压缩</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="even">
<td>Seq2Seq</td>
<td>√</td>
<td>√</td>
<td></td>
</tr>
<tr class="odd">
<td>无监督学习</td>
<td>√</td>
<td>√</td>
<td></td>
</tr>
<tr class="even">
<td>异常检测</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="odd">
<td>GAN</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="even">
<td>自监督学习</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr class="odd">
<td>域适应</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr class="even">
<td>半监督学习</td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr class="odd">
<td>迁移学习</td>
<td>√</td>
<td>√</td>
<td></td>
</tr>
<tr class="even">
<td>终身学习</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="odd">
<td>强化学习</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr class="even">
<td>量子机器学习</td>
<td></td>
<td></td>
<td>√</td>
</tr>
<tr class="odd">
<td>元学习</td>
<td>√</td>
<td></td>
<td>√</td>
</tr>
</tbody>
</table>
<h1 id="课程简介">课程简介</h1>
<h2 id="什么是机器学习">什么是机器学习？</h2>
<p>机器学习就是自动找函数。</p>
<p>对于语音识别，机器学习要找的函数的输入是一段音频，输出是音频对应的文本。</p>
<p>对于图片识别，要找的函数的输入是一张图片，输出是这张图片上的对象的名称。</p>
<p>对于下围棋，要找的函数的输入是目前的棋盘的状态，输出是下一个棋子的位置。</p>
<p>对于语音助手，要找的函数的输入是用户输入的文本，输出是语音助手回答的文本。</p>
<p>明白了机器学习是在找函数之后，下一个要问的问题是：</p>
<h2 id="你想找什么样的函数">你想找什么样的函数？</h2>
<p>要弄明白你想找什么样的函数，本质上就是需要明确函数的输入是什么、输出是什么。</p>
<p>一般来说，根据你想找的函数的类别，机器学习大概可以分成几大类：</p>
<ul>
<li>回归：输出是连续的</li>
<li>分类：输出是离散的
<ul>
<li>二分类</li>
<li>多分类</li>
</ul></li>
<li>生成：产生有结构的复杂的东西。比如翻译、画图。</li>
</ul>
<p>当你弄清楚了你想找什么样的函数之后，接下来要面对的问题就是：</p>
<h2 id="怎么告诉机器你想找什么样的函数">怎么告诉机器你想找什么样的函数？</h2>
<p>根据告诉机器的方式的不同，机器学习可以大概分为几大类：</p>
<ul>
<li>监督学习：给机器训练资料，这些训练资料是指带标签的数据。有了这些训练资料，机器就可以评估一个函数的好坏，方式是使用损失函数Loss来表示函数有多不好。Loss越小越好。有了评估一个函数好坏的方式之后，机器就可以自动找出Loss最低的函数。</li>
<li>无监督学习：给机器训练数据，但是这些数据不带标签。</li>
<li>强化学习：给机器一个环境，让机器在环境里执行一些动作，环境会反馈给机器一些奖励信息，这样机器可以找到如何获取最多的奖励。</li>
</ul>
<p>在你告诉了机器你想找什么样的函数之后，下一个问题就是：</p>
<h2 id="机器怎么找出你想要的函数">机器怎么找出你想要的函数？</h2>
<p>机器找函数的步骤可以概括为以下两步：</p>
<ol type="1">
<li>给定函数的寻找范围，比如说函数的结构是线性结构还是网络结构。</li>
<li>机器在给定范围内寻找好的函数，函数寻找的方法是梯度下降。</li>
</ol>
<h2 id="前沿研究">前沿研究</h2>
<ul>
<li><p>可解释性的AI：指的是AI不仅能告诉你它的选择，还能告诉你它这么选择的理由。</p></li>
<li><p>对抗攻击（Adversarial Attack）：如果怀着恶意攻击AI系统会发生什么？对抗攻击通过制造刻意的数据（人类无法分辨这些数据的区别）来使AI得出一个错误的结果。</p></li>
<li><p>网络压缩：把规模很大的网络缩小（减少参数）。</p></li>
<li><p>异常检测：如果看到不知道怎么判断的东西，机器怎么能知道自己不知道呢？（机器如何发现自己的无知）</p></li>
<li><p>迁移学习：当训练集和测试集有不同的分布时，怎么让机器学到一些东西。</p></li>
<li><p>元学习（Meta Learning）：现有的学习算法是人类设计的，这些算法都不太聪明，需要机器进行大量的训练（勤奋不懈却天资不佳），能不能让机器更聪明一点？元学习尝试让机器学习如何学习，让机器自己发明学习算法。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E5%85%83%E5%AD%A6%E4%B9%A0.png" alt="元学习.png" /><figcaption aria-hidden="true">元学习.png</figcaption>
</figure></li>
<li><p>终身学习：让机器持续学习，增量学习，永远不停止学习，期望机器能够越来越强。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E7%BB%88%E8%BA%AB%E5%AD%A6%E4%B9%A0.png" alt="终身学习.png" /><figcaption aria-hidden="true">终身学习.png</figcaption>
</figure></li>
</ul>
<h1 id="回归">回归</h1>
<h2 id="回归可以做什么">回归可以做什么？</h2>
<ul>
<li>股票预测系统：输入之前的股票信息，输出明天的股票价格。</li>
<li>自动驾驶：输入路面信息，输出方向盘的角度。</li>
<li>推荐系统：输入顾客和商品的信息，输出购买的可能性。</li>
</ul>
<h2 id="预测宝可梦进化后的cp值">预测宝可梦进化后的CP值</h2>
<p>输入是宝可梦的各种数据（比如当前CP值、HP值、体重、身高），输出进化后的CP值。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E5%AE%9D%E5%8F%AF%E6%A2%A6.png" alt="宝可梦.png" /><figcaption aria-hidden="true">宝可梦.png</figcaption>
</figure>
<h3 id="怎么解这个问题">怎么解这个问题？</h3>
<ol type="1">
<li><p>找一个模型（函数的集合）：模型中有一堆结构相同的函数，它们只有参数的取值的区别。</p>
<p>这里假设找的模型是线性模型： <span class="math display">\[
y = b + w \cdot x_{CP}
\]</span> <span class="math inline">\(b\)</span>和<span class="math inline">\(w\)</span>是参数，可以取任何的值。</p>
<p>线性模型的一般形式是： <span class="math display">\[
y = b + \sum w_i x_i
\]</span></p></li>
<li><p>定义函数的好坏：收集很多样本，用上标表示样本的编号，用下标表示特征的编号。</p>
<p>比如说： <span class="math display">\[
\begin{matrix}
(x^1, \hat y^1) \\
(x^2, \hat y^2) \\
\vdots \\
(x^{10}, \hat y^{10})
\end{matrix}
\]</span> 定义损失函数L：输入是一个函数，输出是一个数值，表示这个函数有多不好。 <span class="math display">\[
\begin{eqnarray}
L(f) &amp; = &amp; L(w, b) \\
 &amp; = &amp; \sum^{10}_{n=1}\left(\hat y^n - \left(b + w \cdot x^n_{CP}\right)\right)^2
\end{eqnarray}
\]</span></p></li>
<li><p>挑选最好的函数：找一个函数使得它的损失函数最小。 <span class="math display">\[
\begin{eqnarray}
f^* &amp; = &amp; \arg \min_f L(f) \\
w^*, b^* &amp; = &amp; \arg \min_{w, b} L(w, b) \\
 &amp; = &amp; \arg \min_{w, b} \sum^{10}_{n=1}\left(\hat y^n - \left(b + w \cdot x^n_{CP}\right)\right)^2
\end{eqnarray}
\]</span> 梯度下降是怎么做的呢？</p>
<p>首先，随机选取一个初始的参数值<span class="math inline">\(w^0, b^0\)</span>。</p>
<p>在选取位置计算损失函数对参数的梯度。 <span class="math display">\[
\left.\frac{\partial L}{\partial w}\right|_{w=w^0, b=b^0}, \left.\frac{\partial L}{\partial b}\right|_{w=w^0, b=b^0} \\
\nabla L = \left[\begin{matrix}
\frac{\partial L}{\partial w} \\
\frac{\partial L}{\partial b}
\end{matrix}\right]_{gradient}
\]</span> 从梯度得知参数的更新方向。</p>
<p>要更新多少呢？更新步长取决于：1. 梯度 2. 学习率。 <span class="math display">\[
w^1 \leftarrow w^0 - \eta \left.\frac{\partial L}{\partial w}\right|_{w=w^0, b=b^0}, b^1 \leftarrow b^0 - \eta \left.\frac{\partial L}{\partial b}\right|_{w=w^0, b=b^0}
\]</span> 重复上述步骤，直到收敛到局部最小值。</p></li>
</ol>
<p>梯度下降得到的结果是看人品的，有可能只收敛到局部最小值，幸运的是，线性回归的损失函数是凸函数，没有局部最小值。</p>
<h3 id="结果如何呢">结果如何呢？</h3>
<p>用梯度下降求出结果之后，我们真正关心的是模型在新数据（测试集）下的误差。</p>
<p>一般来说，新数据下的误差比训练数据的误差要大。</p>
<h3 id="如何做得更好呢">如何做得更好呢？</h3>
<p>选择另外的模型，比如二次模型。 <span class="math display">\[
y = b + w_1 \cdot x_{CP} + w_2 \cdot (x_{CP})^2
\]</span> 或者三次、四次等其它模型。</p>
<p>试了5个模型（一次到五次）之后，发现在训练集上的误差越来越小，但是在测试集上的误差先变小再变大。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E6%A8%A1%E5%9E%8B%E9%80%89%E6%8B%A92.png" alt="模型选择2.png" /><figcaption aria-hidden="true">模型选择2.png</figcaption>
</figure>
<h3 id="过拟合">过拟合</h3>
<p>复杂的模型不一定在测试集上有好的结果，这被叫做<strong>过拟合</strong>。</p>
<p>所以要选择合适的模型。</p>
<p>为什么模型次数越高，在训练集上的误差就越小呢？因为高次模型的空间总是包含低次模型的空间。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E6%A8%A1%E5%9E%8B%E9%80%89%E6%8B%A91.png" alt="模型选择1.png" /><figcaption aria-hidden="true">模型选择1.png</figcaption>
</figure>
<p>有时候当数据量不够的时候是无法看出数据之间的规律的。当收集到足够多的数据的时候，可能可以发现一些隐藏的影响因素。对于宝可梦来说这个隐藏因素可能是物种。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E9%9A%90%E8%97%8F%E5%9B%A0%E7%B4%A0.png" alt="隐藏因素.png" /><figcaption aria-hidden="true">隐藏因素.png</figcaption>
</figure>
<p>当数据量足够多的时候，如果发现了一些隐藏的因素在影响，可以回过头重新设计模型。</p>
<p>为了匹配模型，还可以对样本的特征进行特征转换。特征转换有时候可以让模型保持简单（比如保持线性模型）。</p>
<p>如果重新设计了一个很复杂的模型，最后发现还是过拟合了，有没有别的办法来处理？正则化。</p>
<h3 id="正则化">正则化</h3>
<p>正则化就是重新设计损失函数，加入正则化项，这会导致机器倾向于选择更平滑的、参数更小的函数。 <span class="math display">\[
y = b + \sum w_i x_i \\
L = \sum_n \left(\hat y^n - \left(b + \sum w_i x_i\right)\right)^2 + \lambda \sum (w_i)^2
\]</span> 为什么参数更小的函数更平滑？因为参数越小对输入的波动越不敏感。</p>
<p>为什么我们喜欢平滑的函数？平滑的函数受到噪声的影响比较小。</p>
<p><span class="math inline">\(\lambda\)</span>也要取合适的值。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E6%AD%A3%E5%88%99%E5%8C%96.png" alt="正则化.png" /><figcaption aria-hidden="true">正则化.png</figcaption>
</figure>
<p>正则化项可能会使得训练结果变差，但是可能会使得测试结果变好。不过太平滑也不行。</p>
<p>多平滑合适呢？要调整<span class="math inline">\(\lambda\)</span>的值来找到合适的模型。</p>
<p>正则化项是不需要考虑偏移量（bias）的，因为偏移量不影响函数的平滑程度。</p>
<h1 id="基本概念">基本概念</h1>
<p>模型越复杂，在测试集上的表现不一定更好，意思是误差不一定越低。</p>
<p>那么误差都来自什么地方呢？偏差（bias）和方差（variance）。</p>
<p>为什么要了解误差都来自什么地方呢？因为如果你知道误差的来源，就可以挑选适当的方法来改进你的模型。</p>
<p>假设说我们要对宝可梦进化后的CP值做一个估测，也就是说我们要找一个估计量（estimator），一个函数，输入一个宝可梦，可以输出它的CP值，游戏里面实际使用的函数<span class="math inline">\(\hat f\)</span>的具体细节我们是不知道的。<span class="math inline">\(\hat f\)</span>表示理想模型，<span class="math inline">\(f^*\)</span>表示我们从训练数据中学习到的模型，<span class="math inline">\(f^*\)</span>是<span class="math inline">\(\hat f\)</span>的估计值。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Estimator.png" alt="Estimator.png" /><figcaption aria-hidden="true">Estimator.png</figcaption>
</figure>
<p>我们找到的<span class="math inline">\(f^*\)</span>一般是不等于<span class="math inline">\(\hat f\)</span>的，<span class="math inline">\(f^*\)</span>会和<span class="math inline">\(\hat f\)</span>有一段“距离”。这段距离可能来自于偏差，也有可能来自于方差。一个估计量的偏差和方差指的是什么呢？</p>
<p>先来看一个概率论里面的例子。考虑一个随机变量<span class="math inline">\(x\)</span>，<span class="math inline">\(x\)</span>的期望值是<span class="math inline">\(\mu\)</span>，方差是<span class="math inline">\(\sigma^2\)</span>。现在来估计<span class="math inline">\(x\)</span>的期望值<span class="math inline">\(\mu\)</span>，方法是采<span class="math inline">\(N\)</span>个样本<span class="math inline">\(x_1, x_2, \dots, x_N\)</span>，令<span class="math inline">\(\bar x\)</span>等于<span class="math inline">\(x_i\)</span>的均值</p>
<p><span class="math display">\[
\bar x=\frac{1}{N}\sum_{i=1}^N x_i
\]</span></p>
<p>容易发现<span class="math inline">\(\bar x \neq \mu\)</span>，但是<span class="math inline">\(\bar x\)</span>的期望值<span class="math inline">\(E[\bar x]\)</span>等于<span class="math inline">\(\mu\)</span>。 <span class="math display">\[
E[\bar x]=E\left[\frac{1}{N}\sum_{i=1}^N x_i\right]=\frac{1}{N}\sum_{i=1}^N E[x]=\mu
\]</span> 这时我们称<span class="math inline">\(\mu\)</span>的估计<span class="math inline">\(\bar x\)</span>是无偏的。</p>
<p>这个时候<span class="math inline">\(\bar x\)</span>的方差 <span class="math display">\[
Var[\bar x] = \frac{\sigma^2}{N}
\]</span> 当<span class="math inline">\(N\)</span>越大的时候<span class="math inline">\(\bar x\)</span>的方差越小。</p>
<p>如果要估计<span class="math inline">\(\sigma^2\)</span>怎么办呢？一样可以采取刚才的方式。 <span class="math display">\[
s^2=\frac 1 N \sum_{i=1}^{N}(x_i-\bar x)^2
\]</span> 这个时候<span class="math inline">\(s^2\)</span>是对<span class="math inline">\(\sigma^2\)</span>的估计，但是这个估计是一个有偏估计。因为<span class="math inline">\(s^2\)</span>的期望不等于<span class="math inline">\(\sigma^2\)</span>。 <span class="math display">\[
E[s^2]=\frac{N-1}{N}\sigma^2\neq\sigma^2
\]</span> 随着<span class="math inline">\(N\)</span>的增大，<span class="math inline">\(s^2\)</span>和<span class="math inline">\(\sigma^2\)</span>的差距会逐渐变小。</p>
<p>回到<span class="math inline">\(f^*\)</span>的问题中来。回归中的误差也来自于这两件事，偏差和方差。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E5%81%8F%E5%B7%AE%E5%92%8C%E6%96%B9%E5%B7%AE.png" alt="偏差和方差.png" /><figcaption aria-hidden="true">偏差和方差.png</figcaption>
</figure>
<p>虽然<span class="math inline">\(f^*\)</span>只有一个，但是也是隐含了偏差和方差在里面，这个偏差和方差是训练样本带来的。假设有很多组不同的训练样本，就可以训练出很多不同的<span class="math inline">\(f^*\)</span>。使用不同模型得到的<span class="math inline">\(f^*\)</span>会有一些不同。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Variance.png" alt="Variance.png" /><figcaption aria-hidden="true">Variance.png</figcaption>
</figure>
<p>我们先来看方差。对于比较简单的模型来说，方差会比较小，而对于复杂的模型来说，方差会比较大。</p>
<p>为什么比较复杂的模型散布得比较开呢？因为比较简单的模型不容易受到样本数据的影响。</p>
<p>当我们使用复杂的模型的时候，虽然每一次的方差会很大，但是所有模型的平均值会很接近最终的理想模型。</p>
<p>当模型越来越复杂的时候，偏差会减小，方差会增大。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Bias%20Vs.%20Variance.png" alt="Bias Vs. Variance.png" /><figcaption aria-hidden="true">Bias Vs. Variance.png</figcaption>
</figure>
<p>如果误差来自于方差的话，那么这种情况就是过拟合；如果误差来自于偏差的话，那么这种情况就是欠拟合。</p>
<p>如何处理偏差大的情况呢？</p>
<p>首先如何知道自己是偏差大的情况？如果你的模型没有办法很好地你和训练数据的话，你的偏差就很大，这种时候就是欠拟合。但是如果你的模型训练数据拟合得很好，但是测试数据误差很大，那么你很可能方差很大，这种时候就是过拟合。</p>
<p>当你知道自己的偏差很大的时候，你就需要重新设计你的模型，因为理想模型可能根本不在你的模型范围里面。可以做的事情包括：在输入中增加更多的特征，或者使用更复杂的模型。偏差很大的时候就没有必要去收集更多的数据了。</p>
<p>如何处理方差大的情况呢？</p>
<p>当你的模型方差很大的时候，其中一个办法就是增加你的数据。但是不见得现实。还有一种方法是自己制造假的数据，根据自己对问题的理解。正则化也是一种方法，但是有可能会使偏差变大，所以要调节正则化的权重，在平滑度和小偏差之间达到一种平衡。</p>
<p>在模型的选择过程中，经常需要在偏差和方差之间找一个平衡。有时候在你手上的测试集表现很好的模型，不一定在实际的测试集上表现很好，所以不要一味选择在你手上的测试集表现最好的模型。</p>
<p>正确的做法是交叉验证（Cross Validation）。把训练集再细分成训练集和验证集，在新的训练集上训练模型，然后在验证集上选择模型，选择在验证集表现最好的模型之后，用全部的训练集再训练最好的模型，然后在测试集上验证。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Cross%20Validation.png" alt="Cross Validation.png" /><figcaption aria-hidden="true">Cross Validation.png</figcaption>
</figure>
<p>如果担心分出来的验证集也有偏差怎么办？可以使用N折交叉验证（N-fold Cross Validation）。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_N-fold%20Cross%20Validation.png" alt="N-fold Cross Validation.png" /><figcaption aria-hidden="true">N-fold Cross Validation.png</figcaption>
</figure>
<h1 id="梯度下降">梯度下降</h1>
<p>来复习一下之前提到过的梯度下降。我们需要解决如下的优化问题。 <span class="math display">\[
\theta^*=\arg\min_\theta L(\theta)
\]</span> 损失函数<span class="math inline">\(L(\theta)\)</span>可以看作函数的函数，它的输入是一个函数，或者是可以代表函数的参数。它可以评价一个函数“有多坏”。我们需要找到使得<span class="math inline">\(L(\theta)\)</span>最小的参数<span class="math inline">\(\theta^*\)</span>。下面来回忆一下梯度下降是怎么做的。</p>
<p>假设<span class="math inline">\(\theta\)</span>包含两个分量<span class="math inline">\(\theta_1, \theta_2\)</span>。</p>
<p>首先随机初始化<span class="math inline">\(\theta\)</span>的值。 <span class="math display">\[
\theta^0=\begin{bmatrix}
\theta^0_1  \\
\theta^0_2
\end{bmatrix}
\]</span> 之后如下更新： <span class="math display">\[
\begin{bmatrix}
\theta^1_1 \\
\theta^1_2
\end{bmatrix}
=
\begin{bmatrix}
\theta^0_1 \\
\theta^0_2
\end{bmatrix}
- \eta
\begin{bmatrix}
\frac{\partial L(\theta^0)}{\partial \theta_1} \\
\frac{\partial L(\theta^0)}{\partial \theta_2}
\end{bmatrix}
\]</span></p>
<p><span class="math display">\[
\begin{bmatrix}
\theta^2_1 \\
\theta^2_2
\end{bmatrix}
=
\begin{bmatrix}
\theta^1_1 \\
\theta^1_2
\end{bmatrix}
- \eta
\begin{bmatrix}
\frac{\partial L(\theta^1)}{\partial \theta_1} \\
\frac{\partial L(\theta^1)}{\partial \theta_2}
\end{bmatrix}
\]</span></p>
<p>其中偏导数的部分可以写成 <span class="math display">\[
\nabla L(\theta)=\begin{bmatrix}
\frac{\partial L(\theta)}{\partial \theta_1} \\
\frac{\partial L(\theta)}{\partial \theta_2}
\end{bmatrix}
\]</span> 这样更新部分可以写成 <span class="math display">\[
\theta^{t+1} = \theta^t - \eta \nabla L(\theta^t)
\]</span> 可以把梯度方向理解成损失函数的等高线的法线方向。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Review-Gradient%20Descent.png" alt="Review-Gradient Descent.png" /><figcaption aria-hidden="true">Review-Gradient Descent.png</figcaption>
</figure>
<p>梯度下降有几个小提示。</p>
<ul>
<li><p>小心调整学习率<span class="math inline">\(\eta\)</span>。如果学习率太大，损失函数可能会越更新越大，如果学习率太小，损失函数可能会下降得很慢。只有刚刚好的学习率，才有可能得到一个好的结果。所以应该要把损失函数的变化图画出来，根据前几步的图像调整学习率，要确定损失函数能够稳定地下降。</p>
<p>有一些自动的办法可以帮我们调整学习率。最简单的一个想法是学习率会随着参数的更新越来越小。因为刚开始离最低点比较远，步子要迈得大一点，等到离最低点很近的时候，步子要迈小一点。</p>
<p>但是这样子还不够，还有一种想法是给每一个参数不同的学习率。这其中一个最简单最容易实现的叫做Adagrad。它的思想是将每一个参数的学习率除以该参数之前所有微分的均方根（RMS）。</p>
<p>假设一般的梯度下降是 <span class="math display">\[
\theta^{t+1}=\theta^t-\eta^t\frac{\partial L(\theta^t)}{\partial \theta^t}
\]</span> 这里假设<span class="math inline">\(\eta^t=\frac{\eta}{\sqrt{t+1}}\)</span></p>
<p>Adagard则是 <span class="math display">\[
\theta^{t+1}=\theta^t-\frac{\eta^t}{\sigma^t}\frac{\partial L(\theta^t)}{\partial \theta^t}
\]</span> 这里的<span class="math inline">\(\sigma^t\)</span>是<span class="math inline">\(\theta\)</span>之前微分的均方根。这个值对每一个参数都是不一样的。 <span class="math display">\[
\sigma^t=\sqrt{\frac{1}{t+1}\sum^t_{i=0}\left(\frac{\partial L(\theta^i)}{\partial \theta^i}\right)^2}
\]</span> 化简一下可以变成 <span class="math display">\[
\theta^{t+1}=\theta^t-\frac{\eta}{\sqrt{\sum^t_{i=1}\left(\frac{\partial L(\theta^i)}{\partial \theta^i}\right)^2}}\frac{\partial L(\theta^i)}{\partial \theta^i}
\]</span> 当然自适应地调整学习率有一系列的方法，如果没有什么需求，可以使用Adam。</p></li>
<li><p>最好的步长和一次微分成正比，和二次微分成反比。Adagrad神奇的地方在于它的步长正好正比于一次微分，反比于二次微分。分母的一坨东西想要代表的是二次微分。Adagrad想做的事情是在不直接计算出二次微分的情况下，能不能想办法估计一下二次微分的大小，并且Adagrad只需要一次微分的值。所以这个分母的值可以理解成一种“反差”的大小，如果二次微分比较小，那么在局部最低点附近的一次微分的值也比较小，那采样出来的几个一次微分的值求平方和开根号也比较小，反之亦然，所以分母从某种程度上代表了二次微分值的大小。</p></li>
<li><p>随机梯度下降。修改损失函数的表达，从 <span class="math display">\[
L=\sum_n\left(\hat y^n - \left( b+\sum w_i x^n_i\right)\right)^2
\]</span> 到随机取一个样本<span class="math inline">\(x^n\)</span> <span class="math display">\[
L^n=\left(\hat y^n - \left( b+\sum w_i x^n_i\right)\right)^2
\]</span> 从算所有训练数据的损失到只算一个训练数据的损失。</p>
<p>也就是从 <span class="math display">\[
\theta^{t+1} = \theta^t - \eta \nabla L(\theta^t)
\]</span> 到 <span class="math display">\[
\theta^{t+1} = \theta^t - \eta \nabla L^n(\theta^t)
\]</span> <img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Stochastic%20Gradient%20Descent.png" alt="Stochastic Gradient Descent.png" /></p>
<p>随机梯度下降好在哪里呢？原始的梯度下降走的方向很稳，但是走一步的计算量很大，而随机梯度下降虽然一步的方向不是很正确，但是计算速度快，走完一个批次之后的结果可能比原始的梯度下降要好。</p></li>
<li><p>特征缩放。主要思想是希望不同的特征，有相同的范围。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_Feature%20Scaling.png" alt="Feature Scaling.png" /><figcaption aria-hidden="true">Feature Scaling.png</figcaption>
</figure>
<p>为什么要这么做呢？感觉其实这和给每个参数不同的学习率有异曲同工之妙。</p>
<p>其中一种特征缩放的方式就是标准化。让所有特征的均值都是0，方差都是1。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_12_16_%E6%9D%8E%E5%AE%8F%E6%AF%85%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_%E6%A0%87%E5%87%86%E5%8C%96.png" alt="标准化.png" /><figcaption aria-hidden="true">标准化.png</figcaption>
</figure></li>
</ul>
<p>梯度下降有效的根本原因是因为泰勒展开。所以理论上，根据泰勒展开，可以把损失函数用二次微分近似，但是这样产生的运算（Hessian matrix等等）是无法承受的。</p>
<p>多变量泰勒展开的近似 <span class="math display">\[
\begin{eqnarray}
h(x, y) &amp; = &amp; h(x_0, y_0)+\frac{\partial h(x_0, y_0)}{\partial x}(x-x_0)+\frac{\partial h(x_0, y_0)}{\partial y}(y-y_0) + ...\\
&amp; \approx &amp; h(x_0, y_0)+\frac{\partial h(x_0, y_0)}{\partial x}(x-x_0)+\frac{\partial h(x_0, y_0)}{\partial y}(y-y_0)
\end{eqnarray}
\]</span> 梯度下降的一个弊端是它可能会卡在局部最优解或者鞍点等微分是0的地方，也有可能会在一个类似高原的地方更新缓慢。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.bilibili.com/video/av94519857">李宏毅2020机器学习深度学习(完整版)国语_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
<li><a href="http://speech.ee.ntu.edu.tw/~tlkagk/courses_ML20.html">Hung-yi Lee</a></li>
</ul>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Git命令备忘</title>
    <url>/2020/10/08/Git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98/</url>
    <content><![CDATA[<h1 id="设置与配置">设置与配置</h1>
<h2 id="git-config">git config</h2>
<ul>
<li><p>配置文件存放的三个目录：</p>
<ul>
<li><code>/etc/gitconfig</code>：包含系统中所有用户及其仓库的值。可以通过<code>git config --system</code>从该文件中读写配置变量。</li>
<li><code>~/.gitconfig</code>或<code>~/.config/git/config</code>：当前用户的配置文件。可以通过<code>git config --global</code>从该文件中读写配置变量。</li>
<li><code>.git/config</code>：当前仓库的Git目录中的配置文件，针对单个文件。</li>
</ul>
<p>每一级都会覆盖上一级的配置。</p></li>
<li><p><code>git config --global</code>：用户配置。</p>
<ul>
<li><code>user</code>
<ul>
<li><code>.name &lt;username&gt;</code>：设置用户名。</li>
<li><code>.email &lt;email&gt;</code>：设置用户的电子邮件地址。</li>
</ul></li>
<li><code>core</code>
<ul>
<li><code>.editor &lt;editor_path&gt;</code>：设置用户默认的文本编辑器。比如<code>git config --global core.editor nvim</code>。</li>
<li><code>.pager</code>：设置Git在进行分页输出的时候（比如<code>log</code>和<code>diff</code>命令）选用的分页程序，默认是<code>less</code>。</li>
<li><code>.excludesfile &lt;file&gt;</code>：将某个文件作为全局的<code>.gitignore</code>文件。</li>
<li><code>.autocrlf true/input/false</code>：设置行终止符的处理方式。</li>
<li><code>.whitespace blank-at-eol,blank-at-eof,blank-before-tab,indent-with-non-tab,tab-in-indent,cr-at-eol</code>：检测、修正与空白字符相关的问题。</li>
<li><code>quotepath false</code>：可以解决<code>git status</code>不能显示中文的问题。</li>
</ul></li>
<li><code>alias.&lt;abbreviation&gt; &lt;full_command&gt;</code>：设置某个Git命令的别名。比如<code>git config --global alias.st status'</code>，这样就可以用<code>git st</code>来代替<code>git status</code>了。再比如<code>git config --global alias.unstage 'reset HEAD --'</code>，这样<code>git unstage &lt;file&gt;</code>就和<code>git reset HEAD --&lt;file&gt;</code>等价了。可以通过<code>!</code>执行外部命令，比如<code>git config --global alias.visual '!gitk'</code>就可以让<code>git visual</code>实际上执行外部命令了。</li>
<li><code>pull.rebase true</code>：使用<code>git pull</code>时希望将<code>--rebase</code>设置为默认的值。</li>
<li><code>credential.helper</code>：更改凭据存储的方式，可以让HTTP协议的连接不用每次输入用户名和密码。
<ul>
<li><code>"cache --timeout &lt;seconds&gt;"</code>：cache模式会将凭据保存在内存中一段时间，不会将密码保存在磁盘上，指定时间之后从缓存中清除。</li>
<li><code>"store --file &lt;path&gt;"</code>：store模式将凭据保存在磁盘上的纯文本文件中，且永不过期。这意味着除非你修改了Git主机的密码，否则你永远都不需要重新输入自己的凭据。这种方法的缺点在于密码以明文的形式存储在指定目录中（默认是在~/.git-credentials下）。</li>
</ul></li>
<li><code>commit</code>
<ul>
<li><code>.template &lt;file&gt;</code>：将某个文件的内容作为<code>git commit</code>时出现在编辑器中的默认消息。</li>
<li><code>.verbose &lt;int&gt;</code>：运行<code>git commit</code>的时候默认加<code>-v</code>的个数，比如2为<code>-vv</code>。</li>
</ul></li>
<li><code>color.ui auto/always/false</code>：设置彩色输出。可以对每个输出部分进行更加详细的设置，具体设置方法请查阅相关文档。</li>
<li><code>diff</code>
<ul>
<li><code>.word.textconv doc2txt</code>：配置docx文件的差异比较。涉及到如何告诉Git对待二进制文件的方式（<code>.gitattributes</code>），详细配置方式请查阅相关文档。</li>
<li><code>.external &lt;tool&gt;</code>：告知Git在进行差异比较时使用什么命令。</li>
</ul></li>
<li><code>merge.tool &lt;tool&gt;</code>：告知Git使用哪一种合并工具。</li>
<li><code>mergetool</code>
<ul>
<li><code>.&lt;tool&gt;.cmd</code>：指定合并工具的执行方式。</li>
<li><code>.&lt;tool&gt;.trustExitCode true/false</code>：告知Git该程序的返回码是否表示合并成功。</li>
</ul></li>
<li><code>grep</code>
<ul>
<li><code>.lineNumber</code>：设为true可在结果前默认加上行号。等价于<code>git grep -n</code>。</li>
<li><code>.column</code>：设为true可显示每行第一个匹配的列号。等价于<code>git grep --column</code>。</li>
</ul></li>
</ul></li>
<li><p><code>git config --list</code>：列出当前Git可以找到的所有设置。某些设置会列出多次，是因为Git从不同文件中读取相同的设置，Git会使用最后一个设置的值。</p></li>
<li><p><code>git config &lt;keyname&gt;</code>：查看Git当前某个键的值。比如<code>git config user.name</code>。</p></li>
<li><p><code>git help config</code>：列出所有可用选项。</p></li>
<li><p><code>git config --unset [--global/--system] &lt;keyname&gt;</code>：重置某个键为默认值。</p></li>
</ul>
<h2 id="git-help">git help</h2>
<p>显示Git自带的所有命令文档。对于每条命令的完整可用选项，可以执行<code>git help &lt;command&gt;</code>来查看。</p>
<p>下面的几条命令是等价的。</p>
<ul>
<li><code>git help &lt;command&gt;</code></li>
<li><code>git &lt;command&gt; --help</code></li>
<li><code>man git-&lt;command&gt;</code></li>
</ul>
<h1 id="获取与创建项目">获取与创建项目</h1>
<h2 id="git-init">git init</h2>
<p>将一个目录变成新的Git仓库并对其进行版本控制。Git会创建.git目录。结构如下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">HEAD <span class="token comment"># 指向当前已检出的分支</span>
config
description
index <span class="token comment"># 保存暂存区信息</span>
hooks/
info/
objects/ <span class="token comment"># 储存了个人数据库的所有内容</span>
refs/ <span class="token comment"># 储存指针</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><code>git init &lt;directory&gt;</code>：Git会在指定目录下创建Git仓库。</li>
</ul>
<h2 id="git-clone">git clone</h2>
<p>一句话：将远程的目录克隆到本地。</p>
<p>多条命令的包装器：创建一个新目录，进入该目录并执行<code>git init</code>来初始化一个新的空仓库，为指定的URL添加（<code>git remote add</code>）一个远程仓库（默认名是origin），对远程仓库执行<code>git fetch</code>，然后通过<code>git checkout</code>将最新的提交检出到工作目录。</p>
<ul>
<li><code>git clone &lt;URL&gt;</code>：克隆远程目录。比如<code>git clone https://github.com/libgit2/libgit2</code>，会在本地创建一个名为libgit2的目录，在其中初始化.git目录，然后将远程仓库中的所有数据拉取到本地并检出最新版本的可用副本。</li>
<li><code>git clone &lt;URL&gt; &lt;directory&gt;</code>：将远程目录克隆到指定目录。比如<code>git clone https://github.com/libgit2/libgit2 mylibgit</code>，和上一条命令的功能相同，只是目标目录的名称变成了mylibgit。</li>
<li><code>git clone &lt;file&gt;.bundle &lt;directory&gt;</code>：从用<code>git bundle</code>命令打包的bundle文件中克隆到指定目录。</li>
<li><code>git clone -o &lt;name&gt; &lt;URL&gt;</code>：默认远程分支从<code>origin/master</code>变为<code>&lt;name&gt;/master</code>。</li>
<li><code>git clone --recurse-submodules &lt;URL&gt;</code>：自动初始化并更新仓库中的每一个子模块，包括可能存在的嵌套子模块。</li>
</ul>
<h1 id="快照基础">快照基础</h1>
<h2 id="git-add">git add</h2>
<p>将工作目录中的内容添加到暂存区（或索引（index））。</p>
<ul>
<li><p><code>git add &lt;file&gt;</code>：可以让Git开始跟踪新的文件。如果执行<code>git status</code>，会看到</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">On branch master
Changes to be committed:
  <span class="token punctuation">(</span>use <span class="token string">"git restore --staged &lt;file>..."</span> to unstage<span class="token punctuation">)</span>
        new file:   <span class="token operator">&lt;</span>file<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在“Changes to be committed”（等待提交的更改）下列出的就是已暂存的文件。</p>
<p>如果提供的参数是目录，Git会递归添加该目录下的所有文件。</p></li>
<li><p><code>git add -i</code>：进入交互式模式。</p></li>
</ul>
<h2 id="git-status">git status</h2>
<p>显示出工作目录和暂存区中文件的不同状态，还会包含一些有关如何在暂存区之间移动文件的提示。</p>
<ul>
<li><p><code>git status -s</code>：显示更简洁的信息（短格式）。</p>
<p>在短格式中，每个路径的状态都会以下列形式之一显示</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">XY <span class="token environment constant">PATH</span>
XY ORIG_PATH -<span class="token operator">></span> <span class="token environment constant">PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>其中<code>ORIG_PATH</code>是重命名、复制内容的来源。<code>ORIG_PATH</code>只在条目被重命名或复制时才会显示。<code>XY</code>是一个两个字母的状态代码。</p>
<p>对于有合并冲突的路径，<code>X</code>和<code>Y</code>显示了合并后两边的修改状态。对于没有合并冲突的路径，<code>X</code>显示暂存区（索引）的状态，<code>Y</code>显示工作目录（工作树）的状态。对于未跟踪的路径，<code>XY</code>为<code>??</code>。其他状态码可以解释为：</p>
<ul>
<li><code>␣</code>：未修改。</li>
<li><code>M</code>：已修改。</li>
<li><code>A</code>：已添加。</li>
<li><code>D</code>：已删除。</li>
<li><code>R</code>：重命名。</li>
<li><code>C</code>：已复制。</li>
<li><code>U</code>：已更新但没合并。</li>
</ul>
<p>忽略的文件不会被列出，除非有<code>--ignored</code>选项，在这种情况下，<code>XY</code>是<code>!!</code>。</p>
<table>
<thead>
<tr class="header">
<th>X</th>
<th>Y</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>?</td>
<td>?</td>
<td>not updated</td>
</tr>
<tr class="even">
<td>!</td>
<td>!</td>
<td>ignored（仅在<code>--ignored</code>选项生效时显示）</td>
</tr>
<tr class="odd">
<td></td>
<td>[AMD]</td>
<td>not updated</td>
</tr>
<tr class="even">
<td>M</td>
<td>[␣MD]</td>
<td>updated in index</td>
</tr>
<tr class="odd">
<td>A</td>
<td>[␣MD]</td>
<td>added to index</td>
</tr>
<tr class="even">
<td>D</td>
<td></td>
<td>deleted from index</td>
</tr>
<tr class="odd">
<td>R</td>
<td>[␣MD]</td>
<td>renamed in index</td>
</tr>
<tr class="even">
<td>C</td>
<td>[␣MD]</td>
<td>copied in index</td>
</tr>
<tr class="odd">
<td>[MARC]</td>
<td></td>
<td>index and work tree matches</td>
</tr>
<tr class="even">
<td>[␣MARC]</td>
<td>M</td>
<td>work tree changed since index</td>
</tr>
<tr class="odd">
<td>[␣MARC]</td>
<td>D</td>
<td>deleted in work tree</td>
</tr>
<tr class="even">
<td>[␣D]</td>
<td>R</td>
<td>renamed in work tree</td>
</tr>
<tr class="odd">
<td>[␣D]</td>
<td>C</td>
<td>copied in work tree</td>
</tr>
<tr class="even">
<td>D</td>
<td>D</td>
<td>unmerged, both deleted</td>
</tr>
<tr class="odd">
<td>A</td>
<td>U</td>
<td>unmerged, added by us</td>
</tr>
<tr class="even">
<td>U</td>
<td>D</td>
<td>unmerged, deleted by them</td>
</tr>
<tr class="odd">
<td>U</td>
<td>A</td>
<td>unmerged, added by them</td>
</tr>
<tr class="even">
<td>D</td>
<td>U</td>
<td>unmerged, deleted by us</td>
</tr>
<tr class="odd">
<td>A</td>
<td>A</td>
<td>unmerged, both added</td>
</tr>
<tr class="even">
<td>U</td>
<td>U</td>
<td>unmerged, both modified</td>
</tr>
</tbody>
</table></li>
</ul>
<h2 id="git-diff">git diff</h2>
<p>可用于查看任意两棵树之间的差异。</p>
<ul>
<li><code>git diff</code>：工作环境和暂存区之间。</li>
<li><code>git diff --staged</code>：暂存区和最后一次提交之间。</li>
<li><code>git diff &lt;branch1&gt; &lt;branch2&gt;</code>：两次提交之间。</li>
<li><code>git diff --check</code>：检查空白字符问题。</li>
<li><code>git diff master...&lt;branch&gt;</code>：显示当前主题分支和master分支的共同祖先之后，该主题分支引入的内容。</li>
</ul>
<h2 id="git-difftool">git difftool</h2>
<p>运行外部工具展示两棵树之间的差异。</p>
<ul>
<li><code>git difftool --tool-help</code>：查看系统中可用的diff工具。</li>
</ul>
<h2 id="git-commit">git commit</h2>
<p>接受由<code>git add</code>暂存的所有文件内容，并在数据库中记录一份新的永久性快照，然后将当前分支指向它。</p>
<ul>
<li><code>git commit</code>：执行这条命令后会打开一个文本编辑器。在编辑器中输入提交信息，当退出编辑器时，Git会移除注释内容和差异比对，把剩下的提交信息记录到所创建的提交中。</li>
<li><code>git commit -v</code>：把这次提交的差异比对显示在文本编辑器中。</li>
<li><code>git commit -m "&lt;commit message&gt;"</code>：直接在命令行中输入提交信息。</li>
<li><code>git commit -a</code>：跳过<code>git add</code>，自动把已跟踪的所有文件添加到暂存区，然后提交。</li>
<li><code>git commit --amend</code>：提交暂存区的内容，如果上次提交之后没有做出任何改变，那么提交快照就不会有变化，但可以改动提交信息。如果提交后才意识到忘记添加某个之前改过的文件，也可以在<code>git add</code>之后执行这条指令，Git会修正前一条提交，而不是产生一个新的提交。</li>
</ul>
<h3 id="关于提交信息">关于提交信息</h3>
<p>养成创建高质量提交信息的习惯能够简化Git的使用以及协作。作为一条普适性规则，提交信息的第一行不应该超过50个字符，它应该准确地描述变更集，紧跟着是一个空行，然后是更详细的解释。Git项目要求在详细解释中还要包括做出变更的动机，以及与先前实现之间的对比。在消息中使用现在时态的祈使语气，比如不要用“I add tests for”或“Adding tests for”，而是要用“Add tests for”。下面是一个最初由Tim Pope编写的模板。</p>
<blockquote>
<p>简要的变更汇总信息（不超过50个字符）</p>
<p>如果有必要，请附上更详尽的说明。请将每行的长度限制在72个字符左右。在某些情况下，第一行会被作为主题，余下的作为正文。两者之间一定要使用空行分隔（除非你不打算要正文部分）。如果将两者写在一起，那么像rebase这样的工具就不知道该如何处理了。</p>
<p>在消息中使用现在时态的祈使语气，比如不要用“I add tests for”或“Adding tests for”，而是要用“Add tests for”。</p>
<p>将进一步的描述性信息写在空行之后的段落。</p>
<ul>
<li>可以使用这样的条目符号</li>
<li>通常选用连字符或星号作为条目符号，前面加上单个空格。条目之间可用空行分隔。</li>
<li>使用悬挂式缩进</li>
</ul>
</blockquote>
<h2 id="git-reset">git reset</h2>
<p>主要用于撤销动作，它能移动HEAD指针，更改暂存区，如果使用<code>--hard</code>，还可以更改工作目录。在后面的参数指定某个文件的时候，<code>git reset</code>命令不会移动HEAD指针和指向的分支指针。</p>
<ul>
<li><code>git reset [HEAD] &lt;file&gt;...</code>：把文件移出暂存区，准确地说是用仓库的文件覆盖暂存区的文件。在Git最新版本中已经被<code>git restore --staged &lt;file&gt;...</code>取代。</li>
<li><code>git reset &lt;commitID&gt; &lt;file&gt;</code>：用仓库指定提交的文件覆盖暂存区的文件。</li>
<li><code>git reset --soft &lt;commitID&gt;</code>：将HEAD指向的分支指针移动到指定提交。看起来就像仓库的分支回退了一样。</li>
<li><code>git reset --hard &lt;commitID&gt;</code>：将HEAD指向的分支指针移动到指定提交，并将暂存区和工作目录的文件用指定提交的仓库文件代替。</li>
</ul>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_10_08_Git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98_reset-soft.png" alt="2020_10_08_Git命令备忘_reset-soft.png" /><figcaption aria-hidden="true">2020_10_08_Git命令备忘_reset-soft.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_10_08_Git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98_reset-mixed.png" alt="2020_10_08_Git命令备忘_reset-mixed.png" /><figcaption aria-hidden="true">2020_10_08_Git命令备忘_reset-mixed.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_10_08_Git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98_reset-hard.png" alt="2020_10_08_Git命令备忘_reset-hard.png" /><figcaption aria-hidden="true">2020_10_08_Git命令备忘_reset-hard.png</figcaption>
</figure>
<h2 id="git-rm">git rm</h2>
<p>用于从Git的暂存区和工作目录中移除文件。与<code>git add</code>类似，它会暂存下一次提交的文件删除工作。</p>
<ul>
<li><code>git rm --cached &lt;file&gt;</code>：只删除暂存区中的文件，但保留工作目录中的文件。</li>
</ul>
<h2 id="git-mv">git mv</h2>
<p>可以移动文件或对文件重命名。相当于对旧文件执行<code>git rm</code>，对新文件执行<code>git add</code>。</p>
<ul>
<li><code>git mv &lt;file_from&gt; &lt;file_to&gt;</code></li>
</ul>
<h2 id="git-clean">git clean</h2>
<p>移除工作目录中不需要的文件。包括项目构建过程中产生的临时文件或是合并冲突文件。它会从工作目录中删除所有未跟踪过的文件。</p>
<ul>
<li><code>git clean</code>：清理工作目录。</li>
<li><code>git clean -d</code>：只清理未跟踪文件，对于未跟踪目录不会递归跟踪。</li>
<li><code>git clean -f</code>：强制执行。</li>
<li><code>git clean -n</code>：不实际删除，只做一次演习，列出如果执行了<code>git clean</code>都会删除什么。</li>
<li><code>git clean -x</code>：<code>git clean</code>命令默认只删除没有被忽略的未跟踪文件。任何与.gitignore或其他忽略文件中模式匹配的文件都不会被删除，如果连这些文件都想删除，可以加入<code>-x</code>选项。</li>
<li><code>git clean -i</code>：以交互模式运行。</li>
</ul>
<h1 id="分支与合并">分支与合并</h1>
<h2 id="git-branch">git branch</h2>
<p>类似一个分支管理工具。它可以列出你拥有的分支、创建新分支、删除分支以及重命名分支。</p>
<ul>
<li><code>git branch &lt;name&gt;</code>：创建一个新分支。并不会切换到新分支上。</li>
<li><code>git branch -d &lt;name&gt;</code>：删除一个分支。</li>
<li><code>git branch</code>：列出当前所有分支的简短列表。输出结果中<code>*</code>表示HEAD指向的分支。</li>
<li><code>git branch -v</code>：列出每个分支上的最新提交。</li>
<li><code>git branch --merged</code>：查看哪些分支已经并入当前分支。</li>
<li><code>git branch --no-merged</code>：查看哪些分支还有尚未合并的工作。</li>
<li><code>git branch -u &lt;remote_branch&gt;</code>：给本地已经存在的分支设置跟踪分支。</li>
<li><code>git branch -vv</code>：查看已经设置了哪些跟踪分支。该命令会输出所有本地分支的列表，还会列出每个分支跟踪的远程分支信息，以及本地分支是否领先于或落后于远程分支的信息。要注意的是，上述这些信息是从上次你从各个远程服务器读取数据后开始计算的。也就是说，<code>git branch -vv</code>并不会与服务器通信以获取最新信息，而只是提供给你本地缓存中的信息。如果需要最新的“领先和落后多少次提交”的信息，就需要在执行命令前，先从所有远程服务器中读取数据。这可以通过执行<code>git fetch --all; git branch -vv</code>完成。</li>
<li><code>git branch &lt;name&gt; &lt;commitID&gt;</code>：把分支放入历史中。</li>
<li><code>git branch -m &lt;old_name&gt; &lt;new_name&gt;</code>：重命名分支。</li>
<li><code>git branch -a</code>：同时列出远程跟踪分支和本地分支。</li>
</ul>
<h2 id="git-checkout">git checkout</h2>
<p>切换分支并将内容检出到工作目录中。</p>
<ul>
<li><code>git checkout &lt;branch&gt;</code>：改变HEAD指针，使其指向给定分支。并把工作目录的文件恢复到给定分支的状态，如果无法干净地完成恢复工作（意思是工作目录和暂存区存在着未提交的更改，并且这些更改与你要切换到的分支冲突），Git不会允许切换分支。</li>
<li><code>git checkout -b &lt;branch&gt;</code>：创建并切换到新分支上。相当于<code>git branch &lt;branch&gt; &amp;&amp; git checkout &lt;branch&gt;</code>。</li>
<li><code>git checkout --track &lt;remote&gt;/&lt;branch&gt;</code>：在本地传建一个远程分支的跟踪分支并切换到该分支。可以进一步简化为<code>git checkout &lt;branch&gt;</code>，只要有相同名称的远程分支，Git会自动创建跟踪分支。</li>
<li><code>git checkout -b &lt;branch_1&gt; &lt;remote&gt;/&lt;branch_2&gt;</code>：让本地新建的跟踪分支和远程分支的名称不一样。</li>
<li><code>git checkout -b &lt;branch&gt; &lt;tag&gt;</code>：在特定的标签上创建新的分支。</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: left;"></th>
<th style="text-align: left;">HEAD</th>
<th style="text-align: left;">暂存区</th>
<th style="text-align: left;">工作目录</th>
<th style="text-align: left;">工作目录是否安全</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">提交级别</td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>reset --soft &lt;commit&gt;</code></td>
<td style="text-align: left;">REF</td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">是</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>reset &lt;commit&gt;</code></td>
<td style="text-align: left;">REF</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">是</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>reset --hard &lt;commit&gt;</code></td>
<td style="text-align: left;">REF</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;"><strong>否</strong></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>checkout &lt;commit&gt;</code></td>
<td style="text-align: left;">HEAD</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">是</td>
</tr>
<tr class="even">
<td style="text-align: left;">文件级别</td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>reset &lt;commit&gt; &lt;file&gt;</code></td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">是</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>checkout &lt;commit&gt; &lt;file&gt;</code></td>
<td style="text-align: left;">否</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;">是</td>
<td style="text-align: left;"><strong>否</strong></td>
</tr>
</tbody>
</table>
<p>“HEAD” 一列中的 “REF” 表示该命令移动了 HEAD 指向的分支引用，而 “HEAD” 则表示只移动了 HEAD 自身。</p>
<h2 id="git-merge">git merge</h2>
<p>将一个或多个分支合并到已检出的分支，然后将合并结果设为当前分支。</p>
<ul>
<li><p><code>git merge &lt;branch&gt;</code>：将给定分支合并到当前分支。</p></li>
<li><p><code>git merge --squash &lt;branch&gt;</code>：接受给定分支上的所有工作，将其压缩成一个变更集，使仓库变成一个真正的合并发生状态，而不会真的生成一个合并提交，这意味着接下来执行<code>git commit</code>之后，未来的提交只有一个父提交。而且<code>--squash</code>还允许接着引入另一个分支的所有改动，也就是说在记录一个新提交前做更多的改动。</p>
<p><code>--squash</code>选项的含义是：使当前分支的文件内容与不使用该选项的合并结果相同，但是不提交、不移动<code>HEAD</code>，因此需要一条额外的<code>commit</code>命令。其效果相当于将其它分支上的多个<code>commit</code>合并成一个，放在当前分支上，原来的<code>commit</code>历史则没有拿过来。</p></li>
<li><p><code>git merge --abort</code>：尝试恢复到进行合并之前的状态。但当运行命令前，在工作目录中有未储藏、未提交的修改时它不能完美处理，除此之外它都工作得很好。</p></li>
<li><p><code>git merge --Xignore-all-space &lt;branch&gt;</code>：在比较两个合并分支时，完全忽略空白字符。</p></li>
<li><p><code>git merge --Xignore-space-change &lt;branch&gt;</code>：在比较两个合并分支时，将单个或多个空白字符序列视为等同。</p></li>
<li><p><code>git merge -Xours/-Xtheirs &lt;branch&gt;</code>：在出现冲突的时候总是选择一侧的分支，<code>ours</code>表示当前HEAD所在的分支，<code>theirs</code>表示命令中指定的分支。</p></li>
<li><p><code>git merge -s ours &lt;branch&gt;</code>：如果你想做这样的事情，但又不想让 Git 从把一边合并进来，还有一个更严厉的选项，那就是<code>-s ours</code>合并策略。这与<code>-Xours</code>递归合并选项不同。</p>
<p>这基本上会做一个假的合并，它将记录一个新的以两个分支为父分支的合并提交，但它甚至不会查看你要合并的分支。它将简单地记录您当前分支的确切代码作为合并结果。<code>-s theirs</code>同理。</p></li>
</ul>
<h2 id="git-mergetool">git mergetool</h2>
<p>如果你在Git中实施合并的时候遇到了麻烦，<code>git mergetool</code>命令可以启动一个外部合并工具。</p>
<h2 id="git-log">git log</h2>
<p>用来显示一个项目从最近的提交快照开始往后的历史记录。默认情况下，它只显示你当前所在分支的历史，但也可以给你不同甚至多个头或分支的历史记录。它也经常用于显示两个或多个分支在提交级别上的差异。</p>
<ul>
<li><p><code>git log</code>：默认不加参数的情况下，<code>git log</code>会按照时间顺序列出仓库中的所有提交。最新的提交在最前面。和每个提交一同列出的还有SHA-1校验和、作者的姓名和邮箱、提交日期、提交信息。</p></li>
<li><p><code>git log -p</code>：显示出每次提交所引入的差异。</p></li>
<li><p><code>git log -&lt;n&gt;</code>：显示最近的n次提交。</p></li>
<li><p><code>git log --stat</code>：查看每个提交的简要统计信息：改动的文件列表、共有多少文件被改动、文件里有多少新增行和删除行、总计信息。</p></li>
<li><p><code>git log --shortstat</code>：只显示上述<code>--stat</code>输出中包含“已更改/新增/删除”行的统计信息。</p></li>
<li><p><code>git log --pretty=</code>：更改日志输出的默认格式。</p>
<ul>
<li><p><code>oneline</code>：每一行显示一个提交。</p></li>
<li><p><code>short/full/fuller</code>：比默认输出减少或增加一点信息量。</p></li>
<li><p><code>format:"&lt;format&gt;"</code>：指定输出格式。</p>
<table>
<thead>
<tr class="header">
<th>格式选项</th>
<th>输出的格式描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>%H</td>
<td>提交对象的校验和</td>
</tr>
<tr class="even">
<td>%h</td>
<td>提交对象的简短校验和</td>
</tr>
<tr class="odd">
<td>%T</td>
<td>树对象的校验和</td>
</tr>
<tr class="even">
<td>%t</td>
<td>树对象的简短校验和</td>
</tr>
<tr class="odd">
<td>%P</td>
<td>父对象的校验和</td>
</tr>
<tr class="even">
<td>%p</td>
<td>父对象的简短校验和</td>
</tr>
<tr class="odd">
<td>%an</td>
<td>作者的名字</td>
</tr>
<tr class="even">
<td>%ae</td>
<td>作者的电子邮箱地址</td>
</tr>
<tr class="odd">
<td>%ad</td>
<td>创作日期（可使用<code>-date=</code>选项来指定日期格式）</td>
</tr>
<tr class="even">
<td>%ar</td>
<td>相对与当前日期的创作日期</td>
</tr>
<tr class="odd">
<td>%cn</td>
<td>提交者的名字</td>
</tr>
<tr class="even">
<td>%ce</td>
<td>提交者的电子邮箱地址</td>
</tr>
<tr class="odd">
<td>%cd</td>
<td>提交日期</td>
</tr>
<tr class="even">
<td>%cr</td>
<td>相对与当前日期的提交日期</td>
</tr>
<tr class="odd">
<td>%s</td>
<td>提交信息的主题</td>
</tr>
</tbody>
</table></li>
</ul></li>
<li><p><code>git log --graph</code>：用ASCII字符形式的简单图表来显示Git分支和合并历史。</p></li>
<li><p><code>git log --name-only</code>：在每个提交信息后显示被更改的文件列表。</p></li>
<li><p><code>git log --name-status</code>：在上一个选项输出基础上还显示出“已更改/新增/删除”统计信息。</p></li>
<li><p><code>git log --abbrev-commit</code>：只显示完整的SHA-1 40位校验和字符串中的前几个字符。</p></li>
<li><p><code>git log --relative-date</code>：显示相对日期（例如“两周前”），而不是完整日期。</p></li>
<li><p><code>git log --since=&lt;time&gt;</code>：显示给定时间内或开始的所有提交。也可以使用<code>--after</code>。</p>
<ul>
<li><code>2.weeks</code>：两周内的提交。</li>
<li><code>2008-01-15</code>：从这个日期开始的提交。</li>
<li><code>2.years.1.day.3.minutes.ago</code>：从两年一天三分钟之前开始的所有提交。</li>
</ul></li>
<li><p><code>git log --until=&lt;time&gt;</code>：显示到给定时间为止的提交。也可以使用<code>--before</code>。</p></li>
<li><p><code>git log --author=&lt;author&gt;</code>：查找某位作者的提交。</p></li>
<li><p><code>git log --commiter=&lt;commiter&gt;</code>：查找某位提交者的提交。</p></li>
<li><p><code>git log --grep=&lt;info&gt;</code>：搜索提交信息中的关键字。如果和<code>--author</code>一起使用要加上<code>--all-match</code>选项，否则Git会列出符合任何一个条件的提交。</p></li>
<li><p><code>git log -S &lt;string&gt;</code>：只输出那些添加或删除指定字符串的提交。如果需要更具体的内容，可以使用<code>-G</code>选项来进行正则表达式搜索。</p></li>
<li><p><code>git log &lt;path&gt;</code>：如果指定一个文件名或目录名，就可以只输出更改了指定文件的提交。这个选项总是在最后一个出现，通常需要在之前加<code>--</code>来将路径和其它选项分隔开。</p></li>
<li><p><code>git log --no-merges</code>：查看没有合并的提交。</p></li>
<li><p><code>git log --decorate</code>：查看各个分支当前所指向的对象。</p></li>
<li><p><code>git log &lt;branchA&gt;..&lt;branchB&gt;</code>：查看在后一个分支而不在前一个分支的提交。等价于<code>git log ^&lt;branchA&gt; &lt;branchB&gt;</code>或<code>git log --not &lt;branchA&gt; &lt;branchB&gt;</code>。</p></li>
<li><p><code>git log &lt;branchA&gt;...&lt;branchB&gt;</code>：查看仅包含在其中一个分支的所有提交。</p></li>
<li><p><code>git log --left-right</code>：显示提交属于哪一侧的分支。</p>
<ul>
<li><code>git log --left-right &lt;branchA&gt;...&lt;branchB&gt;</code>：与三点记号连用。</li>
<li><code>git log --left-right --merge</code>：只显示在合并的任意一侧接触了冲突文件的那些提交。</li>
</ul></li>
<li><p><code>git log -cc -p</code>：查看历史记录中的合并提交冲突。</p></li>
<li><p><code>git log -g</code>：看到类似于<code>git log</code>输出格式的reflog信息。</p></li>
<li><p><code>git log -L</code>：行历史搜索。可以展示代码库中某个函数或代码行的历史。给出一个行范围或某一行的行号也能得到相同的输出结果。</p>
<ul>
<li><code>git log -L :git_deflate_bound:zlib.c</code>：查看文件<code>zlib.c</code>中的函数<code>git_deflate_bound</code>的所有改动记录。</li>
<li><code>git log -L '/unsigned long git_deflate_bound/', /^&#125;/:zlib.c</code>：和上一条指令功能相同，如果Git无法匹配你采用的编程语言中的函数或方法，可以提供一个类似的正则表达式。</li>
</ul></li>
</ul>
<h2 id="git-stash">git stash</h2>
<p>临时存储未提交的工作，这样做为的是在无需提交未完成工作的情况下清理工作目录。储藏（stashing）能够获得工作目录的中间状态，也就是修改过的被跟踪的文件以及暂存的变更，并将该中间状态保存在一个包含未完成变更的缓冲，随后可以再次恢复这些状态。</p>
<ul>
<li><code>git stash</code>：将新的储藏内容推入栈中。<code>git stash save</code>作用相同。</li>
<li><code>git stash list</code>：查看存储在栈中的储藏。</li>
<li><code>git stash apply</code>：重新应用栈顶的储藏。如果重新应用较早的储藏，可以通过名称来指定。比如：<code>git stash apply stash@&#123;&lt;number&gt;&#125;</code>。需要注意的是，之前暂存过的文件却不会被再次暂存。</li>
<li><code>git stash apply --index</code>：重新应用暂存过的变更。这条命令不仅会重新应用栈中的储藏，对于原先在暂存区中的变更，这条命令也会把变更恢复到暂存区。</li>
<li><code>git stash drop stash@&#123;&lt;number&gt;&#125;</code>：删除栈上的指定变更。如果不指定栈的名称，默认会删除最顶上的变更。</li>
<li><code>git stash pop</code>：应用储藏，同时将其从栈中丢弃。</li>
<li><code>git stash --keep-index</code>：不要储藏已经用<code>git add</code>命令暂存过的内容。</li>
<li><code>git stash -u</code>：也会储藏所有未创建过的未跟踪文件。</li>
<li><code>git stash --patch</code>：交互式地提示您哪些变更是您想存储的，哪些是您想保留在工作目录中的。</li>
<li><code>git stash branch &lt;branch&gt;</code>：创建一个新的分支，检出你在储藏工作成果时所在的提交，重新应用成果，如果应用成功，就会丢掉储藏。</li>
</ul>
<h2 id="git-tag">git tag</h2>
<p>给代码历史记录中的某个历史点指定一个永久性的书签。通常用于发布相关的事项。</p>
<ul>
<li><code>git tag</code>：列举可用标签。</li>
<li><code>git tag -l "v1.8.5*"</code>：列出按照特定模式匹配的标签，比如所有v1.8.5系列的标签。</li>
<li><code>git tag -a &lt;tag&gt; -m "&lt;message&gt;"</code>：创建一个注释标签。如果没有<code>-m</code>选项，Git会打开一个文本编辑器以便你输入标记信息。</li>
<li><code>git tag -a &lt;tag&gt; &lt;commitID&gt;</code>：给之前的提交补加标签。</li>
</ul>
<h1 id="项目共享及更新">项目共享及更新</h1>
<h2 id="git-fetch">git fetch</h2>
<p>与远程仓库进行通信，并获取该仓库中所有不在当前仓库中的信息，并将其存储在本地仓库中。</p>
<ul>
<li><code>git fetch &lt;remote-name&gt;</code>：从远程项目中获取所有本地仓库没有的数据。<code>git fetch</code>命令只会把数据拉取到本地仓库，不会自动将这些数据合并到本地的工作成果中，也不会修改当前工作目录下的任何数据。一般用的比较多的命令是<code>git fetch origin</code>。</li>
<li><code>git fetch -all</code>：从所有远程仓库中拉取数据。</li>
<li><code>git fetch origin &lt;ref&gt;</code>：获取默认空间之外的单个特定引用。</li>
<li><code>git fetch &lt;bundle&gt;.bundle &lt;bundle-branch&gt;:&lt;branch&gt;</code>：将包中的分支导入到仓库中的特定分支。</li>
<li><code>git fetch -p</code>：在fetch之前，删除任何在远程仓库上不再存在的远程跟踪引用。</li>
</ul>
<h2 id="git-pull">git pull</h2>
<p>基本上就是<code>git fetch</code>和<code>git merge</code>的组合。先从指定的远程仓库中获取内容，然后立刻尝试将其合并到你所在的分支。</p>
<ul>
<li><code>git pull</code>自动获取远程数据，并将远程分支合并入当前分支。</li>
<li><code>git pull &lt;URL&gt;</code>：这会执行一个一次性拉取操作，但不会将URL保存成远程引用。</li>
<li><code>git pull --rabase</code>：等价于<code>git fetch</code>和<code>git rebase</code>。</li>
</ul>
<h2 id="git-push">git push</h2>
<p>与其它仓库通信，确定本地数据库与远程仓库在内容上存在的不同，然后将差异推送到其它仓库。这要求对仓库有写权限，因此通常需要进行身份验证。</p>
<ul>
<li><code>git push &lt;remote&gt; &lt;branch&gt;</code>：把本地的分支推送到远程的服务器的同名分支上。常见<code>git push origin master</code>。</li>
<li><code>git push &lt;remote&gt; &lt;branchA&gt;:&lt;branchB&gt;</code>：把本地分支A推送到远程分支B。</li>
<li><code>git push</code>：如果你正在一个跟踪分支上使用<code>git push</code>，Git会知道要将数据推送到哪个远程服务器上的哪个分支。</li>
<li><code>git push &lt;remote&gt; --delete &lt;branch&gt;</code>：删除远程服务器上的给定分支。</li>
<li><code>git push &lt;remote&gt; &lt;tag&gt;</code>：将标签推送到远程服务器上。</li>
<li><code>git push &lt;remote&gt; --tags</code>：把所有服务器上还没有的标签都推送过去。</li>
<li><code>git push --force</code>：覆盖服务器上已有的提交历史。</li>
</ul>
<h2 id="git-remote">git remote</h2>
<p>可用于管理远程仓库记录。它可以将很长的URL保存成一个简短的句柄，比如origin。你可以拥有多个这样的句柄，并且可以使用<code>git remote</code>命令添加、更改和删除句柄。</p>
<ul>
<li><code>git remote</code>：查看已经设置了哪些远程仓库。</li>
<li><code>git remote -v</code>：显示出Git存储的每个远程仓库对应的URL。</li>
<li><code>git remote add &lt;name&gt; &lt;URL&gt;</code>：添加一个远程仓库，并给它起一个简短名称以便引用。</li>
<li><code>git remote show &lt;remote-name&gt;</code>：查看关于某一远程仓库的更多信息。</li>
<li><code>git remote rename &lt;old-name&gt; &lt;new-name&gt;</code>：重命名远程仓库。远程分支的名称也会随之改变。</li>
<li><code>git remote rm &lt;remote-name&gt;</code>：删除某个远程仓库地址。</li>
<li><code>git remote set-url [--push] &lt;name&gt; &lt;newurl&gt; [&lt;oldurl&gt;]</code>：更改远程仓库的URL。将远程仓库&lt;name&gt;的匹配正则表达式 &lt;oldurl&gt;（如果没有给出&lt;oldurl&gt;，则默认为第一个URL）的第一个URL设置为&lt;newurl&gt;。如果&lt;oldurl&gt;不匹配任何URL，就会发生错误，什么也不会更改。使用 <code>--push</code> 操作 push URL 而不是 fetch URL。</li>
<li><code>git remote set-url --add [--push] &lt;name&gt; &lt;newurl&gt;</code>：不更改现有 URL，而是添加新的 URL。</li>
<li><code>git remote set-url --delete [--push] &lt;name&gt; &lt;url&gt;</code>：对于remote &lt;name&gt;，删除远程仓库 &lt;name&gt; 所有匹配正则表达式 &lt;url&gt; 的URL。试图删除所有的 fetch URL 会产生错误。</li>
</ul>
<h2 id="git-ls-remote">git ls-remote</h2>
<p>引用是对远程仓库的引用（指针），包括分支、标签等等。</p>
<ul>
<li><code>git ls-remote &lt;remote-name&gt;</code>：显式地获得远程引用的完整列表。</li>
</ul>
<h2 id="git-archive">git archive</h2>
<p>创建项目特定快照的归档文件。命令的详细用法请参考相关文档。</p>
<h2 id="git-submodule">git submodule</h2>
<p>管理普通仓库中涉及的外部仓库。它可以被用在库或者其他类型的共享资源上。</p>
<p>有种情况我们会经常遇到：某个工作中的项目需要包含并使用另一个项目。也许是第三方库，或者你独立开发的，用于多个父项目的库。你想要把它们当作两个独立的项目，同时又想在一个项目中使用另一个。</p>
<p>Git通过子模块来解决这个问题。子模块允许你将一个Git仓库作为另一个Git仓库的子目录。它能让你将另一个仓库克隆到自己的项目中，同时还保持提交的独立。</p>
<ul>
<li><code>git submodule add &lt;URL&gt;</code>：将一个已存在的Git仓库添加为正在工作的仓库的子模块。默认情况下，子模块会将子项目放到一个与仓库同名的目录中。如果想放到其他地方，可以在命令结尾添加一个不同的路径。</li>
<li><code>git submodule init</code>：当你克隆一个含有子模块的项目时，默认会包含该子模块的目录，但其中还没有任何文件。此时必须运行两条命令，第一条即本命令，用来初始化本地配置文件。</li>
<li><code>git submodule update</code>：第二条为本命令，从该子项目中抓取所有数据并检出父项目中列出的合适的提交。</li>
<li><code>git submodule update --init</code>：将<code>git submodule init</code>和<code>git submodule update</code>合并成一步。</li>
<li><code>git submodule update --init --recursive</code>：初始化、抓取并检出任何嵌套的子模块。</li>
</ul>
<h3 id="删除子模块">删除子模块</h3>
<p>删除子模块目前没有很好的快速方法。</p>
<ol type="1">
<li><p>删除<code>.git/config</code>中的子模块条目</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> submodule deinit -f <span class="token operator">&lt;</span>path_to_submodule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>删除父项目的<code>.git/modules</code>中的子模块的目录</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf .git/modules/<span class="token operator">&lt;</span>path_to_submodule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>删除<code>.gitmodules</code>中的条目并且删除子模块的目录</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> -f <span class="token operator">&lt;</span>path_to_submodule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<p>另一种方法是。</p>
<ol type="1">
<li><p>逆初始化子模块。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> submodule deinit <span class="token operator">&lt;</span>path_to_submodule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>删除<code>.gitmodules</code>中记录的模块信息（<code>--cached</code>选项清除<code>.git/modules</code>中的缓存）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token operator">&lt;</span>path_to_submodule<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<h1 id="检视与比较">检视与比较</h1>
<h2 id="git-show">git show</h2>
<p>以一种简单易读的形式显示Git对象。通常可以使用该命令来显示标签或提交的相关信息。</p>
<ul>
<li><p><code>git show &lt;tag&gt;</code>：显示标签信息。</p></li>
<li><p><code>git show &lt;commitID&gt;</code>：显示提交信息。</p></li>
<li><p><code>git show &lt;branch&gt;</code>：显示分支中最后一次提交的对象。</p></li>
<li><p><code>git show HEAD@&#123;n&#125;</code>：查看仓库中HEAD在之前第5次的值。</p></li>
<li><p><code>git show master@&#123;yesterday&#125;</code>：查看master分支昨天在哪里。命令输出会显示昨天的时候，master分支顶端的所在位置。仅对包含在reflog中的数据有效。</p></li>
<li><p><code>git show HEAD^</code>：查看上一次提交（<code>HEAD^</code>表示HEAD的父提交）。</p></li>
<li><p><code>git show HEAD^2</code>：查看HEAD的第二个父提交。这种语法仅在合并提交的时候有效，因为只有合并提交才有多个父提交。首个父提交是当你合并时所在的分支，第二个父提交是你所合并的分支。</p></li>
<li><p><code>git show HEAD~2</code>：查看HEAD的首个父提交的首个父提交，等价于<code>HEAD^^^</code>。</p></li>
<li><p><code>git show :1:hello.rb &gt; hello.common.rb</code></p>
<p><code>git show :2:hello.rb &gt; hello.ours.rb</code></p>
<p><code>git show :3:hello.rb &gt; hello.theirs.rb</code>：进入合并冲突状态时，可以通过这三条命令获得冲突文件的我们版本（所在的分支中）、他们版本（要合并的分支中）、共同祖先版本（分支交叉处）的副本。每个版本在stages中都有一个关联的数字，stage 1是共同祖先版本，stage 2是我们版本，stage 3是他人版本。</p></li>
</ul>
<h2 id="git-shortlog">git shortlog</h2>
<p>归纳<code>git log</code>命令的输出。该命令的很多选项都和<code>git log</code>一样，但是该命令并不会列出所有提交，而是展示按作者进行分组的提交汇总信息。</p>
<ul>
<li><code>git shortlog --no-merges master --not v1.0.1</code>：得到上次发布或发送电子邮件之后新增内容的各类变更日志。加入你上次发布名称为v1.0.1，那么这条命令给出了自上次发布之后所有提交的汇总。</li>
</ul>
<h2 id="git-describe">git describe</h2>
<p>该命令可以接受任何能够解析为提交的内容，然后生成一个比较易读且不会改变的字符串。这可以用来获取提交的描述信息，与提交的SHA-1值一样，它也是无歧义的，但更容易理解。</p>
<ul>
<li><code>git describe master</code>：为该提交起一个具有可读性的名称。执行结果类似于<code>v1.6.2-rc1-20-g8c5b85c</code>，由最近的标签名、该标签之上的提交数量以及你描述的提交的部分SHA-1值组成的。</li>
</ul>
<p><code>git describe</code>偏好注释标签。</p>
<h1 id="调试">调试</h1>
<h2 id="git-bisect">git bisect</h2>
<p>一款极为有用的调试工具，他通过自动二分查找来找出究竟是哪一个提交首先引入了bug或造成了问题。</p>
<ul>
<li><code>git bisect start</code>：启动排查过程。</li>
<li><code>git bisect bad</code>：告诉系统当前提交有问题。</li>
<li><code>git bisect good &lt;good_commit&gt;</code>：告诉bisect最后一次正常状态是什么时候。</li>
<li><code>git bisect good</code>：告知系统当前提交没有问题。</li>
<li><code>git bisect reset</code>：排查结束后，将HEAD重置到排查开始之前的位置。</li>
<li><code>git bisect start &lt;end&gt; &lt;start&gt;</code>：告诉系统要进行查找的范围。比如<code>git bisect start HEAD v1.0</code>。</li>
<li><code>git bisect run &lt;test&gt;</code>：用脚本来自动化bisect查找，该脚本在项目正常的时候返回0，错误时返回1。bisect会在每个已检出的提交上运行脚本，直到Git找到第一个有问题的提交。也可以用make或make tests等工具来进行自动化测试。</li>
</ul>
<h2 id="git-blame">git blame</h2>
<p>标注文件中的行，标注内容包括文件中每一行最后的变更是哪一次提交引入的以及该提交的作者。</p>
<ul>
<li><code>git blame -L &lt;start_line&gt;,&lt;end_line&gt; &lt;file&gt;</code>：将输出范围限制在指定行内。</li>
<li><code>git blame -C -L &lt;start&gt;,&lt;end&gt; &lt;file&gt;</code>：Git会试图找出其中代码片段的原始出处（如果这些代码是从别处复制过来的）。</li>
</ul>
<h2 id="git-grep">git grep</h2>
<p>可以帮助你在源代码的所有文件甚至是项目的旧版本中找到任意字符串或正则表达式。默认情况下，grep只查找工作目录下的文件。</p>
<ul>
<li><code>git grep -n &lt;pattern&gt;</code>：使用<code>-n</code>选项来输出匹配位置的行号。</li>
<li><code>git grep --count &lt;pattern&gt;</code>：输出总结信息：匹配到了哪些文件，每个匹配文件中有多少处匹配。</li>
<li><code>git grep -p gmtime_r *.c</code>：查找到的匹配属于哪个方法或函数，或者说哪个方法或函数中出现了该匹配。</li>
<li><code>git grep --break --heading -n -e '#define' --and \( -e LINK -e BUF_MAX \) v1.8.0</code>：在一个较旧的1.8.0版的Git代码库中查找一些代码行，这些行中定义了包含字符串LINK或BUF_MAX的常量。<code>--break</code>在不同文件的匹配之间打印空行。<code>--heading</code>将文件名显示在该文件的匹配上方，而不是显示在每一行的开头。<code>-e</code>下一个参数是模式。这个选项必须用于以-开头的模式，并且应该用于将用户输入信息传递给grep的脚本中。多个模式用<code>--or</code>组合。<code>--and</code>指定如何使用布尔表达式组合多个模式。<code>--or</code>是默认操作符。<code>--and</code>的优先级高于<code>--or</code>。所有模式都必须使用<code>-e</code>。</li>
<li><code>git grep --heading --break --line-number --column -e &lt;pattern&gt; --and -e &lt;pattern&gt; --or --not -e &lt;pattern&gt; -- &lt;pathspec&gt;</code>：显示匹配字符串所在的文件名、行号、列号，并在不同文件的匹配之间加一个空行。使用<code>--and</code>、<code>--or</code>、<code>--not</code>来指定如何使用布尔表达式组合多个模式，<code>--or</code>是默认操作符、<code>--and</code>的优先级高于<code>--or</code>，所有模式必须使用<code>-e</code>。<code>--</code>标志着选项的结束，接下来的参数是路径的限制。</li>
</ul>
<h1 id="打补丁">打补丁</h1>
<h2 id="git-cherry-pick">git cherry-pick</h2>
<p>可以使用单个Git提交所引入的变更，并尝试将其作为当前分支上的一个新提交重新引入。选择从分支中单独提取一到两个提交，而不是将所有变更都合并到分支中，这种做法还是有用处的。</p>
<ul>
<li><code>git cherry-pick &lt;commitID&gt;</code>：接受某次提交中所引入的补丁并尝试将其重新应用在当前所处的分支上。拣选类似于对单个提交的变基。</li>
</ul>
<h2 id="git-rebase">git rebase</h2>
<p>基本上就是一个自动化的<code>git cherry-pick</code>。它确定一系列提交，然后在别处以相同的顺序逐个对其挑拣。</p>
<ul>
<li><code>git rebase &lt;branch&gt;</code>：将当前分支上所有提交的更改在给定的分支上重现一遍。变基的工作原理是：首先找到两个要整合的分支（你当前所在的分支和要整合到的分支）的共同祖先，然后取得当前所在分支的每次提交所引入的更改（diff），并把这些更改保存为临时文件，这之后将当前分支重置为要整合到的分支，最后在该分支上依次引入之前保存的每个更改。</li>
<li><code>git rebase --onto &lt;branchA&gt; &lt;branchB&gt; &lt;branchC&gt;</code>：将当前分支切换到branchC，并找出branchC和branchB的共同祖先提交，然后把自共同祖先以来branchC上独有的工作rebase到branchA。</li>
<li><code>git rebase &lt;basebranch&gt; &lt;topicbranch&gt;</code>：不需要提前切换到topicbranch，直接将topicbranch分支上的更改rebase到basebranch上。</li>
<li><code>git rebase --onto &lt;commitID1&gt; &lt;commitID2&gt;</code>：<code>--onto</code>后跟创建新提交的起点。<code>&lt;commitID2&gt;</code>为需要保留的第一个提交的父提交。</li>
<li><code>git rebase -i HEAD~3</code>：变基命令的交互模式，更改最近三次或其中任意一次的提交信息。需要将待修改的最近一次提交的父提交作为参数提供给<code>git rebase -i</code>。要修改的是最近三次的提交（HEAD、HEAD~、HEAD~2），所以实际指定的是之前的4次提交（HEAD~3）即要修改提交的父提交。即包含在HEAD~3..HEAD范围中的每次提交都会被重写。</li>
</ul>
<h2 id="git-revert">git revert</h2>
<p>效果与<code>git cherry-pick</code>命令相反。它将你提交的变更以完全相反的方式应用，实际上就是将变更撤销或还原。实际的实现方式是生成一个新的提交，撤销已有提交的所有变更。</p>
<ul>
<li><code>git revert -m 1 HEAD</code>：<code>-m</code>指明了哪一个父节点是应该保留的主线。这个是用在上一个提交是一个合并提交的情况。</li>
<li><code>git revert &lt;commitID&gt;</code>：还原指定提交的变更。</li>
</ul>
<h1 id="电子邮件">电子邮件</h1>
<h2 id="git-apply">git apply</h2>
<p>可以应用由<code>git diff</code>或者甚至是GNU diff命令生成的补丁。除了少数差异之外，它的功能与<code>git patch</code>命令类似。</p>
<ul>
<li><code>git apply &lt;name&gt;.patch</code>：应用指定补丁。<code>git apply</code>只有两种可能性：补丁全部被应用或是一个都不应用。</li>
<li><code>git apply --check &lt;name&gt;.patch</code>：查看补丁能否顺利应用。</li>
</ul>
<h1 id="管理">管理</h1>
<h2 id="git-reflog">git reflog</h2>
<p>检查所有分支头部指针所在位置的日志，找出在重写历史记录时可能丢失的提交。</p>
<h2 id="git-filter-branch">git filter-branch</h2>
<p>可以根据一些模式来重写多个提交，例如删除所有位置上的某个文件，或是在仓库中的某个子目录中提取一个项目。</p>
<ul>
<li><code>git filter-branch --tree-filter 'rm -f passwords.txt' HEAD</code>：从整个历史纪录中删除名为passwords.txt的文件。要想在所有分支上执行<code>filter-branch</code>可以传入<code>--all</code>选项。</li>
<li><code>git filter-branch --subdirectory-filter trunk HEAD</code>：让trunk子目录成为新项目每次提交的根目录。Git会自动删除所有与该子目录无关的提交。</li>
</ul>
<p>更多详细用法请参考相关文档。</p>
<h1 id="git版本升级">Git版本升级</h1>
<h2 id="windows">Windows</h2>
<ol type="1">
<li><p>先查看当前安装的Git版本。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>更新。</p>
<p>如果Git版本是2.17.1之前的，使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果Git版本是2.17.1之后的，使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> update-git-for-windows<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果出现</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">git: <span class="token string">'update'</span> is not a <span class="token function">git</span> <span class="token builtin class-name">command</span>
git: <span class="token string">'update-git-for-windows'</span> is not a <span class="token function">git</span> <span class="token builtin class-name">command</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>直接从<a href="https://git-scm.com/">Git官网</a>重新下载安装包，覆盖安装即可。</p></li>
</ol>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://git-scm.com/book/zh/v2">Git - Book</a></li>
<li><a href="https://yanhaijing.com/git/2020/09/17/git-switch-and-restore/">Git新命令switch和restore</a></li>
<li><a href="https://www.cnblogs.com/lookphp/p/5799533.html">git merge –squash介绍 - LookPHP - 博客园</a></li>
<li><a href="https://www.zybuluo.com/longj/note/1198186">使用 git merge --squash 让你的分支合并更加简洁 - 作业部落 Cmd Markdown 编辑阅读器</a></li>
<li><a href="https://stackoverflow.com/questions/25576415/what-is-the-precise-meaning-of-ours-and-theirs-in-git">merge - What is the precise meaning of "ours" and "theirs" in git? - Stack Overflow</a></li>
<li>https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html</li>
<li><a href="https://blog.csdn.net/RedaTao/article/details/104398408">windows更新git版本， git版本升级_RedaTao的博客-CSDN博客_windows更新git版本</a></li>
<li><a href="https://murphypei.github.io/blog/2018/09/git-delete-submodule">Git删除子模块和远程分支 | 拾荒志</a></li>
<li><a href="https://www.jianshu.com/p/ed0cb6c75e25">[Git] 如何优雅的删除子模块(submodule)或修改Submodule URL - 简书</a></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue笔记</title>
    <url>/2021/05/14/Vue%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="有的没的">有的没的</h1>
<p>前端四要素</p>
<ul>
<li>逻辑
<ul>
<li>判断</li>
<li>循环</li>
</ul></li>
<li>事件
<ul>
<li>浏览器事件：window、document</li>
<li>DOM事件：增、删、遍历、修改节点元素内容</li>
<li>jQuery</li>
</ul></li>
<li>视图
<ul>
<li>HTML</li>
<li>CSS
<ul>
<li>Bootstrap可视化布局</li>
</ul></li>
</ul></li>
<li>通信
<ul>
<li>Ajax
<ul>
<li>xhr</li>
<li>axios</li>
</ul></li>
</ul></li>
</ul>
<h1 id="vue是什么">Vue是什么</h1>
<p>Vue是一套用于构建用户界面的渐进式框架。Vue被设计为自底向上逐层应用。Vue的核心库只关注视图层（HTML+CSS+JavaScript，视图层就是给用户看和刷新后台给的数据，不关注网络通信（<a href="http://www.axios-js.com/">axios中文网</a>）、页面跳转（Vue Router）、状态管理（Vuex）等）。</p>
<p>遵守一个原则：关注点分离原则（Separation of Concerns, SoC）。</p>
<p>前端三大框架：Vue、React、Angular。</p>
<p>Vue UI：</p>
<ul>
<li><a href="https://ice.work/">飞冰 - 让前端开发简单而友好</a></li>
</ul>
<h2 id="前端知识体系">前端知识体系</h2>
<h3 id="前端三要素">前端三要素</h3>
<ul>
<li><p>HTML</p></li>
<li><p>CSS：CSS层叠样式表是一门标记语言，并不是编程语言，因此不可以自定义变量，不可以引用等，换句话说就是不具备任何语法支持，它主要缺陷如下：</p>
<ul>
<li>语法不够强大，比如无法嵌套书写，导致模块化开发中需要书写很多重复的选择器；</li>
<li>没有变量和合理的样式复用机制，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致难以维护这就导致了我们在工作中无端增加了许多工作量。</li>
</ul>
<p>为了解决这个问题，前端开发人员会使用一种称之为【CSS预处理器】的工具，提供CSS缺失的样式层复用机制、减少冗余代码，提高样式代码的可维护性。大大提高了前端在样式上的开发效率。</p>
<p>CSS预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为CSS增加了一些编程的特性，将CSS作为目标生成文件，然后开发者就只要使用这种语言进行CSS的编码工作。转化成通俗易懂的语说就是“用一种专门的编程语言，进行Web页面样式设计，再通过编译器转化为正常的CSS文件，以供项目使用”。</p>
<p>常用的CSS预处理器有</p>
<ul>
<li><p>SASS：基于Ruby，通过服务端处理，功能强大。解析效率高。需要学习Ruby语言，上手难度高于LESS。</p></li>
<li><p>LESS：基于Node.js，通过客户端处理，使用简单。功能比SASS简单，解析效率也低于SASS，但在实际开发中足够了，所以我们后台人员如果需要的话，建议使用LESS。</p>
<p><a href="https://less.bootcss.com/">Less 快速入门 | Less.js 中文文档 - Less 中文网</a></p>
<p><a href="https://lesscss.org/">Getting started | Less.js</a></p></li>
</ul></li>
<li><p>JavaScript：一门弱类型脚本语言，其源代码在发往客户端运行之前不需要经过编译，而是将文本格式的字符代码发送给浏览器，由浏览器解释运行。</p>
<p>原生JS开发，就是按照ECMAScript标准的开发方式，简称ES，特点是所有浏览器都支持。版本：</p>
<p>ES5（全浏览器支持）</p>
<p>ES6（常用，当前主流版本，webpack打包成为ES5支持）</p>
<p>let -&gt; var：webpack打包</p>
<p>TypeScript：编译成JS被浏览器执行。</p></li>
</ul>
<h2 id="javascript框架">JavaScript框架</h2>
<ul>
<li>jQuery：简化了DOM操作，但是DOM操作太频繁，影响前端性能。</li>
<li>Angular：Google收购的前端框架，由一群Java程序员开发，特点是将后台的MVC（M：模型，V：视图，C：控制器）模式搬到前端，并增加了模块化开发的概念。与Microsoft合作，采用TypeScript语言开发。对后台程序员友好，对前端程序员不友好，版本迭代不合理。</li>
<li>React：Facebook的一款高性能JS前端框架，特点是提出了新概念【虚拟DOM】用于减少真实的DOM操作，在内存中模拟DOM操作，有效地提升了前端渲染效率；缺点是使用复杂，需要额外学习JSX语言。</li>
<li>Vue：一款渐进式JavaScript框架，所谓渐进式就是逐步实现新特性的意思，如实现模块化开发、路由、状态管理等新特性。特点是综合了Angular（模块化）和React（虚拟DOM）的优点。</li>
<li>axios：前端通信框架；因为Vue的边界很明确，就是为了处理DOM，所以并不具备通信能力，此时就需要额外使用一个通信框架与服务器交互；当然也可以直接使用jQuery提供的Ajax通信功能。</li>
</ul>
<h2 id="ui框架">UI框架</h2>
<ul>
<li>Ant-Design：阿里巴巴出品，基于React的UI框架</li>
<li>ElementUI、iview、ice：饿了么出品，基于Vue的UI框架</li>
<li>Bootstrap：Twitter推出的一个用于前端开发的开源工具包</li>
<li>AmazeUI：一款HTML5跨屏前端框架</li>
</ul>
<h2 id="javascript构建工具">JavaScript构建工具</h2>
<ul>
<li>Babel：JS编译工具，主要用于浏览器不支持的ES新特性，比如用于编译TypeScript</li>
<li>WebPack：模块打包器，主要作用是打包、压缩、合并及按序加载</li>
</ul>
<h2 id="后端技术">后端技术</h2>
<p>Node.js为了方便前端人员开发后台应用。</p>
<p>Node.js框架及项目管理工具：</p>
<ul>
<li>Express：Node.js框架</li>
<li>Koa：Express简化版</li>
<li>npm：项目综合管理工具，类似于Maven</li>
<li>yarn：npm的替代方案，类似于Maven和Gradle的关系</li>
</ul>
<h2 id="mvvm">MVVM</h2>
<p>MVVM（Model-View-ViewModel）是一种软件架构设计模式，是一种简化用户界面的事件驱动编程方式。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_14_Vue%E7%AC%94%E8%AE%B0_MVVM%E7%BB%93%E6%9E%84.png" alt="MVVM结构.png" /><figcaption aria-hidden="true">MVVM结构.png</figcaption>
</figure>
<p>View：视图层，在这里表示DOM（HTML操作的元素）</p>
<p>ViewModel：连接试图和数据的中间件，Vue.js就是MVVM中的ViewModel层的实现者</p>
<p>Model：模型层，在这里表示JavaScript对象</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_14_Vue%E7%AC%94%E8%AE%B0_MVVM%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png" alt="MVVM组成部分.png" /><figcaption aria-hidden="true">MVVM组成部分.png</figcaption>
</figure>
<p>在MVVM架构中，是不允许数据和视图直接通信的，只能通过ViewModel来通信，而ViewModel就是定义了一个观察者（observer）。</p>
<p>ViewModel能够观察到数据的变化，并对视图对应的内容进行更新；ViewModel能够监听到视图的变化，并能够通知数据发生改变。</p>
<p>Vue.js就是一个MVVM的实现者，它的核心就是实现了DOM监听和数据绑定。</p>
<p>MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大好处：</p>
<ul>
<li>低耦合：View可以独立于Model变化和修改，一个ViewModel可以绑定到不同的View上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</li>
<li>可复用：可以把一些视图逻辑放在一个ViewModel里面，让很多View重用这段视图逻辑。</li>
<li>独立开发：开发人员可以专注于业务逻辑和数据的开发（ViewModel），设计人员可以专注于页面设计。</li>
<li>可测试：测试可以针对ViewModel来写。</li>
</ul>
<h1 id="第一个vue程序">第一个Vue程序</h1>
<p>下载地址：</p>
<ul>
<li><p><a href="https://cn.vuejs.org/js/vue.js">开发版本</a>：包含完整的警告和调试模式</p></li>
<li><p><a href="https://cn.vuejs.org/js/vue.min.js">生产版本</a>：删除了警告</p></li>
<li><p>CDN：</p>
<p>最新版本：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>明确的版本号：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue@2.6.12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- View层：模板 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        &#123;&#123;message&#125;&#125;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

    <span class="token comment">&lt;!-- 导入Vue.js --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// ViewModel层：双向绑定</span>
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            <span class="token comment">// Model层：数据</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                message<span class="token operator">:</span> <span class="token string">"Hello, Vue!"</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="vue基本语法">Vue基本语法</h1>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    &#123;&#123;message&#125;&#125;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        鼠标悬停几秒钟查看此处动态绑定的提示信息！
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>v-bind</code>被称为指令。指令带有前缀<code>v-</code>，表示它们是Vue提供的特性。它们会在渲染的DOM上应用特殊的响应式行为。<code>v-bind</code>的意思是：“将这个元素节点的title属性和Vue实例的message属性绑定，使它们保持一致”。</p>
<p>缩写：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="v-if">v-if</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ok<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>No<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type===<span class="token punctuation">'</span>A<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>厉害<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type===<span class="token punctuation">'</span>B<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>良好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>垃圾<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                ok<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                type<span class="token operator">:</span> <span class="token string">'A'</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="v-for">v-for</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item.message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;index&#125;&#125;: &#123;&#123;item.message&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                items<span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token punctuation">&#123;</span>
                        message<span class="token operator">:</span> <span class="token string">"Java"</span>
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">&#123;</span>
                        message<span class="token operator">:</span> <span class="token string">"前端"</span>
                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">&#123;</span>
                        message<span class="token operator">:</span> <span class="token string">"运维"</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="事件处理">事件处理</h2>
<p>可以用<code>v-on</code>指令监听DOM事件，并在触发时运行一些JavaScript代码。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sayHi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                message<span class="token operator">:</span> <span class="token string">"xiaoming"</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">// 方法必须定义在Vue的methods对象中</span>
                <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="双向数据绑定">双向数据绑定</h2>
<p>当数据发生变化的时候，视图也发生变化；当视图发生变化的时候，数据也跟着变化。</p>
<p>数据双向绑定，一定是对于UI控件来说的，非UI控件不会涉及到数据双向绑定。</p>
<p>你可以用<code>v-model</code>指令在表单<code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;select&gt;</code>元素上创建双向数据绑定，它会根据控件类型自动选取正确的方法更新元素。<code>v-model</code>本质上是语法糖，它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。</p>
<p><code>v-model</code>会忽略所有表单元素的value、checked、selected属性的初始值，而总是将Vue实例的数据作为数据来源，因此应该在data选项中声明初始值。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            输入的文本：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> &#123;&#123;message&#125;&#125;
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            性别:
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qinjiang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 男
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qinjiang<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 女
            选中了&#123;&#123;qinjiang&#125;&#125;
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
            下拉框：
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>请选择<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token comment">&lt;!-- 绑定之后selected会失效 --></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
            选中了&#123;&#123;select&#125;&#125;
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                message<span class="token operator">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>
                qinjiang<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
                select<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="vue组件">Vue组件</h2>
<p>Vue组件的意思是可以自定义标签。</p>
<p>组件是可复用的Vue实例，说白了就是一组可以重复使用的模板。</p>
<p>通常一个应用会以一棵嵌套的组件树的形式来组织：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_14_Vue%E7%AC%94%E8%AE%B0_%E7%BB%84%E4%BB%B6.png" alt="组件.png" /><figcaption aria-hidden="true">组件.png</figcaption>
</figure>
<p>例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment">&lt;!-- 组件：传递给组件中的值：props --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>qinjiang</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>qin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>qinjiang</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 定义一个Vue组件component</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"qinjiang"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'qin'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            template<span class="token operator">:</span> <span class="token string">'&lt;li>&#123;&#123;qin&#125;&#125;&lt;/li>'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                items<span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token string">"Java"</span><span class="token punctuation">,</span>
                    <span class="token string">"Linux"</span><span class="token punctuation">,</span>
                    <span class="token string">"frontend"</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>v-for="item in itmes"</code>：遍历Vue实例中定义的名为items的数组，并创建同等数量的组件。</p>
<p><code>v-bind:qin="item"</code>：将遍历的item项绑定到组件中props定义的名为qin的属性上。</p>
<h2 id="axios">axios</h2>
<p>axios是一个开源的可以用在浏览器端和Node.js的异步通信框架，它的主要作用就是实现Ajax异步通信，其功能特点如下：</p>
<ul>
<li>从浏览器中创建<code>XMLHttpRequests</code></li>
<li>从Node.js创建HTTP请求</li>
<li>支持Promise API（JS中链式编程）</li>
<li>拦截请求和响应</li>
<li>转换请求数据和响应数据</li>
<li>取消请求</li>
<li>自动转换JSON数据</li>
<li>客户端支持防御XSRF（跨站请求伪造）</li>
</ul>
<p>为什么要使用axios？</p>
<p>由于Vue是一个视图层框架，而且作者（尤雨溪）严格遵守SoC（关注度分离原则），所以Vue并不包含Ajax的通信功能。Vue推荐了axios框架。少用jQuery，因为它操作DOM太频繁。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 导入axios --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
        <span class="token selector">[v-clock]</span> <span class="token punctuation">&#123;</span>
            <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 解决闪烁问题 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vue<span class="token punctuation">"</span></span> <span class="token attr-name">v-clock</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123;info.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>&#123;&#123;info.address.street&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info.url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#vue"</span><span class="token punctuation">,</span>
            <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
                    info<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                        name<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
                        address<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                            street<span class="token operator">:</span> <span class="token keyword">null</span>
                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                        url<span class="token operator">:</span> <span class="token keyword">null</span>
                    <span class="token punctuation">&#125;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token comment">// 钩子函数，见后面的生命周期</span>
            <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                <span class="token comment">// 链式编程 ES6新特性</span>
                axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'data.json'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token operator">=></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token operator">=</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="生命周期">生命周期</h2>
<p>Vue实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模板、挂载DOM、渲染→更新→渲染、卸载等一系列过程，我们称这是Vue的声明周期。通俗说就是Vue实例从创建到销毁的过程，就是生命周期。</p>
<p>在Vue的整个生命周期中，它提供了一系列的事件，可以让我们在事件触发时注册JS方法，这些事件响应方法中的this直接指向的是Vue的实例。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2021_05_14_Vue%E7%AC%94%E8%AE%B0_%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="生命周期.png" /><figcaption aria-hidden="true">生命周期.png</figcaption>
</figure>
<h2 id="计算属性">计算属性</h2>
<p>计算属性的重点突出在“属性”两个字上，首先它是个“属性”，其次这个属性有“计算”的能力，这里的“计算”就是个函数；简单点说，它就是一个能将计算结果缓存起来的属性（将行为转化成了静态的属性），可以想象为缓存。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>currentTime1 &#123;&#123;currentTime1()&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>currentTime2 &#123;&#123;currentTime2&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                message<span class="token operator">:</span> <span class="token string">"Hello, kuangshen"</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token function-variable function">currentTime1</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回一个时间戳</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            <span class="token comment">// 计算属性，重名时优先调用methods中的函数</span>
            computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token function-variable function">currentTime2</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">;</span> <span class="token comment">// 如果message的值被修改，那么这个函数会被重新计算，和缓存一样</span>
                    <span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回一个时间戳</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意methods和computed中的函数不能重名。</p>
<p>methods定义方法，调用方法需要带括号。</p>
<p>computed定义计算属性，调用属性不需要带括号，如果在方法中的值发生了变化，则缓存就会刷新。</p>
<p>调用方法时，每次都需要进行计算，会产生系统开销。如果这个结果不经常变化，就可以考虑将这个结果缓存起来，采用计算属性可以很方便地做到这一点。计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销。</p>
<h2 id="slot">slot</h2>
<p>在Vue中我们使用<code>&lt;slot&gt;</code>元素作为承载分发内容的出口，作者称其为插槽，可以应用在组合组件的场景中。</p>
<p>比如准备制作一个待办事项组件（todo），该组件由待办标题（todo-title）和待办内容（todo-items）组成，但是这三个组件又是相互独立的。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-title</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-title</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-items</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item in todoItems<span class="token punctuation">"</span></span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-items</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// slot：插槽</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            template<span class="token operator">:</span>
            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>
                &lt;slot name="todo-title">&lt;/slot>
                &lt;ul>
                    &lt;slot name="todo-items">&lt;/slot>
                &lt;/ul>
            &lt;/div></span><span class="token template-punctuation string">`</span></span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-title"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            template<span class="token operator">:</span> <span class="token string">'&lt;div>&#123;&#123;title&#125;&#125;&lt;/div>'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-items"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"item"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            template<span class="token operator">:</span> <span class="token string">'&lt;li>&#123;&#123;item&#125;&#125;&lt;/li>'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                title<span class="token operator">:</span> <span class="token string">"列表"</span><span class="token punctuation">,</span>
                todoItems<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Java'</span><span class="token punctuation">,</span> <span class="token string">'Linux'</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">]</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="自定义事件">自定义事件</h2>
<p>如果数据项在Vue的实例中，但是删除操作要在组件中完成，那么组件如何才能删除Vue实例中的数据呢？此时就涉及到参数传递和事件分发，Vue为我们提供了自定义事件的功能很好地帮助我们解决了这个问题；使用<code>this.$emit('自定义事件名', 参数)</code>。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-title</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>todo-title<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-title</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>todo-items</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>todo-items<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(item, index) in todoItems<span class="token punctuation">"</span></span> <span class="token attr-name">:item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">:index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>remove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeItems(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo-items</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>todo</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// slot：插槽</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            template<span class="token operator">:</span>
            <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>
                &lt;slot name="todo-title">&lt;/slot>
                &lt;ul>
                    &lt;slot name="todo-items">&lt;/slot>
                &lt;/ul>
            &lt;/div></span><span class="token template-punctuation string">`</span></span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-title"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"title"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            template<span class="token operator">:</span> <span class="token string">'&lt;div>&#123;&#123;title&#125;&#125;&lt;/div>'</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">"todo-items"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
            props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"item"</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            template<span class="token operator">:</span> <span class="token string">'&lt;li>&#123;&#123;item&#125;&#125;&lt;button @click="removeObjectItem">删除&lt;/button>&lt;/li>'</span><span class="token punctuation">,</span>
            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token function-variable function">removeObjectItem</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'remove'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
            el<span class="token operator">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>
            data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                title<span class="token operator">:</span> <span class="token string">"列表"</span><span class="token punctuation">,</span>
                todoItems<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Java'</span><span class="token punctuation">,</span> <span class="token string">'Linux'</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">]</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
            methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
                <span class="token function-variable function">removeItems</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>todoItems<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 删除一个元素</span>
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="入门小结">入门小结</h2>
<p>核心：数据驱动、组件化</p>
<p>优点：借鉴了Angular的模块化开发和React的虚拟DOM。</p>
<p>常用的属性：</p>
<ul>
<li>v-if</li>
<li>v-else-if</li>
<li>v-else</li>
<li>v-for</li>
<li>v-on绑定事件，简写@</li>
<li>v-model数据双向绑定</li>
<li>v-bind给组件绑定参数，简写:</li>
</ul>
<p>组件化：</p>
<ul>
<li>组合组件slot插槽</li>
<li>组件内部绑定事件需要使用到<code>this.$emit("事件名", 参数)</code></li>
<li>计算属性的特色，缓存计算数据</li>
</ul>
<p>遵循SoC关注度分离原则，Vue是纯粹的视图框架，并不包含Ajax之类的通信功能，为了解决通信问题，我们需要使用axios框架做异步通信。</p>
<p>Vue的开发需要基于Node.js，实际开发采用vue-cli脚手架开发，vue-router路由，vuex做状态管理，Vue UI一般使用Element UI或者ICE来快速搭建前端项目。</p>
<h1 id="第一个vue-cli项目">第一个vue-cli项目</h1>
<p>vue-cli是官方提供的一个脚手架，用于快速生成一个vue的项目模板。脚手架包括一些预先定义好的目录结构及基础代码。</p>
<p>主要的功能：</p>
<ul>
<li>统一的目录结构</li>
<li>本地调试</li>
<li>热部署</li>
<li>单元测试</li>
<li>集成打包上线</li>
</ul>
<p>需要的环境：</p>
<ul>
<li>Node.js</li>
<li>Git</li>
</ul>
<p>安装vue-cli：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g vue-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>测试是否安装成功，并查看可以基于哪些模板创建Vue应用程序，通常选择webpack：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Available official templates:

★  browserify - A full-featured Browserify + vueify setup with hot-reload, linting <span class="token operator">&amp;</span> unit testing.
★  browserify-simple - A simple Browserify + vueify setup <span class="token keyword">for</span> quick prototyping.
★  pwa - PWA template <span class="token keyword">for</span> vue-cli based on the webpack template
★  simple - The simplest possible Vue setup <span class="token keyword">in</span> a single HTML <span class="token function">file</span>
★  webpack - A full-featured Webpack + vue-loader setup with hot reload, linting, testing <span class="token operator">&amp;</span> css extraction.
★  webpack-simple - A simple Webpack + vue-loader setup <span class="token keyword">for</span> quick prototyping.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>进入一个准备好的目录，创建一个基于webpack模板的Vue应用程序：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue init webpack myvue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">? Project name myvue
? Project description A Vue.js project
? Author xfdj <span class="token operator">&lt;</span><span class="token number">38575841</span>+xfdj@users.noreply.github.com<span class="token operator">></span>
? Vue build standalone
? Install vue-router? No
? Use ESLint to lint your code? No
? Set up unit tests No
? Setup e2e tests with Nightwatch? No
? Should we run <span class="token variable"><span class="token variable">`</span><span class="token function">npm</span> <span class="token function">install</span><span class="token variable">`</span></span> <span class="token keyword">for</span> you after the project has been created? <span class="token punctuation">(</span>recommended<span class="token punctuation">)</span> no

   vue-cli · Generated <span class="token string">"myvue"</span><span class="token builtin class-name">.</span>

<span class="token comment"># Project initialization finished!</span>
<span class="token comment"># ========================</span>

To get started:

  <span class="token builtin class-name">cd</span> myvue
  <span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">(</span>or <span class="token keyword">if</span> using yarn: <span class="token function">yarn</span><span class="token punctuation">)</span>
  <span class="token function">npm</span> run dev

Documentation can be found at https://vuejs-templates.github.io/webpack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>初始化并运行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> myvue
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="webpack">webpack</h1>
<p>在运行<code>npm run dev</code>的时候，后台实际上使用webpack在进行打包。</p>
<p>本质上，webpack是一个现代JavaScript应用程序的静态模块打包器（module bundler）。当webpack处理应用程序时，它会递归地构建一个依赖关系图（dependency graph），其中包含应用程序需要的每一个模块，然后将这些模块打包成一个或多个bundle。</p>
<p>webpack是当下最热门的前端资源模块化管理和打包工具，它可以将许多松散耦合的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分离，等到实际需要时再异步加载。通过loader转换，任何形式的资源都可以当做模块，比如ES6、CSS、JSON、LESS、CommonJS等。</p>
<p>伴随着移动互联网的大潮，越来越多的网站已经从网页模式进化到了WebAPP模式。他们是运行在现代浏览器里，使用HTML5、CSS3、ES6等新的技术来开发丰富的功能，网页已经不仅仅是完成浏览器的基本需求；WebAPP通常是一个SPA（单页面应用），每一个视图通过异步的方式加载，这导致页面初始化和使用过程中会加载越来越多的JS代码，这给前端的开发流程和资源组织带来了巨大挑战。</p>
<p>前端开发和其他开发工作的主要区别，首先是前端基于多语言、多层次的编码和组织工作，其次前端产品的交付是基于浏览器的，这些资源是通过增量加载的方式运行到浏览器端，如何在开发环境组织好这些碎片化的代码和资源，并且保证他们在浏览器端快速、优雅地加载和更新，就需要一个模块化系统，这个理想中的模块化系统是前端工程师多年来一直探索的难题。</p>
<h2 id="模块化的演进">模块化的演进</h2>
<h3 id="script标签">Script标签</h3>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module2.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">scr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module3.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这是最原始的JavaScript文件加载方式，如果把每一个文件看作是一个模块，那么他们的接口通常暴露在全局作用域下，也就是定义在window对象中，不同模块的调用就是一个作用域。</p>
<p>这种原始的加载方式暴露了一些显而易见的弊端：</p>
<ul>
<li>全局作用域下容易造成变量冲突</li>
<li>文件智能按照<code>&lt;script&gt;</code>的书写顺序进行加载</li>
<li>开发人员必须主观解决模块和代码库的依赖关系</li>
<li>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪</li>
</ul>
<h3 id="commonjs">CommonJS</h3>
<p>服务器端的Node.js遵循CommonJS规范，该规范核心思想是允许通过require方法来同步加载所需依赖的其他模块，然后通过export或module.exports来导出需要暴露的接口。</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"module"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"../module.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span><span class="token punctuation">.</span><span class="token function-variable function">doStuff</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> someValue<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>优点：</p>
<ul>
<li>服务器端模块便于重用</li>
<li>npm中已经有超过45万个可以使用的模块包</li>
<li>简单易用</li>
</ul>
<p>缺点：</p>
<ul>
<li>同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的</li>
<li>不能非阻塞地并行加载多个模块</li>
</ul>
<p>实现：</p>
<ul>
<li>服务器端的Node.js</li>
<li>Browserify，浏览器端的CommonJS实现，可以使用npm的模块，但是编译打包后的文件体积较大</li>
<li>modules-webmake，类似Browserify，但不如Browserify灵活</li>
<li>wreq，Browserify的前身</li>
</ul>
<h3 id="amd">AMD</h3>
<p>Asynchronous Module Definition规范。它要在声明模块的时候指定所有的依赖，并且还要当做形参传到factory中，对于依赖的模块提前执行。</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">"module"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"dep1"</span><span class="token punctuation">,</span> <span class="token string">"dep2"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">d1<span class="token punctuation">,</span> d2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> someExportedValue<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"module"</span><span class="token punctuation">,</span> <span class="token string">"../fine.js"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>优点：</p>
<ul>
<li>适合在浏览器环境中异步加载模块</li>
<li>可以并行加载多个模块</li>
</ul>
<p>缺点：</p>
<ul>
<li>提高了开发成本，代码的阅读和书写比较困难，模块的定义方式的语义不畅</li>
<li>不符合通用的模块化思维方式，是一种妥协的表现</li>
</ul>
<p>实现：</p>
<ul>
<li>RequireJS</li>
<li>curl</li>
</ul>
<h3 id="cmd">CMD</h3>
<p>Commons Module Definition规范和AMD很相似，尽量保持简单，并与CommonJS和Node.js的Modules规范保持了很大的兼容性。</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">define</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">require<span class="token punctuation">,</span> exports<span class="token punctuation">,</span> module</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">var</span> $ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"jquery"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> Spinning <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./spinning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    exports<span class="token punctuation">.</span>doSomething <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token operator">...</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>优点：</p>
<ul>
<li>依赖就近，延迟执行</li>
<li>可以很容易在Node.js中运行</li>
</ul>
<p>缺点：</p>
<ul>
<li>依赖SPM打包，模块的加载逻辑偏重</li>
</ul>
<p>实现：</p>
<ul>
<li>Sea.js</li>
<li>coolie</li>
</ul>
<h3 id="es6模块">ES6模块</h3>
<p>ECMAScript6标准增加了JavaScript语言层面的模块体系定义。ES6模块的设计思想，是尽量静态化，使编译时就能确定模块的依赖关系，以及输入和输出的变量。CommonJS和AMD模块，都只能在运行时确定这些东西。</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">"jquery"</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">doStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
module <span class="token string">"localModule"</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>优点：</p>
<ul>
<li>容易进行静态分析</li>
<li>面向未来的ECMAScript标准</li>
</ul>
<p>缺点：</p>
<ul>
<li>原生浏览器端还没有实现标准</li>
<li>全新的命令，新版的Node.js才支持</li>
</ul>
<p>实现：</p>
<ul>
<li>Babel</li>
</ul>
<p>大家期望的模块系统</p>
<p>可以兼容多种模块风格，尽量可以利用已有的代码，不仅仅只是JavaScript模块化，还有CSS、图片、字体等资源也需要模块化。</p>
<h2 id="安装webpack">安装webpack</h2>
<p>webpack是一款模块加载器兼打包工具，它能把各种资源，如JS、JSX、ES6、SASS、LESS、图片等都作为模块来处理和使用。</p>
<p>把ES6规范的代码打包成ES5规范，这样大部分浏览器就能运行了。</p>
<p>安装：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g webpack webpack-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>测试安装是否成功：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">webpack -v
webpack-cli -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="配置">配置</h2>
<p>创建<code>webpack.config.js</code>配置文件。</p>
<ul>
<li>entry：入口文件，指定webpack用哪个文件作为项目的入口</li>
<li>output：输出，指定webpack把处理完成的文件放置到指定路径</li>
<li>module：模块，用于处理各种类型的文件</li>
<li>plugins：插件，如：热更新、代码重用等</li>
<li>resolve：设置路径指向</li>
<li>watch：监听，用于设置文件改动后直接打包</li>
</ul>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    entry<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        path<span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
        filename<span class="token operator">:</span> <span class="token string">""</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        loaders<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">&#123;</span>
                test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
                loader<span class="token operator">:</span> <span class="token string">""</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    watch<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接运行<code>webpack</code>命令打包。</p>
<h2 id="使用webpack">使用webpack</h2>
<ol type="1">
<li><p>创建项目</p></li>
<li><p>创建一个名为<code>modules</code>的目录，用于放置JS模块等资源文件</p></li>
<li><p>在<code>modules</code>下创建模块文件，如<code>hello.js</code>，用于编写JS模块相关代码</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 暴露一个方法：sayHi</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sayHi</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;h1>狂神说ES6&lt;/h1>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>在<code>modules</code>下创建一个名为<code>main.js</code>的入口文件，用于打包时设置entry属性</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> sayHi <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"./hello"</span><span class="token punctuation">;</span>
<span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li><p>在项目目录下创建<code>webpack.config.js</code>配置文件，使用webpack命令打包</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    entry<span class="token operator">:</span> <span class="token string">"./modules/main.js"</span><span class="token punctuation">,</span>
    output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        filename<span class="token operator">:</span> <span class="token string">"./js/bundle.js"</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">webpack
<span class="token comment"># 监听变化</span>
<span class="token comment"># webpack --watch</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
<li><p>在项目目录下创建HTML页面，如<code>index.html</code>，导入webpack打包后的JS文件</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dist/js/bundle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>浏览器打开HTML看效果</p></li>
</ol>
<h1 id="vue-router路由">vue-router路由</h1>
<p>多个页面跳转需要路由。</p>
<p>Vue Router是Vue官方的路由管理器。它和Vue的核心深度集成，让构建单页面的应用变得易如反掌。包含的功能有：</p>
<ul>
<li>嵌套的路由/视图表</li>
<li>模块化的、基于组件的路由配置</li>
<li>路由参数、查询、通配符</li>
<li>基于Vue过渡系统的视图过滤效果</li>
<li>细粒度的导航控制</li>
<li>带有自动激活的CSS class的链接</li>
<li>HTML5历史模式或hash模式</li>
<li>自定义的滚动条行为</li>
</ul>
<h2 id="安装">安装</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev vue-router<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>--save-dev</code>会保存到开发的配置里面。</p>
<p>如果在一个模块化工程中使用它，必须要通过Vue.use()明确地安装路由功能：</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span>

<span class="token comment">// 显式声明使用VueRouter</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>components</code>目录下存放自己编写的组件。</p>
<p>定义一个<code>Content.vue</code>组件</p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
  &lt;h1&gt;内容页&lt;&#x2F;h1&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
export default &#123;
  name: &quot;Content&quot;
&#125;;
&lt;&#x2F;script&gt;

&#x2F;&#x2F; 局部生效的样式
&lt;style scoped&gt;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>安装路由，在<code>src</code>目录下新建一个文件夹<code>router</code>，专门存放路由<code>index.js</code></p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token comment">// 导入路由插件</span>
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span>
<span class="token comment">// 导入定义的组件</span>
<span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'@/components/HelloWorld'</span>

<span class="token keyword">import</span> Content <span class="token keyword">from</span> <span class="token string">'../components/Content'</span>
<span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'../components/Main'</span>
<span class="token comment">// 安装路由</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span>
<span class="token comment">// 配置路由</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  routes<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">&#123;</span>
      <span class="token comment">// 路由路径</span>
      path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>
      <span class="token comment">// 路由名称</span>
      name<span class="token operator">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>
      <span class="token comment">// 跳转到组件</span>
      component<span class="token operator">:</span> HelloWorld
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
      path<span class="token operator">:</span> <span class="token string">'/content'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'content'</span><span class="token punctuation">,</span>
      component<span class="token operator">:</span> Content
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
      path<span class="token operator">:</span> <span class="token string">'/main'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'main'</span><span class="token punctuation">,</span>
      component<span class="token operator">:</span> Main
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>main.js</code>中配置路由</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// The Vue build version to load with the `import` command</span>
<span class="token comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span>
<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span>
<span class="token comment">// 导入路由配置目录</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span>
<span class="token comment">// 关闭生产模式下给出的提示</span>
Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token comment">/* eslint-disable no-new */</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>
  <span class="token comment">// 配置路由</span>
  router<span class="token punctuation">,</span>
  components<span class="token operator">:</span> <span class="token punctuation">&#123;</span> App <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  template<span class="token operator">:</span> <span class="token string">'&lt;App/>'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>App.vue</code>中使用路由</p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
  &lt;div id&#x3D;&quot;app&quot;&gt;
    &lt;img src&#x3D;&quot;.&#x2F;assets&#x2F;logo.png&quot; &#x2F;&gt;
    &lt;!--
      router-link 默认会被渲染成一个&lt;a&gt;标签，to属性为指定链接
      router-view 用于渲染路由匹配到的组件
    --&gt;
    &lt;router-link to&#x3D;&quot;&#x2F;main&quot;&gt;首页&lt;&#x2F;router-link&gt;
    &lt;router-link to&#x3D;&quot;&#x2F;content&quot;&gt;内容页&lt;&#x2F;router-link&gt;
    &lt;router-view &#x2F;&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
import Content from &#39;.&#x2F;components&#x2F;Content&#39;

export default &#123;
  name: &quot;App&quot;
&#125;;
&lt;&#x2F;script&gt;

&lt;style&gt;
#app &#123;
  font-family: &quot;Avenir&quot;, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
&#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="element-ui">element-ui</h1>
<ol type="1">
<li><p>创建一个名为<code>hello-vue</code>的工程</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue init webpack hello-vue<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>安装依赖</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 进入工程目录</span>
<span class="token builtin class-name">cd</span> hello-vue
<span class="token comment"># 安装vue-router</span>
<span class="token function">npm</span> <span class="token function">install</span> --save-dev vue-router
<span class="token comment"># 安装element-ui</span>
<span class="token function">npm</span> i -S element-ui
<span class="token comment"># 安装依赖</span>
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token comment"># 安装SASS加载器</span>
<span class="token function">npm</span> <span class="token function">install</span> --save-dev sass-loader node-sass
<span class="token comment"># 启动测试</span>
<span class="token function">npm</span> run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>npm命令解释：</p>
<ul>
<li><code>npm install moduleName</code>：安装模块到项目目录下</li>
<li><code>npm install -g moduleName</code>：将模块安装到全局，具体安装位置查看<code>npm config prefix</code></li>
<li><code>npm install --save moduleName</code>：将模块安装到项目目录下，并在package文件的dependencies节点写入依赖，缩写为<code>-S</code></li>
<li><code>npm install --save-dev moduleName</code>：将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖，缩写为<code>-D</code></li>
</ul></li>
<li><p>创建登录页面</p>
<p>把没有用的初始化东西删掉</p>
<p>在源码目录中创建如下结构：</p>
<ul>
<li>assets：用于存放资源文件</li>
<li>components：用于存放Vue功能组件</li>
<li>views：用于存放Vue视图组件</li>
<li>router：用于存放vue-router配置</li>
</ul>
<p>创建首页视图，在<code>views</code>目录下创建一个名为<code>Main.vue</code>的视图组件</p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
    &lt;h1&gt;首页&lt;&#x2F;h1&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
    export default &#123;
        name: &quot;Main&quot;
    &#125;;
&lt;&#x2F;script&gt;

&lt;style&gt;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>创建登录页面视图<code>Login.vue</code></p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
    &lt;div&gt;
        &lt;el-form
            ref&#x3D;&quot;loginForm&quot;
            :model&#x3D;&quot;form&quot;
            :rules&#x3D;&quot;rules&quot;
            label-width&#x3D;&quot;80px&quot;
            class&#x3D;&quot;login-box&quot;
        &gt;
            &lt;h3 class&#x3D;&quot;login-title&quot;&gt;欢迎登录&lt;&#x2F;h3&gt;
            &lt;el-form-item label&#x3D;&quot;账号&quot; prop&#x3D;&quot;username&quot;&gt;
                &lt;el-input
                    type&#x3D;&quot;text&quot;
                    placeholder&#x3D;&quot;请输入账号&quot;
                    v-model&#x3D;&quot;form.username&quot;
                &gt;&lt;&#x2F;el-input&gt;
            &lt;&#x2F;el-form-item&gt;
            &lt;el-form-item label&#x3D;&quot;密码&quot; prop&#x3D;&quot;password&quot;&gt;
                &lt;el-input
                    type&#x3D;&quot;password&quot;
                    placeholder&#x3D;&quot;请输入密码&quot;
                    v-model&#x3D;&quot;form.password&quot;
                &gt;&lt;&#x2F;el-input&gt;
            &lt;&#x2F;el-form-item&gt;
            &lt;el-form-item&gt;
                &lt;el-button type&#x3D;&quot;primary&quot; v-on:click&#x3D;&quot;onSubmit(&#39;loginForm&#39;)&quot;
                    &gt;登录&lt;&#x2F;el-button
                &gt;
            &lt;&#x2F;el-form-item&gt;
        &lt;&#x2F;el-form&gt;

        &lt;el-dialog
            title&#x3D;&quot;温馨提示&quot;
            :visible.sync&#x3D;&quot;dialogVisible&quot;
            width&#x3D;&quot;30%&quot;
            :before-close&#x3D;&quot;handleClose&quot;
        &gt;
            &lt;span&gt;请输入账号和密码&lt;&#x2F;span&gt;
            &lt;span slot&#x3D;&quot;footer&quot; class&#x3D;&quot;dialog-footer&quot;&gt;
                &lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;dialogVisible &#x3D; false&quot;
                    &gt;确定&lt;&#x2F;el-button
                &gt;
            &lt;&#x2F;span&gt;
        &lt;&#x2F;el-dialog&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
    export default &#123;
        name: &quot;Login&quot;,
        data() &#123;
            return &#123;
                form: &#123;
                    username: &quot;&quot;,
                    password: &quot;&quot;,
                &#125;,

                &#x2F;&#x2F; 表单验证，需要在el-form-item元素中增加prop属性
                rules: &#123;
                    username: [
                        &#123;
                            required: true,
                            message: &quot;账号不可为空&quot;,
                            trigger: &quot;blur&quot;,
                        &#125;,
                    ],
                    password: [
                        &#123;
                            required: true,
                            message: &quot;密码不可为空&quot;,
                            trigger: &quot;blur&quot;,
                        &#125;,
                    ],
                &#125;,

                &#x2F;&#x2F; 对话框显示和隐藏
                dialogVisible: false,
            &#125;;
        &#125;,
        methods: &#123;
            onSubmit(formName) &#123;
                &#x2F;&#x2F; 为表单绑定验证功能
                this.$refs[formName].validate((valid) &#x3D;&gt; &#123;
                    if (valid) &#123;
                        &#x2F;&#x2F; 使用vue-router路由到指定页面，该方式称之为编程式导航
                        this.$router.push(&quot;&#x2F;main&quot;);
                    &#125; else &#123;
                        this.dialogVisible &#x3D; true;
                        return false;
                    &#125;
                &#125;);
            &#125;,
        &#125;,
    &#125;;
&lt;&#x2F;script&gt;

&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;
    .login-box &#123;
        border: 1px solid #dcdfe6;
        width: 350px;
        margin: 180px auto;
        padding: 35px 35px 15px 35px;
        border-radius: 5px;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        box-shadow: 0 0 25px #909399;
    &#125;
    .login-title &#123;
        text-align: center;
        margin: 0 auto 40px auto;
        color: #303133;
    &#125;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配置<code>router/index.js</code>路由</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span>

<span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'../views/Main'</span>
<span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">'../views/Login'</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    routes<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            path<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>
            component<span class="token operator">:</span> Login
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
            path<span class="token operator">:</span> <span class="token string">'/main'</span><span class="token punctuation">,</span>
            component<span class="token operator">:</span> Main
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>main.js</code>导入element-ui和路由</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span>

<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span>
<span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">"element-ui"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">'element-ui/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span>

Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* eslint-disable no-new */</span>
<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  el<span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>
  router<span class="token punctuation">,</span>
  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span> <span class="token comment">// ElementUI</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>App.vue</code>中显示路由视图</p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
    &lt;div id&#x3D;&quot;app&quot;&gt;
      &lt;router-link to&#x3D;&quot;&#x2F;login&quot;&gt;login&lt;&#x2F;router-link&gt;
      &lt;router-view&gt;&lt;&#x2F;router-view&gt;
    &lt;&#x2F;div&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
    export default &#123;
        name: &quot;App&quot;,
    &#125;;
&lt;&#x2F;script&gt;

&lt;style&gt;
    &#x2F;* #app &#123;
        font-family: &quot;Avenir&quot;, Helvetica, Arial, sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-align: center;
        color: #2c3e50;
        margin-top: 60px;
    &#125; *&#x2F;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>测试<code>npm run dev</code></p></li>
</ol>
<h1 id="嵌套路由">嵌套路由</h1>
<p>嵌套路由又称子路由，在实际应用中，通常由多层嵌套的组件组合而成。同样的，URL中各段动态路径也按某种结构对应嵌套的各层组件，例如：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;user&#x2F;foo&#x2F;profile                 &#x2F;user&#x2F;foo&#x2F;posts
+-----------------+               +-----------------+
| User            |               | User            |
| +-------------+ |               | +-------------+ |
| | Profile     | |  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; | | Posts       | |
| |             | |               | |             | |
| +-------------+ |               | +-------------+ |
+-----------------+               +-----------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span>

<span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'../views/Main'</span>
<span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">'../views/Login'</span>
<span class="token keyword">import</span> Profile <span class="token keyword">from</span> <span class="token string">'../views/user/Profile'</span>
<span class="token keyword">import</span> UserList <span class="token keyword">from</span> <span class="token string">'../views/user/List'</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    routes<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">&#123;</span>
            path<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>
            component<span class="token operator">:</span> Login
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#123;</span>
            path<span class="token operator">:</span> <span class="token string">'/main'</span><span class="token punctuation">,</span>
            component<span class="token operator">:</span> Main<span class="token punctuation">,</span>
            <span class="token comment">// 嵌套路由</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">&#123;</span>
                    path<span class="token operator">:</span> <span class="token string">'/user/profile'</span><span class="token punctuation">,</span>
                    component<span class="token operator">:</span> Profile
                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
                <span class="token punctuation">&#123;</span>
                    path<span class="token operator">:</span> <span class="token string">'/user/list'</span><span class="token punctuation">,</span>
                    component<span class="token operator">:</span> UserList
                <span class="token punctuation">&#125;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;router-link to&#x3D;&quot;&#x2F;user&#x2F;profile&quot;&gt;个人信息&lt;&#x2F;router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
    &lt;h1&gt;个人信息&lt;&#x2F;h1&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
    export default &#123;
        name: &quot;UserProfile&quot;
    &#125;;
&lt;&#x2F;script&gt;

&lt;style&gt;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参数传递和重定向">参数传递和重定向</h1>
<p>路由跳转有时候需要不同的用户显示不同的内容，这时候需要在跳转时传递一些参数。</p>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;router-link :to&#x3D;&quot;&#123; name: &#39;UserProfile&#39;, params: &#123; id: 1 &#125; &#125;&quot;&gt;个人信息&lt;&#x2F;router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>
    path<span class="token operator">:</span> <span class="token string">'/user/profile/:id'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'UserProfile'</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> Profile<span class="token punctuation">,</span>
    props<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;
    &lt;div&gt;
        &lt;h1&gt;个人信息&lt;&#x2F;h1&gt;
        &#123;&#123; $route.params.id &#125;&#125;
        &#123;&#123; id &#125;&#125;
    &lt;&#x2F;div&gt;
&lt;&#x2F;template&gt;

&lt;script&gt;
    export default &#123;
        name: &quot;UserProfile&quot;,
        props: [&quot;id&quot;],
    &#125;;
&lt;&#x2F;script&gt;

&lt;style&gt;
&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="和路由钩子">404和路由钩子</h1>
<p>去除地址里的#</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    mode<span class="token operator">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>404页面</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#123;</span>
    path<span class="token operator">:</span> <span class="token string">'*'</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> NotFound
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="路由钩子和异步请求">路由钩子和异步请求</h2>
<ul>
<li><code>beforeRouteEnter</code>：在进入路由前执行</li>
<li><code>beforeRouteLeave</code>：在离开路由前执行</li>
</ul>
<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;script&gt;
    export default &#123;
        name: &quot;UserProfile&quot;,
        props: [&quot;id&quot;],
        &#x2F;&#x2F; 过滤器
        beforeRouteEnter: (to, from, next) &#x3D;&gt; &#123;
            console.log(&quot;进入路由之前&quot;);
            next();
        &#125;,
        beforeRouteLeave: (to, from, next) &#x3D;&gt; &#123;
            console.log(&quot;离开路由之前&quot;);
            next();
        &#125;,
    &#125;;
&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li>to：路由将要跳转的路径信息</li>
<li>from：路径跳转前的路径信息</li>
<li>next：路由的控制参数
<ul>
<li>next()：跳入下一个页面</li>
<li>next('/path')：改变路由的跳转方向，使其跳转到另一个路由</li>
<li>next(false)：返回原来的页面</li>
<li>next((vm)=&gt;{})：仅在beforeRouteEnter中可用，vm是组件实例</li>
</ul></li>
</ul>
<p>在钩子函数中使用异步请求</p>
<ol type="1">
<li><p>安装axios</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev axios vue-axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p><code>main.js</code>中引用axios</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span>
<span class="token keyword">import</span> VueAxios <span class="token keyword">from</span> <span class="token string">'vue-axios'</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueAxios<span class="token punctuation">,</span> axios<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li>
<li><p>在<code>static</code>目录中放静态数据<code>data.json</code></p></li>
<li><p>钩子</p>
<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
    name<span class="token operator">:</span> <span class="token string">"UserProfile"</span><span class="token punctuation">,</span>
    props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 过滤器</span>
    <span class="token function-variable function">beforeRouteEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"进入路由之前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 加载数据</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">vm</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
            vm<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 进入路由之前执行getData</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">beforeRouteLeave</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"离开路由之前"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token function-variable function">getData</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
                method<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>
                url<span class="token operator">:</span> <span class="token string">'/static/mock/data.json'</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>矩阵微积分公式速查</title>
    <url>/2020/08/16/%E7%9F%A9%E9%98%B5%E5%BE%AE%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F%E9%80%9F%E6%9F%A5/</url>
    <content><![CDATA[<h1 id="向量求导">向量求导</h1>
<h2 id="向量对标量求导">向量对标量求导</h2>
<p>记向量<span class="math inline">\(\mathbf y: \mathbb R \to \mathbb R^m\)</span> <span class="math display">\[
\mathbf y=\left[\begin{array}{c} y_1 \\ y_2 \\ \vdots \\ y_m \end{array}\right]=\left[\begin{array}{c} f_1(x) \\ f_2(x) \\ \vdots \\ f_m(x) \end{array}\right]
\]</span> 则向量<span class="math inline">\(\mathbf y\)</span>关于标量<span class="math inline">\(x\)</span>的导数<span class="math inline">\(\frac{\partial \mathbf y}{\partial x}\)</span>有 <span class="math display">\[
\frac{\partial \mathbf{y}}{\partial x}=\left[\begin{array}{c}
\frac{\partial y_{1}}{\partial x} \\
\frac{\partial y_{2}}{\partial x} \\
\vdots \\
\frac{\partial y_{m}}{\partial x}
\end{array}\right]
\]</span> 这个导数也被称为向量<span class="math inline">\(\mathbf y\)</span>的<strong>切向量</strong>。比如，速度向量是位移向量的切向量，加速度向量是速度向量的切向量。</p>
<h2 id="标量对向量求导">标量对向量求导</h2>
<p>对标量<span class="math inline">\(y \in \mathbb R\)</span>和向量<span class="math inline">\(\mathbf x \in \mathbb R^n\)</span> <span class="math display">\[
\mathbf x=\left[\begin{array}{c}x_1\\x_2\\\vdots\\x_n\end{array}\right], y = f(\mathbf x)=f(x_1, x_2, \cdots, x_n)
\]</span> 则标量<span class="math inline">\(y\)</span>对向量<span class="math inline">\(\mathbf x\)</span>的导数<span class="math inline">\(\frac{\partial y}{\partial \mathbf x}\)</span> <span class="math display">\[
\frac{\partial y}{\partial \mathbf{x}}=\left[\begin{array}{llll}
\frac{\partial y}{\partial x_{1}} &amp; \frac{\partial y}{\partial x_{2}} &amp; \cdots &amp; \frac{\partial y}{\partial x_{n}}
\end{array}\right]
\]</span> 一个标量场<span class="math inline">\(y\)</span>在<span class="math inline">\(\mathbb R^n\)</span>空间中的<strong>梯度</strong>（gradient）是上述导数的转置。也就是说 <span class="math display">\[
\nabla y=\left[\begin{array}{c}
\frac{\partial y}{\partial x_{1}} \\
\vdots \\
\frac{\partial y}{\partial x_{n}}
\end{array}\right]=\left(\frac{\partial y}{\partial \mathbf{x}}\right)^{T}
\]</span> 标量函数<span class="math inline">\(y=f(\mathbf x)\)</span>在单位向量<span class="math inline">\(\mathbf u\)</span>方向上的<strong>方向导数</strong>可以用梯度来定义 <span class="math display">\[
\nabla_{\mathbf{u}} y=\nabla y \cdot \mathbf{u}=(\frac{\partial y}{\partial \mathbf x})^T\cdot \mathbf u=\frac{\partial y}{\partial \mathbf x} \mathbf u
\]</span></p>
<h2 id="向量对向量求导">向量对向量求导</h2>
<p>前面两种情况可以看作是向量对向量求导在其中一个是一维向量情况下的特例。</p>
<p>对向量<span class="math inline">\(\mathbf y \in \mathbb R^m\)</span>和向量<span class="math inline">\(\mathbf x \in \mathbb R^n\)</span>，向量函数<span class="math inline">\(\mathbf y=f(\mathbf x)\)</span> <span class="math display">\[
\mathbf x=\left[\begin{array}{c} x_1 \\ x_2 \\ \vdots \\ x_n \end{array}\right], \mathbf y=\left[\begin{array}{c} y_1 \\ y_2 \\ \vdots \\ y_m \end{array}\right]=\left[\begin{array}{c} f_1(\mathbf x) \\ f_2(\mathbf x) \\ \vdots \\ f_m(\mathbf x) \end{array}\right]=\left[\begin{array}{c} f_1(x_1, x_2, \cdots, x_n) \\ f_2(x_1, x_2, \cdots, x_n) \\ \vdots \\ f_m(x_1, x_2, \cdots, x_n) \end{array}\right]
\]</span> 则向量<span class="math inline">\(\mathbf y\)</span>对向量<span class="math inline">\(\mathbf x\)</span>的导数<span class="math inline">\(J=\frac{\partial \mathbf y}{\partial \mathbf x}\)</span> <span class="math display">\[
J=\frac{\partial \mathbf{y}}{\partial \mathbf{x}}=\left[\begin{array}{cccc}
\frac{\partial y_{1}}{\partial x_{1}} &amp; \frac{\partial y_{1}}{\partial x_{2}} &amp; \cdots &amp; \frac{\partial y_{1}}{\partial x_{n}} \\
\frac{\partial y_{2}}{\partial x_{1}} &amp; \frac{\partial y_{2}}{\partial x_{2}} &amp; \cdots &amp; \frac{\partial y_{2}}{\partial x_{n}} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
\frac{\partial y_{m}}{\partial x_{1}} &amp; \frac{\partial y_{m}}{\partial x_{2}} &amp; \cdots &amp; \frac{\partial y_{m}}{\partial x_{n}}
\end{array}\right]
\]</span> 这个导数也被称为<strong>雅可比矩阵</strong>（Jacobian matrix）。</p>
<p>可以这样记忆这些导数的排列方式。分子的偏微分是根据<span class="math inline">\(\mathbf y\)</span>的形状来排列的，而分母的偏微分是根据<span class="math inline">\(\mathbf x\)</span>的转置的形状来排列的。例如，<span class="math inline">\(\frac{\partial \mathbf y}{\partial x}\)</span>是列向量，而<span class="math inline">\(\frac{\partial y}{\partial \mathbf x}\)</span>是行向量（假设<span class="math inline">\(\mathbf x\)</span>和<span class="math inline">\(\mathbf y\)</span>是列向量，否则将翻转）。这种布局方式也被称为<strong>分子布局</strong>。与之相反的还有分母布局。</p>
<h1 id="矩阵求导">矩阵求导</h1>
<h2 id="矩阵对标量求导">矩阵对标量求导</h2>
<p>记标量<span class="math inline">\(x \in \mathbb R\)</span>，矩阵<span class="math inline">\(Y \in \mathbb R^{m \times n}\)</span>，则矩阵<span class="math inline">\(Y\)</span>对标量<span class="math inline">\(x\)</span>的导数 <span class="math display">\[
\frac{\partial Y}{\partial x}=\left[\begin{array}{cccc}
\frac{\partial y_{11}}{\partial x} &amp; \frac{\partial y_{12}}{\partial x} &amp; \cdots &amp; \frac{\partial y_{1 n}}{\partial x} \\
\frac{\partial y_{21}}{\partial x} &amp; \frac{\partial y_{22}}{\partial x} &amp; \cdots &amp; \frac{\partial y_{2 n}}{\partial x} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
\frac{\partial y_{m 1}}{\partial x} &amp; \frac{\partial y_{m 2}}{\partial x} &amp; \cdots &amp; \frac{\partial y_{m n}}{\partial x}
\end{array}\right]
\]</span> 和向量类似，得到的矩阵被称为<strong>切矩阵</strong>。</p>
<h2 id="标量对矩阵求导">标量对矩阵求导</h2>
<p>记矩阵<span class="math inline">\(X \in \mathbb R^{p \times q}\)</span>，标量<span class="math inline">\(y \in \mathbb R\)</span>，则标量<span class="math inline">\(y\)</span>对矩阵<span class="math inline">\(X\)</span>的导数 <span class="math display">\[
\frac{\partial y}{\partial X}=\left[\begin{array}{cccc}
\frac{\partial y}{\partial x_{11}} &amp; \frac{\partial y}{\partial x_{21}} &amp; \cdots &amp; \frac{\partial y}{\partial x_{p 1}} \\
\frac{\partial y}{\partial x_{12}} &amp; \frac{\partial y}{\partial x_{22}} &amp; \cdots &amp; \frac{\partial y}{\partial x_{p 2}} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
\frac{\partial y}{\partial x_{1 q}} &amp; \frac{\partial y}{\partial x_{2 q}} &amp; \cdots &amp; \frac{\partial y}{\partial x_{p q}}
\end{array}\right]
\]</span> 矩阵的标量函数的典型例子有矩阵的迹和行列式。在类似的向量演算中，这个导数通常写成如下形式。 <span class="math display">\[
\nabla_X y(X)=\frac{\partial y(X)}{\partial X}
\]</span></p>
<h2 id="标量对向量求二阶导">标量对向量求二阶导</h2>
<p>记向量<span class="math inline">\(\mathbf x \in \mathbb R^n\)</span>，函数<span class="math inline">\(f:\mathbb R^n \to \mathbb R\)</span>。则<span class="math inline">\(f\)</span>对于<span class="math inline">\(\mathbf x\)</span>的二阶导<span class="math inline">\(H=\frac{\partial ^2 f}{\partial \mathbf x^2}\)</span> <span class="math display">\[
H=\frac{\partial ^2 f}{\partial \mathbf x^2}=\left[\begin{array}{cccc}
\frac{\partial^{2} f}{\partial x_{1}^{2}} &amp; \frac{\partial^{2} f}{\partial x_{1} \partial x_{2}} &amp; \cdots &amp; \frac{\partial^{2} f}{\partial x_{1} \partial x_{n}} \\
\frac{\partial^{2} f}{\partial x_{2} \partial x_{1}} &amp; \frac{\partial^{2} f}{\partial x_{2}^{2}} &amp; \cdots &amp; \frac{\partial^{2} f}{\partial x_{2} \partial x_{n}} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
\frac{\partial^{2} f}{\partial x_{n} \partial x_{1}} &amp; \frac{\partial^{2} f}{\partial x_{n} \partial x_{2}} &amp; \cdots &amp; \frac{\partial^{2} f}{\partial x_{n}^{2}}
\end{array}\right]
\]</span> 这个矩阵也被称为<strong>海森矩阵</strong>（Hessian matrix）。海森矩阵和雅可比矩阵以及梯度有如下关系： <span class="math display">\[
H(f(\mathbf x))=J(\nabla f(\mathbf x))=\frac{\partial \left(\frac{\partial f}{\partial \mathbf x}\right)^T}{\partial \mathbf x}
\]</span></p>
<h1 id="恒等式">恒等式</h1>
<h2 id="向量对向量求导-1">向量对向量求导</h2>
<p>形如<span class="math inline">\(\frac{\partial \mathbf y}{\partial \mathbf x}\)</span></p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf a}{\partial \mathbf x}=\mathbf 0\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial \mathbf x}{\partial \mathbf x}=I\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial A \mathbf x}{\partial \mathbf x}=A\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf x^T A}{\partial \mathbf x^T}=A\)</span></td>
</tr>
<tr class="odd">
<td>标量<span class="math inline">\(a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial a\mathbf u}{\partial \mathbf x}=a\frac{\partial \mathbf u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(v=v(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial v \mathbf u}{\partial \mathbf x}=v\frac{\partial \mathbf u}{\partial \mathbf x}+\mathbf u\frac{\partial v}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial A \mathbf u}{\partial \mathbf x}=A\frac{\partial \mathbf u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (\mathbf u + \mathbf v)}{\partial \mathbf x}=\frac{\partial \mathbf u}{\partial \mathbf x}+\frac{\partial \mathbf v}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf g=\mathbf g(\mathbf u)\)</span></td>
<td><span class="math inline">\(\frac{\partial \mathbf g}{\partial \mathbf x}=\frac{\partial \mathbf g}{\partial \mathbf u}\frac{\partial \mathbf u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf g=\mathbf g(\mathbf u)\)</span>，向量<span class="math inline">\(\mathbf f=\mathbf f(\mathbf g)\)</span></td>
<td><span class="math inline">\(\frac{\partial \mathbf f}{\partial \mathbf x}=\frac{\partial \mathbf f}{\partial \mathbf g}\frac{\partial \mathbf g}{\partial \mathbf u}\frac{\partial \mathbf u}{\partial \mathbf x}\)</span></td>
</tr>
</tbody>
</table>
<h2 id="标量对向量求导-1">标量对向量求导</h2>
<p>形如<span class="math inline">\(\frac{\partial y}{\partial \mathbf x}=(\nabla_{\mathbf x}y)^T\)</span></p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>标量<span class="math inline">\(a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial a}{\partial \mathbf x}=\mathbf 0^T\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，标量<span class="math inline">\(u=u(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial a u}{\partial \mathbf x}=a\frac{\partial u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="odd">
<td>标量<span class="math inline">\(u=u(\mathbf x)\)</span>，标量<span class="math inline">\(v=v(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (u+v)}{\partial \mathbf x}=\frac{\partial u}{\partial \mathbf x} + \frac{\partial v}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(u=u(\mathbf x)\)</span>，标量<span class="math inline">\(v=v(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial u v}{\partial \mathbf x}=u\frac{\partial v}{\partial \mathbf x}+v\frac{\partial u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="odd">
<td>标量<span class="math inline">\(u=u(\mathbf x)\)</span>，标量<span class="math inline">\(g=g(u)\)</span></td>
<td><span class="math inline">\(\frac{\partial g}{\partial \mathbf x}=\frac{\partial g}{\partial u}\frac{\partial u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(u=u(\mathbf x)\)</span>，标量<span class="math inline">\(g=g(u)\)</span>，标量<span class="math inline">\(f=f(g)\)</span></td>
<td><span class="math inline">\(\frac{\partial f}{\partial \mathbf x}=\frac{\partial f}{\partial g}\frac{\partial g}{\partial u}\frac{\partial u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial \mathbf u \cdot \mathbf v}{\partial \mathbf x}=\frac{\partial \mathbf u^T \mathbf v}{\partial \mathbf x}=\mathbf u^{T} \frac{\partial \mathbf v}{\partial \mathbf x}+\mathbf v^{T} \frac{\partial \mathbf u}{\partial \mathbf x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(\mathbf x)\)</span>，矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf{x}\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf{u}^T A \mathbf{v}}{\partial \mathbf{x}}=\mathbf{u}^{T} A \frac{\partial \mathbf{v}}{\partial \mathbf{x}}+\mathbf{v}^{T} A^{T} \frac{\partial \mathbf{u}}{\partial \mathbf{x}}\)</span></td>
</tr>
<tr class="odd">
<td></td>
<td><span class="math inline">\(\frac{\partial ^2 f}{\partial \mathbf x \partial \mathbf x^T}=H^T\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial(\mathbf{a} \cdot \mathbf{x})}{\partial \mathbf{x}} =\frac{\partial(\mathbf{x} \cdot \mathbf{a})}{\partial \mathbf{x}}=\frac{\partial \mathbf{a}^{T} \mathbf{x}}{\partial \mathbf{x}} =\frac{\partial \mathbf{x}^{T} \mathbf{a}}{\partial \mathbf{x}}=\mathbf a^T\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，向量<span class="math inline">\(\mathbf b\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf b^T A \mathbf x}{\partial \mathbf x}=\mathbf b^T A\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf x^T A \mathbf x}{\partial \mathbf x}=\mathbf x^T (A+A^T)\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，并且矩阵<span class="math inline">\(A\)</span>是对称矩阵（即<span class="math inline">\(A=A^T\)</span>）</td>
<td><span class="math inline">\(\frac{\partial \mathbf x^T A \mathbf x}{\partial \mathbf x}=2 \mathbf x^T A\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial \|\mathbf{x} \|^{2}}{\partial \mathbf{x}}=\frac{\partial \mathbf x \cdot \mathbf x}{\partial \mathbf x}=\frac{\partial \mathbf x^T \mathbf x}{\partial \mathbf x}=2 \mathbf x^T\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数，向量<span class="math inline">\(\mathbf u=\mathbf u(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial(\mathbf{a} \cdot \mathbf{u})}{\partial \mathbf{x}}=\frac{\partial \mathbf{a}^{T} \mathbf{u}}{\partial \mathbf{x}}=\mathbf{a}^{T} \frac{\partial \mathbf{u}}{\partial \mathbf{x}}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf a, \mathbf b\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf{a}^{T} \mathbf{x} \mathbf{x}^{T} \mathbf{b}}{\partial \mathbf{x}}=\mathbf{x}^{T}\left(\mathbf{a} \mathbf{b}^{T}+\mathbf{b a}^{T}\right)\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(A, \mathbf b, C, D, \mathbf e\)</span> 不是向量 <span class="math inline">\(\mathbf x\)</span> 的函数</td>
<td><span class="math inline">\(\frac{\partial(A \mathbf{x}+\mathbf{b})^T \mathbf{C}(\mathbf{D} \mathbf{x}+\mathbf{e})}{\partial \mathbf{x}}=(\mathbf{D} \mathbf{x}+\mathbf{e})^T \mathbf{C}^TA+(A \mathbf{x}+\mathbf{b})^T \mathbf{C D}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf a\)</span>不是向量<span class="math inline">\(\mathbf x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial\|\mathbf{x}-\mathbf{a}\|}{\partial \mathbf{x}}=\frac{(\mathbf{x}-\mathbf{a})^T}{\|\mathbf{x}-\mathbf{a}\|}\)</span></td>
</tr>
</tbody>
</table>
<h2 id="向量对标量求导-1">向量对标量求导</h2>
<p>形如<span class="math inline">\(\frac{\partial \mathbf y}{\partial x}\)</span></p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf a\)</span>不是标量<span class="math inline">\(x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf{a}}{\partial x}=\mathbf{0}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(a\)</span>不是标量<span class="math inline">\(x\)</span>的函数，向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial a \mathbf{u}}{\partial x}=a \frac{\partial \mathbf{u}}{\partial x}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是标量<span class="math inline">\(x\)</span>的函数，向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial A \mathbf{u}}{\partial x}=A \frac{\partial \mathbf{u}}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial \mathbf{u}^T}{\partial x}=\left( \frac{\partial \mathbf{u}}{\partial x}\right)^T\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial(\mathbf{u}+\mathbf{v})}{\partial x}=\frac{\partial \mathbf{u}}{\partial x}+\frac{\partial \mathbf{v}}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial\left(\mathbf{u}^{T} \mathbf{v}\right)}{\partial x}=\left(\frac{\partial \mathbf{u}}{\partial x}\right)^{T} \mathbf{v}+\mathbf{u}^{T} \frac{\partial \mathbf{v}}{\partial x}\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span>，向量<span class="math inline">\(\mathbf g=\mathbf g(\mathbf u)\)</span></td>
<td><span class="math inline">\(\frac{\partial \mathbf{g}(\mathbf{u})}{\partial x}=\frac{\partial \mathbf{g}(\mathbf{u})}{\partial \mathbf{u}} \frac{\partial \mathbf{u}}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(\mathbf x)\)</span></td>
<td><span class="math inline">\(\frac{\partial(U \mathbf{v})}{\partial x}=\frac{\partial U}{\partial x} \mathbf{v}+U \frac{\partial \mathbf{v}}{\partial x}\)</span></td>
</tr>
</tbody>
</table>
<h2 id="标量对矩阵求导-1">标量对矩阵求导</h2>
<p>形如<span class="math inline">\(\frac{\partial y}{\partial X}\)</span></p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>标量<span class="math inline">\(a\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial a}{\partial X}=\mathbf{0}^{T}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(a\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数，标量<span class="math inline">\(u=u(X)\)</span></td>
<td><span class="math inline">\(\frac{\partial a u}{\partial X}=\quad a \frac{\partial u}{\partial X}\)</span></td>
</tr>
<tr class="odd">
<td>标量<span class="math inline">\(u=u(X)\)</span>，标量<span class="math inline">\(v=v(X)\)</span></td>
<td><span class="math inline">\(\frac{\partial(u+v)}{\partial X}=\frac{\partial u}{\partial X}+\frac{\partial v}{\partial X}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(u=u(X)\)</span>，标量<span class="math inline">\(v=v(X)\)</span></td>
<td><span class="math inline">\(\frac{\partial u v}{\partial X}=u \frac{\partial v}{\partial X}+v \frac{\partial u}{\partial X}\)</span></td>
</tr>
<tr class="odd">
<td>标量<span class="math inline">\(u=u(X)\)</span>，标量<span class="math inline">\(g=g(u)\)</span></td>
<td><span class="math inline">\(\frac{\partial g(u)}{\partial X}=\frac{\partial g(u)}{\partial u} \frac{\partial u}{\partial X}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf a, \mathbf b\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf{a}^{T} X \mathbf{b}}{\partial X}=\mathbf{b a}^T\)</span></td>
</tr>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf a, \mathbf b\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf{a}^{T} X^T \mathbf{b}}{\partial X}=\mathbf{ab}^T\)</span></td>
</tr>
<tr class="even">
<td><span class="math inline">\(\mathbf a, \mathbf b, C\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial(X \mathbf{a}+\mathbf{b})^{T} C(X \mathbf{a}+\mathbf{b})}{\partial X}=\left(\left(C+C^{T}\right)(X \mathbf{a}+\mathbf{b}) \mathbf{a}^{T}\right)^T\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\mathbf a, \mathbf b, C\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial(X \mathbf{a})^{T} C(X \mathbf{b})}{\partial X}=\left(C X \mathbf{b} \mathbf{a}^{T}+C^T X \mathbf{a} \mathbf{b}^T\right)^{T}\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(X)}{\partial X}=I\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(X), V=V(X)\)</span></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(U+V)}{\partial X}=\frac{\partial \operatorname{tr}(U)}{\partial X}+\frac{\partial \operatorname{tr}(V)}{\partial X}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(a\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数，矩阵<span class="math inline">\(U=U(X)\)</span></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(a U)}{\partial X}=a \frac{\partial \operatorname{tr}(U)}{\partial X}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(A X)}{\partial X}=\frac{\partial \operatorname{tr}(X A)}{\partial X}=A\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(A X^T)}{\partial X}=\frac{\partial \operatorname{tr}(X^T A)}{\partial X}=A^T\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(X^T A X\right)}{\partial X}=X^T\left(A+A^T\right)\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(X^{-1} A\right)}{\partial X}=-X^{-1} AX^{-1}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A, B\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(AXB)}{\partial X}=\frac{\partial \operatorname{tr}(B A X)}{\partial X}=BA\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A, B, C\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(AXBX^{T} C\right)}{\partial X}=BX^T CA+B^T X^T A^T C^T\)</span></td>
</tr>
<tr class="odd">
<td></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(X^{n}\right)}{\partial X}=n X^{n-1}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(AX^{n}\right)}{\partial X}=\sum_{i=0}^{n-1} X^{i} AX^{n-i-1}\)</span></td>
</tr>
<tr class="odd">
<td></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}\left(e^{X}\right)}{\partial X}= e^{X}\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(\sin (X))}{\partial X}= \cos (X)\)</span></td>
</tr>
<tr class="odd">
<td></td>
<td><span class="math inline">\(\frac{\partial|X|}{\partial X}=|X| X^{-1}\)</span></td>
</tr>
<tr class="even">
<td>标量<span class="math inline">\(a\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \ln |a X|}{\partial X}=X^{-1}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A, B\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial |AXB|}{\partial X}=|AXB|X^{-1}\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial|X^n|}{\partial X}=n|X^n| X^{-1}\)</span></td>
</tr>
<tr class="odd">
<td><span class="math inline">\(X^{\dagger}\)</span>表示<span class="math inline">\(X\)</span>的广义逆</td>
<td><span class="math inline">\(\frac{\partial \ln |X^TX|}{\partial X}=2X^{\dagger}\)</span></td>
</tr>
<tr class="even">
<td></td>
<td><span class="math inline">\(\frac{\partial \ln |X^TX|}{\partial X^\dagger}=-2X\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数，矩阵<span class="math inline">\(X\)</span>是可逆方阵</td>
<td><span class="math inline">\(\frac{\partial\left|X^T A X\right|}{\partial X}=2\left|X^T A X\right| X^{-1}=2\left|X^T\right||A||X| X^{-1}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数，矩阵<span class="math inline">\(X\)</span>不是方阵，矩阵<span class="math inline">\(A\)</span>是对称矩阵</td>
<td><span class="math inline">\(\frac{\partial\left|X^T A X\right|}{\partial X}= 2\left|X^T A X\right|\left(X^T A^T X\right)^{-1} X^T A^T\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是矩阵<span class="math inline">\(X\)</span>的函数，矩阵<span class="math inline">\(X\)</span>不是方阵，矩阵<span class="math inline">\(A\)</span>不是对称矩阵</td>
<td><span class="math inline">\(\frac{\partial\left|X^T A X\right|}{\partial X}= \left|X^T A X\right|\left(\left(X^T A^T X\right)^{-1} X^T A+\left(X^T A^T X\right)^{-1} X^T A^T\right)\)</span></td>
</tr>
</tbody>
</table>
<h2 id="矩阵对标量求导-1">矩阵对标量求导</h2>
<p>形如<span class="math inline">\(\frac{\partial Y}{\partial x}\)</span></p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，标量<span class="math inline">\(a\)</span>不是标量<span class="math inline">\(x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial a U}{\partial x}=a\frac{\partial U}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A, B\)</span>不是标量<span class="math inline">\(x\)</span>的函数，矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial A U B}{\partial x}=A\frac{\partial U}{\partial x} B\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，矩阵<span class="math inline">\(V=V(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (U + V)}{\partial x} = \frac{\partial U}{\partial x}+\frac{\partial V}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，矩阵<span class="math inline">\(V=V(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (U V)}{\partial x} = U \frac{\partial V}{\partial x}+\frac{\partial U}{\partial x} V\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，矩阵<span class="math inline">\(V=V(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (U \otimes V)}{\partial x} = U \otimes \frac{\partial V}{\partial x}+\frac{\partial U}{\partial x} \otimes V\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x)\)</span>，矩阵<span class="math inline">\(V=V(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (U \circ V)}{\partial x} = U \circ \frac{\partial V}{\partial x}+\frac{\partial U}{\partial x} \circ V\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial U^{-1}}{\partial x}=-U^{-1}\frac{\partial U}{\partial x}U^{-1}\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x,y)\)</span></td>
<td><span class="math inline">\(\frac{\partial^{2} U^{-1}}{\partial x \partial y}=U^{-1}\left(\frac{\partial U}{\partial x} U^{-1} \frac{\partial U}{\partial y}-\frac{\partial^{2} U}{\partial x \partial y}+\frac{\partial U}{\partial y} U^{-1} \frac{\partial U}{\partial x}\right) U^{-1}\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是标量<span class="math inline">\(x\)</span>的函数，<span class="math inline">\(\mathbf g(X)\)</span>是具有标量系数的任意多项式或多项式级数定义的任何矩阵函数（例如<span class="math inline">\(e^X\)</span>，<span class="math inline">\(\sin(X)\)</span>，<span class="math inline">\(\cos(X)\)</span>，<span class="math inline">\(\ln(X)\)</span>等）；<span class="math inline">\(g(x)\)</span>是对应的标量函数，<span class="math inline">\(g&#39;(x)\)</span>是其导数，<span class="math inline">\(\mathbf g&#39;(X)\)</span>是对应的矩阵函数</td>
<td><span class="math inline">\(\frac{\partial \mathbf g(xA)}{\partial x}=A \mathbf g&#39;(xA)=\mathbf g&#39;(xA)A\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是标量<span class="math inline">\(x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial e^{xA}}{\partial x}=Ae^{xA}=e^{xA}A\)</span></td>
</tr>
</tbody>
</table>
<h2 id="标量对标量求导">标量对标量求导</h2>
<p>形如<span class="math inline">\(\frac{\partial y}{\partial x}\)</span></p>
<h3 id="涉及向量">涉及向量</h3>
<table>
<colgroup>
<col style="width: 49%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial g(\mathbf u)}{\partial x}=\frac{\partial g(\mathbf u)}{\partial \mathbf u} \frac{\partial \mathbf u}{\partial x}\)</span></td>
</tr>
<tr class="even">
<td>向量<span class="math inline">\(\mathbf u=\mathbf u(x)\)</span>，向量<span class="math inline">\(\mathbf v=\mathbf v(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial (\mathbf u \cdot \mathbf v)}{\partial x}=\mathbf u \cdot \frac{\partial \mathbf v}{\partial x}+\frac{\partial \mathbf u}{\partial x} \cdot \mathbf v\)</span></td>
</tr>
</tbody>
</table>
<h3 id="涉及矩阵">涉及矩阵</h3>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>条件</th>
<th>表达式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial|U|}{\partial x}=|U| \operatorname{tr}\left(U^{-1} \frac{\partial U}{\partial x}\right)\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial \ln|U|}{\partial x}= \operatorname{tr}\left(U^{-1} \frac{\partial U}{\partial x}\right)\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial^{2}|U|}{\partial x^{2}}=|U|\left[\operatorname{tr}\left(U^{-1} \frac{\partial^{2} U}{\partial x^{2}}\right)+\operatorname{tr}^{2}\left(U^{-1} \frac{\partial U}{\partial x}\right)-\operatorname{tr}\left(\left(U^{-1} \frac{\partial U}{\partial x}\right)^{2}\right)\right]\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(U=U(x)\)</span></td>
<td><span class="math inline">\(\frac{\partial g(U)}{\partial x}= \operatorname{tr}\left(\frac{\partial g(U)}{\partial U} \frac{\partial U}{\partial x}\right)\)</span></td>
</tr>
<tr class="odd">
<td>矩阵<span class="math inline">\(A\)</span>不是标量<span class="math inline">\(x\)</span>的函数，<span class="math inline">\(\mathbf g(X)\)</span>是具有标量系数的任意多项式或多项式级数定义的任何矩阵函数（例如<span class="math inline">\(e^X\)</span>，<span class="math inline">\(\sin(X)\)</span>，<span class="math inline">\(\cos(X)\)</span>，<span class="math inline">\(\ln(X)\)</span>等）；<span class="math inline">\(g(x)\)</span>是对应的标量函数，<span class="math inline">\(g&#39;(x)\)</span>是其导数，<span class="math inline">\(\mathbf g&#39;(X)\)</span>是对应的矩阵函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(\mathbf{g}(x A))}{\partial x}=\operatorname{tr}\left(A \mathbf{g}&#39;(x A)\right)\)</span></td>
</tr>
<tr class="even">
<td>矩阵<span class="math inline">\(A\)</span>不是标量<span class="math inline">\(x\)</span>的函数</td>
<td><span class="math inline">\(\frac{\partial \operatorname{tr}(e^{x A})}{\partial x}=\operatorname{tr}\left(A e^{x A}\right)\)</span></td>
</tr>
</tbody>
</table>
<h1 id="微分">微分</h1>
<p>直接进行矩阵求导是一件麻烦事，原因在于很多时候，链式法则和乘法法则并不适用，里面混杂着很多转置运算。</p>
<p>另一种方式由Thomas P. Minka在《Old and New Matrix Algebra Useful for Statistics》中提出。思路是不直接求导，而是先写出矩阵的微分形式，然后利用微分和导数的关系，得出导数。</p>
<p>我们首先从标量中的微分说起。标量中的微分定义如下：</p>
<p>设<span class="math inline">\(y=f(x)\)</span>在<span class="math inline">\((a,b)\)</span>有定义，如果对给定的<span class="math inline">\(x \in (a, b)\)</span>，有 <span class="math display">\[
\Delta y = f(x+\Delta x)-f(x)=A \Delta x + \omicron (\Delta x),(\Delta x \to 0)
\]</span> 其中<span class="math inline">\(A\)</span>与<span class="math inline">\(\Delta x\)</span>无关，则称<span class="math inline">\(f(x)\)</span>在<span class="math inline">\(x\)</span>点可微，并称<span class="math inline">\(A\Delta x\)</span>为函数<span class="math inline">\(f(x)\)</span>在<span class="math inline">\(x\)</span>点的微分，记为 <span class="math display">\[
\mathrm dy=A\Delta x
\]</span> 由于<span class="math inline">\(\mathrm d x=\Delta x\)</span>，因此<span class="math inline">\(\mathrm dy=A\mathrm dx\)</span>。</p>
<p>上面的定义可以直接推广到向量中。也就是说，对于满足某些连续性的向量函数<span class="math inline">\(\mathbf y=f(\mathbf x)\)</span>，有 <span class="math display">\[
\Delta \mathbf y=\mathbf y(\mathbf x+\mathrm d\mathbf x)-\mathbf y(\mathbf x)=A \mathrm d \mathbf x + \omicron(\mathbf x)
\]</span> 成立。因此也有<span class="math inline">\(\mathrm d \mathbf y=A \mathrm d \mathbf x\)</span>，<span class="math inline">\(A\)</span>就是<span class="math inline">\(\mathbf y\)</span>对<span class="math inline">\(\mathbf x\)</span>的导数，也叫做雅可比矩阵，记为<span class="math inline">\(J_{\mathbf x \to \mathbf y}\)</span>。雅可比矩阵的转置被认为是<span class="math inline">\(\mathbf y\)</span>的梯度，记为<span class="math inline">\(\nabla \mathbf y\)</span>。一般来说，雅可比矩阵用于微积分，而梯度则用于优化。</p>
<p>因此，涉及矩阵的任何表达式的导数可以通过两个步骤来计算：</p>
<ol type="1">
<li>计算微分。</li>
<li>将结果整理为规范形式。</li>
</ol>
<p>表达式的微分可以通过迭代应用以下规则来计算：</p>
<ul>
<li><p>常量： <span class="math display">\[
\mathrm{d} A =0 \text { (for constant } A)
\]</span></p></li>
<li><p>数乘： <span class="math display">\[
\mathrm{d}(a X) =a \mathrm{d} X
\]</span></p></li>
<li><p>加减法： <span class="math display">\[
\mathrm{d}(X \pm Y) =\mathrm{d} X \pm \mathrm{d} Y
\]</span></p></li>
<li><p>矩阵乘法： <span class="math display">\[
\mathrm{d}(X Y) =(\mathrm{d} X) Y+X \mathrm{d} Y
\]</span></p></li>
<li><p>排列变换： <span class="math display">\[
\mathrm{d} X^{\star} =(\mathrm{d} X)^{\star}
\]</span> 最后的符号<span class="math inline">\(\star\)</span>是指重新排列元素的任何运算符，例如转置、共轭转置和向量化。</p></li>
<li><p>迹： <span class="math display">\[
\mathrm{d}(\operatorname{tr}(X)) =\operatorname{tr}(\mathrm{d} X)
\]</span></p></li>
<li><p>行列式： <span class="math display">\[
\begin{eqnarray*}
\mathrm{d}{|X|} &amp;=&amp; \operatorname{tr}\left(\operatorname{adj}(X) \mathrm{d}X\right) \\
\mathrm{d}|X| &amp;=&amp; \operatorname{tr}\left(|X|X^{-1} \mathrm{d} X\right)，当X可逆时
\end{eqnarray*}
\]</span> <span class="math inline">\(\mathrm d |X|\)</span>的推导比较复杂，首先需要一条引理：</p>
<p><strong>引理：</strong><span class="math inline">\(\frac{\partial \mathrm d|X|}{\partial x_{ij}}=\operatorname{adj}(X)_{ji}\)</span></p>
<p>证明：</p>
<p>令算符<span class="math inline">\(+_{ij}\)</span>表示对矩阵中位置<span class="math inline">\((i, j)\)</span>的元素增加某个量。 <span class="math display">\[
\begin{eqnarray*}
\frac{\partial \mathrm d|X|}{\partial x_{ij}} &amp;=&amp; \lim_{\varepsilon \to 0} \frac{|X+_{ij} \varepsilon|-|X|}{\varepsilon} \\
&amp;=&amp; \lim_{\varepsilon \to 0} \frac{\sum_{\underset{k \neq j}{k=1}}^n x_{ik}(-1)^{i+k}|X_{ik}|+(x_{ij}+\varepsilon)(-1)^{i+j}|X_{ij}|-\sum_{k=1}^n x_{ik}(-1)^{i+k}|X_{ik}|}{\varepsilon} \\
&amp;=&amp; \lim_{\varepsilon \to 0} \frac{\sum_{k=1}^n x_{ik}(-1)^{i+k}|X_{ik}|+\varepsilon(-1)^{i+j}|X_{ij}|-\sum_{k=1}^n x_{ik}(-1)^{i+k}|X_{ik}|}{\varepsilon} \\
&amp;=&amp; \lim_{\varepsilon \to 0} (-1)^{i+j}|X_{ij}| \\
&amp;=&amp; (-1)^{i+j}|X_{ij}| \\
&amp;=&amp; \operatorname{adj}(X)_{ji}
\end{eqnarray*}
\]</span> 根据全微分的性质，<span class="math inline">\(\mathrm d f=\sum_i \frac{\partial f}{\partial x_i} \mathrm dx\)</span>，由此可以推导出<span class="math inline">\(\mathrm d|X|\)</span>： <span class="math display">\[
\begin{eqnarray*}
\mathrm d|X| &amp;=&amp; \sum_{i=1}^n \sum_{j=1}^n \frac{\partial |X|}{\partial x_{ij}} \mathrm dx_{ij} \\
&amp;=&amp; \sum_{i=1}^n \sum_{j=1}^n \operatorname{adj}(X)_{ji} \mathrm dx_{ij} \\
&amp;=&amp; \operatorname{tr}(\operatorname{adj}(X)\mathrm dX)
\end{eqnarray*}
\]</span> 当<span class="math inline">\(X\)</span>可逆时，有<span class="math inline">\(X^{-1}=\frac{\operatorname{adj}(X)}{|X|}\)</span>，因此 <span class="math display">\[
\begin{eqnarray*}
\mathrm d|X| &amp;=&amp; \operatorname{tr}(\operatorname{adj}(X)\mathrm dX) \\
&amp;=&amp; \operatorname{tr}(|X|X^{-1}\mathrm dX) \\
&amp;=&amp; |X|\operatorname{tr}(X^{-1}\mathrm dX) \\
\end{eqnarray*}
\]</span></p></li>
<li><p>逆： <span class="math display">\[
\mathrm{d} X^{-1} =-X^{-1}(\mathrm{d} X) X^{-1}
\]</span> <span class="math inline">\(\mathrm dX^{-1}\)</span>的推导： <span class="math display">\[
0=\mathrm dI=\mathrm dX^{-1}X=(\mathrm dX^{-1})X+X^{-1}\mathrm dX
\]</span> 从中可以推导出<span class="math inline">\(\mathrm dX^{-1}\)</span>。</p></li>
<li><p><a href="#克罗內克积">克罗內克积</a>： <span class="math display">\[
\mathrm{d}(X \otimes Y)=(\mathrm{d} X) \otimes Y+X \otimes \mathrm{d} Y
\]</span></p></li>
<li><p><a href="#哈达玛积">哈达玛积</a>： <span class="math display">\[
\mathrm{d}(X \circ Y) =(\mathrm{d} X) \circ Y+X \circ \mathrm{d} Y
\]</span></p></li>
<li><p>逐元素函数： <span class="math display">\[
\mathrm d f(X)= f&#39;(X)\circ \mathrm dX
\]</span> <span class="math inline">\(f(X)=[f(x_{ij})]\)</span>是逐元素标量函数运算，<span class="math inline">\(f&#39;(X)=[f&#39;(x_{ij})]\)</span>是逐元素求导数。例如：</p>
<p><span class="math inline">\(X=\left[\begin{array}{cc} x_{11} &amp; x_{12} \\ x_{21} &amp; x_{22} \end{array}\right]\)</span>，<span class="math inline">\(\mathrm d \sin (X)=\left[\begin{array}{cc} \cos x_{11} \mathrm d x_{11} &amp; \cos x_{12} \mathrm d x_{12} \\ \cos x_{21} \mathrm d x_{21} &amp; \cos x_{22} \mathrm d x_{22} \end{array}\right]=\cos (X) \circ \mathrm d X\)</span>。</p></li>
</ul>
<p>大部分规则的证明可以通过<span class="math inline">\(F(X+\mathrm dX)-F(X)\)</span>并取线性部分得到。比如： <span class="math display">\[
\begin{eqnarray*}
F(X, Y)=XY:\\
&amp; &amp; F(X+\mathrm dX, Y+\mathrm dY)-F(X, Y) \\
&amp;=&amp; (X+\mathrm dX)(Y+\mathrm dY)-XY \\
&amp;=&amp; XY+\mathrm dXY+X\mathrm dY+\mathrm dX \mathrm dY - XY\\
&amp;=&amp; \mathrm dXY+X\mathrm dY+o(\mathrm P)
\end{eqnarray*}
\]</span> 利用这些性质，便可以使用链式法则得出一些比较复杂的微分，比如： <span class="math display">\[
\begin{aligned}
&amp;\mathrm d(AX+Y)\\
=&amp;\mathrm d(AX)+\mathrm d(Y)\\
=&amp;(\mathrm dA)X+A\mathrm dX+\mathrm dY\\
=&amp;A\mathrm dX+\mathrm dY
\end{aligned}
\]</span></p>
<p>求出微分后，下一步就是将微分整理成下面的六种形式之一。</p>
<table>
<colgroup>
<col style="width: 10%" />
<col style="width: 34%" />
<col style="width: 34%" />
<col style="width: 20%" />
</colgroup>
<thead>
<tr class="header">
<th>自变量</th>
<th>标量</th>
<th>向量</th>
<th>矩阵</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>标量</td>
<td><span class="math inline">\(\mathrm dy=a\mathrm dx\)</span></td>
<td><span class="math inline">\(\mathrm d \mathbf y=\mathbf a\mathrm dx\)</span></td>
<td><span class="math inline">\(\mathrm dY=A\mathrm dx\)</span></td>
</tr>
<tr class="even">
<td>向量</td>
<td><span class="math inline">\(\mathrm dy=\mathbf a\mathrm d \mathbf x\)</span></td>
<td><span class="math inline">\(\mathrm d\mathbf y=A\mathrm d\mathbf x\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td>矩阵</td>
<td><span class="math inline">\(\mathrm dy=tr(A\mathrm dX)\)</span></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>其对应的导数如下表</p>
<table>
<colgroup>
<col style="width: 8%" />
<col style="width: 34%" />
<col style="width: 34%" />
<col style="width: 22%" />
</colgroup>
<thead>
<tr class="header">
<th>自变量</th>
<th>标量</th>
<th>向量</th>
<th>矩阵</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>标量</td>
<td><span class="math inline">\(\frac{\mathrm dy}{\mathrm dx}=a\)</span></td>
<td><span class="math inline">\(\frac{\mathrm d \mathbf y}{\mathbf dx}=\mathbf a\)</span></td>
<td><span class="math inline">\(\frac{\mathrm dY}{\mathrm dx}=A\)</span></td>
</tr>
<tr class="even">
<td>向量</td>
<td><span class="math inline">\(\frac{\mathrm dy}{\mathrm d \mathbf x}=\mathbf a\)</span></td>
<td><span class="math inline">\(\frac{\mathrm d\mathbf y}{\mathrm d\mathbf x}=A\)</span></td>
<td></td>
</tr>
<tr class="odd">
<td>矩阵</td>
<td><span class="math inline">\(\frac{\mathrm dy}{\mathrm dX}=A\)</span></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>注意到矩阵<span class="math inline">\(Y\)</span>对矩阵<span class="math inline">\(X\)</span>的导数无法用矩阵来表示，因此通常会转化成<span class="math inline">\(\frac{\mathbf d \operatorname{vec}(Y)}{\mathbf d \operatorname{vec}(X)}\)</span>，如果微分的目的是使导数等于零，则此变换不会影响结果。</p>
<p>在整理过程中一些特别有用的技巧：</p>
<ul>
<li>标量套上迹：<span class="math inline">\(y=\operatorname{tr}(y)\)</span>。</li>
<li>转置：<span class="math inline">\(\operatorname{tr}\left(A^{T}\right)=\operatorname{tr}(A)\)</span>。</li>
<li>加减法：<span class="math inline">\(\operatorname{tr}(A \pm B)=\operatorname{tr}(A) \pm \operatorname{tr}(B)\)</span>。</li>
<li>数乘：<span class="math inline">\(\operatorname{tr}(aA)=a\operatorname{tr}(A)\)</span>。</li>
<li>矩阵乘法：<span class="math inline">\(\operatorname{tr}(AB)=\operatorname{tr}(BA)\)</span>。</li>
<li>矩阵乘法、逐元素乘法交换：<span class="math inline">\(\operatorname{tr}\left(A^{T}(B \circ C)\right)=\operatorname{tr}\left((A \circ B)^{T} C\right)\)</span>，其中<span class="math inline">\(A,B,C\)</span>尺寸相同，两侧都等于<span class="math inline">\(\sum_{i, j}a_{ij}b_{ij}c_{ij}\)</span>。</li>
</ul>
<p>下面举几个例子：</p>
<ul>
<li><p><span class="math display">\[
\frac{\mathrm d}{\mathrm d \mathbf x}\operatorname{tr}(AXB)=BA
\]</span></p>
<p>令<span class="math inline">\(y=tr(AXB)\)</span>，则 <span class="math display">\[
\mathrm d y=\mathrm d \operatorname{tr}(AXB)=\mathrm d \operatorname{tr}(BAX)=\operatorname{tr}(\mathrm d(BAX))=\operatorname{tr}((BA)\mathrm dX)
\]</span></p></li>
<li><p><span class="math display">\[
\frac{\mathrm d}{\mathrm dX}\operatorname{tr}(AX^TBXC)=CAX^TB+A^TC^TX^TB^T
\]</span></p>
<p>因为 <span class="math display">\[
\begin{eqnarray*}
\mathrm d \operatorname{tr}(AX^TBXC)&amp;=&amp;\operatorname{tr}(\mathrm d(AX^TBXC))\\
&amp;=&amp;\operatorname{tr}(\mathrm d(AX^T)BXC+AX^T\mathrm d(BXC)) \\
&amp;=&amp;\operatorname{tr}(A(\mathrm dX)^TBXC+AX^TB\mathrm dX C) \\
&amp;=&amp;\operatorname{tr}(A(\mathrm dX)^TBXC)+\operatorname{tr}(AX^TB\mathrm dX C) \\
&amp;=&amp;\operatorname{tr}(A^TC^TX^TB^T\mathrm dX)+\operatorname{tr}(CAX^TB\mathrm dX) \\
&amp;=&amp;\operatorname{tr}((A^TC^TX^TB^T+CAX^TB)\mathrm dX) \\
\end{eqnarray*}
\]</span></p></li>
</ul>
<h2 id="克罗內克积">克罗內克积</h2>
<p><span class="math display">\[
A \otimes B=\left[\begin{array}{ccc}
a_{11} B &amp; \cdots &amp; a_{1 n} B \\
\vdots &amp; \ddots &amp; \vdots \\
a_{m 1} B &amp; \cdots &amp; a_{m n} B
\end{array}\right]
\]</span></p>
<p>克罗內克积满足双线性和结合律： <span class="math display">\[
\begin{eqnarray*}
A \otimes(B+C)&amp;=&amp;A \otimes B+A \otimes C \quad(\text { if } B \text { and } C \text { have the same size }), \\
(A+B) \otimes C&amp;=&amp;A \otimes C+B \otimes C \quad(\text { if } A \text { and } B \text { have the same size }), \\
(k A) \otimes B&amp;=&amp;A \otimes(k B)=k(A \otimes B), \\
(A \otimes B) \otimes C&amp;=&amp;A \otimes(B \otimes C)
\end{eqnarray*}
\]</span> 克罗內克积不满足交换律：通常，<span class="math inline">\(A \otimes B \neq B \otimes A\)</span>。</p>
<p>克罗內克积满足混合乘积性质：<span class="math inline">\((A \otimes B)(C \otimes D)=AC \otimes BD\)</span>。从中可以推出：<span class="math inline">\((A \otimes B)^{-1}=A^{-1} \otimes B^{-1}\)</span>。</p>
<p>克罗內克积对转置运算满足分配律：<span class="math inline">\((A \otimes B)^T=A^T \otimes B^T\)</span>。</p>
<p>克罗內克积对矩阵的迹运算满足：<span class="math inline">\(\operatorname{tr}(A\otimes B)=\operatorname{tr}A \operatorname{tr}B\)</span>。</p>
<p>克罗內克积对矩阵的行列式运算满足：<span class="math inline">\(\det(A \otimes B)=(\det A)^b(det B)^a\)</span>，其中<span class="math inline">\(a\)</span>为矩阵<span class="math inline">\(A\)</span>的特征值数量，<span class="math inline">\(b\)</span>为矩阵<span class="math inline">\(B\)</span>的特征值数量。</p>
<p>克罗內克积对矩阵的秩满足：<span class="math inline">\(\operatorname{rank}(A \otimes B)=\operatorname{rank}A \operatorname{rank}B\)</span></p>
<h2 id="哈达玛积">哈达玛积</h2>
<p><span class="math display">\[
(A \circ B)_{i j}=a_{i j}b_{i j}
\]</span></p>
<p>说白了就是对应元素相乘。</p>
<p>哈达玛积满足交换律，结合律和对加法的分配律： <span class="math display">\[
\begin{eqnarray*}
A \circ B&amp;=&amp;B \circ A \\
A \circ(B\circ C)&amp;=&amp;(A \circ B) \circ C \\
A \circ(B + C) &amp;=&amp; A \circ B + A \circ C
\end{eqnarray*}
\]</span></p>
<h2 id="向量化">向量化</h2>
<p><span class="math display">\[
\operatorname{vec}
(\left[\begin{array}{cccc}
a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\
a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
a_{m1} &amp; a_{m2} &amp; \cdots &amp; a_{mn} \\
\end{array}\right])
=
\left[\begin{array}{c}
a_{11} \\ a_{21} \\ \vdots \\ a_{m1} \\
a_{12} \\ a_{22} \\ \vdots \\ a_{m2} \\
\vdots \\
a_{1n} \\ a_{2n} \\ \vdots \\ a_{mn}
\end{array}\right]
\]</span></p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Matrix_calculus#Identities_in_differential_form">Matrix calculus - Wikipedia</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/24709748">矩阵求导术（上） - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/24863977">矩阵求导术（下） - 知乎</a></li>
<li><a href="https://tminka.github.io/papers/matrix/minka-matrix.pdf">t.dvi</a></li>
</ul>
]]></content>
      <tags>
        <tag>矩阵</tag>
        <tag>微积分</tag>
      </tags>
  </entry>
  <entry>
    <title>【转】DFL官方使用说明</title>
    <url>/2020/11/21/%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="简介">简介</h1>
<h2 id="一什么是deepfacelab-2.0">一、什么是DeepFaceLab 2.0</h2>
<p>DeepFaceLab是目前使用人数最多，效果最好的AI换脸软件</p>
<p>1.0和2.0有什么区别？ DFL 2.0有什么新功能？</p>
<ul>
<li>DFL 2.0的核心与1.0非常相似，但是对它进行了重写和优化，以使其运行速度更快并提供更好的质量。</li>
<li>不再支持AMD卡，并且新模型（SAEHD系列和Quick96）与以前的版本不兼容。</li>
<li>但是，在高版本的DFL 1.0中提取的数据集仍可以在2.0中使用。</li>
</ul>
<h2 id="二软件下载">二、软件下载</h2>
<p><a href="https://github.com/iperov/DeepFaceLab">官方代码仓库</a>（适合源码大佬研究）</p>
<p>提供几个坛友分享的国内下载链接：</p>
<ul>
<li><a href="http://dfldata.xyz/forum.php?mod=viewthread&amp;tid=42&amp;extra=page%3D1">《DeepFaceLab2020-8-2中文版分享》</a></li>
<li><a href="http://dfldata.xyz/forum.php?mod=viewthread&amp;tid=46&amp;extra=page%3D1">汉化包+交互界面 免费搬运 回帖有奖,注册会员即可观看</a></li>
</ul>
<h2 id="三新手教程">三、新手教程</h2>
<p><a href="http://dfldata.xyz/forum.php?mod=viewthread&amp;tid=34&amp;extra=page%3D1">【新手教程点我】</a></p>
<h2 id="四名词解释">四、名词解释</h2>
<p>逛论坛时，大家经常说着一些炼丹、神丹、预训练等词，听得萌新一愣一愣，在此解释下。</p>
<p><strong>丹</strong>：AI换脸模型</p>
<p><strong>炼丹</strong>：训练模型的过程</p>
<p><strong>筑基丹、神丹</strong>：别人训练好的模型，拿过来用自己素材重新训练下很快就能出效果</p>
<p><strong>预训练</strong>：在训练自己特定素材前，用其他角度丰富的人脸数据给模型预热的过程</p>
<p><strong>炉子</strong>：显卡</p>
<h1 id="dfl-2.0-官方使用手册翻译">DFL 2.0 官方使用手册翻译</h1>
<h2 id="主要新增功能">2.0主要新增功能</h2>
<ul>
<li>2个模型大类：SAEHD 和 Quick 96。</li>
<li>支持多GPU。</li>
<li>比DFL 1.0 更快的提脸、训练、合成速度。</li>
<li>提供人脸素材加强脚本。</li>
<li>训练支持GAN（一种AI技术），以还原更多细节。</li>
<li>新增TrueFace参数 - (只支持 DF 模型架构) - 让SRC和DST表情更相似，减少死鱼脸。</li>
<li>合成阶段附带输出遮罩图片， 方便后期导入其他软件编辑。</li>
<li>带交互界面的合成脚本（1.0的合成需要手动填参数，非常反人类，这个2.0做的很人性化）。</li>
<li>提脸使用s3fd算法，并支持手动模式。</li>
<li>模型分辨率可选择为任意16或32倍数。</li>
<li>多种模型架构 (两种核心框架DF, LIAE,以及 -U, -D ,-UD 三种附加后缀，这个下文详细展开)</li>
<li>使用Xseg遮罩模型，提供自带画遮罩的工具。（滚石注：对追求细节的高玩适合用Xseg，普通小白还是别用了，很繁琐。个人觉得还是1.0版本的FANseg省心）。</li>
</ul>
<h2 id="硬件要求">2.0硬件要求</h2>
<p>DFL 2.0只支持英伟达显卡，不支持AMD显卡。</p>
<p>需要显卡CUDA Compute Capability 3.0以上。</p>
<p>DeepFaceLab 2.0由几个.bat文件组成，这些文件用于执行创建Deepfake的各种任务/步骤，它们与两个子文件夹一起位于主文件夹中：</p>
<ul>
<li>_internal - 相关源代码。</li>
<li>workspace - 放置你的模型、视频、人脸数据的地方。</li>
</ul>
<p>下面是一些术语解释</p>
<p>Dataset (faceset) - 是一组从图片帧（从视频中提取）或照片已提取的图像。</p>
<p>DFL 2.0中使用了两个数据集，分别是<strong>data_dst</strong>和<strong>data_src</strong>：</p>
<ul>
<li><p>"<strong>data_dst</strong>" 是一个文件夹，其中包含从data_dst.mp4文件提取的帧-这是我们要换脸的目标视频。 它还包含2个文件夹，这些文件夹是在从提取的帧中提取人脸后创建的：“aligned”包含人脸图像（内嵌了人脸特征点数据，用于生成原始遮罩） “aligned_debug”包含原始帧，这些帧画出了人脸特征点，用于标识检验人脸提取是否正确（并且不参与训练或合成过程）。清理完数据集后，可以将其删除以节省空间。</p></li>
<li><p>"<strong>data_src</strong>" 是一个文件夹，用于保存从data_src.mp4文件提取的帧（可以是采访，电影，预告片等），也可以在其中放散装图片-就是您要在换到视频上的人。 “aligned”包含人脸图像（内嵌了人脸特征点数据，用于生成原始遮罩） “aligned_debug”包含原始帧，这些帧画出了人脸特征点，用于标识检验人脸提取是否正确（并且不参与训练或合成过程）。清理完数据集后，可以将其删除以节省空间。</p></li>
</ul>
<p>为方便国内朋友理解，我举个例子：我要做一个马保国替换叶问中甄子丹的换脸视频。 那么马保国就是<strong>data_src</strong>，叶问就是<strong>data_dst</strong>。</p>
<p>但是，在提取脸部之前，必须先从以下对象中提取脸部：</p>
<ul>
<li>对于data_dst，您应该准备目标（目标）视频并将其命名为data_dst.mp4</li>
<li>对于data_src，您应该准备源视频（如上例所示）并将其命名为data_src.mp4，或者准备jpg或png格式的图像。</li>
</ul>
<p>从视频中提取帧的过程也称为提取，因此在本指南的其余部分中，我将这两个过程都称为“面部提取”和“帧提取”。</p>
<p>如开头所述，所有这些数据都存储在“ workspace”文件夹中。data_dst.mp4和data_src.mp4放在workspace文件夹目录；data_src文件夹和data_dst文件夹用于放置分解视频得到的原始画面帧或散装图片。运行面部提取后，会在其中自动生成存储人脸的“ aligned”文件夹。</p>
<h2 id="工作区清理">1. 工作区清理</h2>
<p><strong>1) Clear Workspace -</strong>删除workspace下所有内容。别手贱点他。</p>
<h2 id="从src视频中提取画面-data_src.mp4">2. 从src视频中提取画面 (data_src.mp4)</h2>
<p><strong>2) Extract images from video data_src -</strong> 从data_src.mp4视频中提取帧并将其放入自动创建的“ data_src”文件夹中，可用选项：-FPS-跳过视频的默认帧速率，输入其他帧速率的数值（例如，输入5将仅以每秒5帧的速度呈现视频，这意味着将提取较少的帧） -JPG / PNG-选择提取帧的格式，jpg较小，通常质量足够好，因此建议使用，png较大，不能提供明显更高的质量，但是可以选择。</p>
<h2 id="视频切割-可选环节">3. 视频切割 （可选环节）</h2>
<p><strong>3) cut video (drop video on me)</strong> - 通过将视频拖放到该.bat文件中，可以快速将视频剪切为所需的长度。 如果您没有视频编辑软件并且想快速剪切视频，则很有用，可以选择以下选项： 从时间开始-视频开始 结束时间-视频结束 音轨-保留默认设置 比特率-让我们更改视频的比特率（质量）-最好保留默认设置</p>
<h2 id="从目标视频中提取画面data_dst.mp4">3. 从目标视频中提取画面(data_dst.mp4)</h2>
<p><strong>3) extract images from video data_dst FULL FPS -</strong> 从data_dst.mp4视频文件中提取帧并将其放入自动创建的“ data_dst”文件夹中，可用选项： - JPG/PNG - 同2)</p>
<h2 id="提取data_src中的人脸">4. 提取Data_src中的人脸</h2>
<p>准备源数据集的第一步是对齐人脸（把人脸都摆正了），并从位于“ data_src”文件夹中的提取帧中生成512x512面部图像。</p>
<p>有2个选项：</p>
<p><strong>4) data_src faceset extract MANUAL</strong> - 手动提取器，用法请参见5.1。</p>
<p><strong>4) data_src faceset extract</strong> - 使用S3FD算法的自动提取</p>
<p>S3FD和MANUAL提取器的可用选项包括： -根据要训练的模型的面部类型选择提取的覆盖区域：</p>
<p><strong>a) full face</strong> (简称F脸，额头部分有些许被裁到)</p>
<p><strong>b) whole face</strong> (简称WF脸，范围更大，整个额头都取了，兼容WF和F脸模型)</p>
<p><strong>c) head</strong> (不常用，给高玩做avatar用，萌新用不到) -选择用于面部提取/对齐过程的GPU（或cpu） -选择是否生成“ aligned_debug”文件夹<strong> </strong></p>
<h2 id="data_src-整理">4. Data_src 整理</h2>
<p>完成此操作后，下一步是清理错误faceset /数据集/不正确对齐的faces，有关详细信息，请检查以下帖子：<a href="https://mrdeepfakes.com/forums/thread-guide-celebrity-faceset-dataset-creation-how-to-create-celebrity-facesets">https://mrdeepfakes.com/forums/thread-gu...y-facesets</a></p>
<p><strong>4.1) data_src view aligned result</strong> - 不常用</p>
<p><strong>4.2) data_src sort</strong> - 给图片排序，方便你筛选错误图片</p>
<ul>
<li>blur 模糊程度</li>
<li>face yaw direction 俯仰角度</li>
<li>face pitch direction 左右角度</li>
<li>face rect size in source image 人脸在原图中的大小</li>
<li>histogram similarity 颜色直方图相似度</li>
<li>histogram dissimilarity 颜色直方图不相似度</li>
<li>brightness 亮度</li>
<li>hue 颜色色相</li>
<li>amount of black pixels 黑色像素的数量（常用于筛选异常人脸提取结果）</li>
<li>original filename 源文件名字</li>
<li>one face in image 是否是画面中唯一人脸</li>
<li>absolute pixel difference 绝对的像素差异</li>
<li>best faces 筛选最佳的人脸</li>
<li>best faces faster 更快的筛选最佳的人脸</li>
</ul>
<p><strong>4.2) data_src util add landmarks debug images</strong> -重新生成debug文件夹</p>
<p><strong>4.2) data_src util faceset enhance</strong> - 用AI算法提升素材清晰度</p>
<p>另一个可选的提升SRC的素材的方法，可用DFDNET ，谷歌colab连接如下： <a href="https://colab.research.google.com/github/rocketsvm/DFDNet/blob/master/DFDNet_DFL_Colab.ipynb#scrollTo=OZ7-E-vRSYar">https://colab.research.google.com/github...7-E-vRSYar</a></p>
<p><strong>4.2) data_src util faceset metadata restore and 4.2) data_src util faceset metadata save</strong> - 让我们从源面集/数据集中保存和还原嵌入的对齐数据，以便在提取某些面部图像（例如将它们锐化，编辑眼镜，皮肤瑕疵，颜色校正）后可以对其进行编辑，而不会丢失对齐数据。如果不按此步骤编辑“已对齐”文件夹中的任何图像，则将不会再使用对齐数据和这些图片进行训练，因此，在保持名称相同的情况下，不允许翻转/旋转，仅是简单的编辑，例如彩色 。</p>
<p><strong>4.2) data_src util faceset pack and 4.2) data_src util faceset unpack -</strong> 将“ aligned”文件夹中的所有面孔打包/解压缩到一个文件中。 主要用于准备自定义的预训练数据集或更易于共享为一个文件。</p>
<p><strong>4.2.other) data_src util recover original filename -</strong> 将面部图像的名称恢复为原始顺序/文件名（排序后）。 可选，无论SRC face文件名如何，训练和合成都能正确运行。</p>
<h2 id="data_dst-数据准备">5. Data_dst 数据准备</h2>
<p>这里的步骤与源数据集几乎相同，除了少数例外，让我们从面部提取/对齐过程开始。 我们仍然有Manual和S3FD提取方法，但是还有一种结合了这两种方法和一种特殊的手动提取模式，始终会生成“ aligned_debug”文件夹。</p>
<p><strong>5) data_dst faceset extract MANUAL RE-EXTRACT DELETED ALIGNED_DEBUG</strong> - 从“ aligned_debug”文件夹中删除的帧进行手动重新提取。 有关更多信息，请参见5. Data_dst清理。 以下步骤5.1中的用法。</p>
<p><strong>5) data_dst faceset extract MANUAL</strong> - 纯手动模式</p>
<p><strong>5) data_dst faceset extract + manual fix</strong> - 半自动，机器识别不了的会切手动</p>
<p><strong>5) data_dst faceset extract</strong> - 纯自动提取</p>
<p>选项和src的一样，不重复说了</p>
<h2 id="手动人脸提取的操作说明">5.1 手动人脸提取的操作说明</h2>
<p>启动手动提取器或重新提取器后，将打开一个窗口，您可以在其中手动找到要提取/重新提取的脸部：</p>
<ul>
<li>使用鼠标定位脸部</li>
<li>使用鼠标滚轮更改搜索区域的大小</li>
<li>确保所有或至少是大多数地标（在某些情况下，取决于角度，照明或当前障碍物，可能无法精确对齐所有地标，因此，请尝试找到一个最能覆盖所有可见位并且是“ t太不对准）落在重要的部位，例如眼睛，嘴巴，鼻子，眉毛上，并正确遵循面部形状，向上箭头指示您面部的“向上”或“顶部”在哪里</li>
<li>使用键A更改精度模式，现在地标不会对检测到的面部“粘”太多，但您可能能够更正确地定位地标</li>
<li>用户<和>键（或，和。）来回移动，以确认检测到鼠标左键单击并移至下一个或按Enter</li>
<li>鼠标右键，用于检测无法检测到的正面或非人脸（需要应用xseg进行正确的遮罩）</li>
<li>q跳过剩余的面孔并退出提取器（到达最后一张面孔并确认时也会关闭）</li>
</ul>
<h2 id="data_dst-数据整理">5.2 Data_dst 数据整理</h2>
<p>对齐data_dst面后，我们必须清理它们，类似于我们使用源faceset / dataset进行处理时，我们将选择一些排序方法，由于它们的工作方式与src完全相同，因此我将不作解释。 但是清理目标数据集与源数据集有所不同，因为我们要使所有存在的帧的所有面对齐（包括可以在XSeg编辑器中标记的受遮挡的面），然后训练XSeg模型以将其遮盖 -有效地使障碍物在学到的面孔上清晰可见，更多的是在下面的XSeg阶段。</p>
<p>这块做法和data_src类似，区别在于，最后合成时是根据dst中aligned文件数量来合成。删掉的dst人脸数据对应的画面就不会换脸</p>
<h2 id="xseg-model-的训练和使用画遮罩">5.3 XSeg model 的训练和使用（画遮罩）</h2>
<p>这章比较复杂，晚点翻译。萌新先不要使用遮罩。不用遮罩正常也能训练</p>
<h2 id="训练">6. 训练</h2>
<p>有两种模式可以选择：</p>
<h3 id="saehd-6gb高质量模型至少6gb显存">SAEHD (6GB+)：高质量模型，至少6GB显存</h3>
<p>特点/设置</p>
<p>最高640x640分辨率，</p>
<p>可支持half face, mid-half face, full face, whole face and head face 5中人脸尺寸类型</p>
<p>8种模型结构：DF, LIAE, 每种4 个变种 - regular, -U, -D and -UD</p>
<p>可调节的批大小（batchsize）</p>
<p>可调节的模型各层维度大小</p>
<p>Auto Backup feature 自动备份</p>
<p>Preview History预览图存档</p>
<p>Adjustable Target Iteration 目标迭代次数</p>
<p>Random Flip (yaw) 随机水平翻转</p>
<p>Uniform Yaw 按角度顺序来训练</p>
<p>Eye Priority 眼神训练优先</p>
<p>Masked Training 带遮罩训练</p>
<p>GPU Optimizer 优化器放GPU上</p>
<p>Learning Dropout 学习率自动下降</p>
<p>Random Warp 随机扭曲</p>
<p>GAN Training Power 使用GAN</p>
<p>True Face Training Power 提高人脸相似度</p>
<p>Face and Background Style Power 提高颜色相似度</p>
<p>Color Transfer modes 变对素材变色</p>
<p>Gradient Clipping 梯度裁剪 - Pretrain Mode 使用预训练模式</p>
<h3 id="quick96-2-4gb低配电脑可用">Quick96 (2-4GB)：低配电脑可用</h3>
<p>特点：</p>
<ul>
<li>96x96 分辨率</li>
<li>只支持Full Face</li>
<li>Batch size 4</li>
<li>默认DF-UD结构</li>
</ul>
<p><strong>6) train SAEHD</strong></p>
<p><strong>6) train Quick96</strong></p>
<p>由于Quick96不可调节，因此您将看到命令窗口弹出并仅询问一个问题-CPU或GPU（如果您有更多问题，它将选择其中之一或同时进行训练）。 但是，SAEHD将为您提供更多调整选项。</p>
<p>在这两种情况下，首先都会出现一个命令行窗口，您可以在其中输入模型设置。 初次使用时，您将可以访问以下说明的所有设置，在使用已经受过训练的模型进行训练并在“模型”文件夹中显示该模型时，您还将收到提示，您可以在其中选择要训练的模型（ （如果您的“模型”文件夹中存在多个模型文件）。 您还将始终提示您选择要在其上运行培训器的GPU或CPU。</p>
<p>启动后将看到的第二件事是预览窗口，如下所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E9%A2%84%E8%A7%88%E7%AA%97%E5%8F%A3.jpg" alt="预览窗口.jpg" /><figcaption aria-hidden="true">预览窗口.jpg</figcaption>
</figure>
<p>这是所有功能的更详细说明，以便在开始训练新模型时将其呈现给用户：</p>
<p>请注意，由于这些模型的工作方式，其中一些已锁定，一旦开始训练就无法更改，例如，稍后无法更改的示例如下：</p>
<ul>
<li>model resolution 模型分辨率</li>
<li>model architecture 模型结构</li>
<li>models dimensions (dims settings) 模型维度参数</li>
<li>face type 人脸类型</li>
</ul>
<p><strong>Autobackup every N hour ( 0..24 ?:help )</strong> ：自动备份频率，0不备份</p>
<p><strong>Target iteration :</strong> 将在达到一定的迭代次数后停止训练，例如，如果要将模型训练为仅进行100.000次迭代，则应输入值100000。将其保留为0将使其运行，直到您手动将其停止为止。 默认值为0（禁用）。</p>
<p><strong>Flip faces randomly ( y/n ?:help ) :</strong> 基本不开。在您没有要交换到目标的人脸（源数据集）的所有必要角度的情况下的有用选项。 例如，如果您有一个目标/目标视频，人物直视向右，而您的源只具有直视向左的脸，则应启用此功能，但请记住，由于没有人脸对称，结果看起来可能不太像 src以及来源面部的特征（例如美容标记，疤痕，痣等）都会被镜像。 默认值为n（禁用）。</p>
<p><strong>Batch_size ( ?:help ) :</strong> 批处理大小设置会影响每次迭代中相互比较的面孔数。 最低值是2，您可以提高到GPU允许的最大值，受GPU影响。 模型分辨率，尺寸越高，启用的功能越多，将需要更多的显存，因此可能需要较小的批处理大小。 建议不要使用低于4的值。批量越大，质量越好，但训练时间越长（迭代时间越长）。 对于初始阶段，可以将其设置为较低的值以加快初始训练的速度，然后将其升高。 最佳值为6-12。 如何猜测要使用的批量大小？ 您可以使用试错法，也可以通过查看<a href="https://mrdeepfakes.com/forums/thread-dfl-2-0-user-model-settings-spreadsheet">DFL 2.0电子表格</a>来了解其他人在他们的GPU上可以实现什么，以帮助自己。</p>
<p><strong>Resolution ( 64-640 ?:help ) :</strong> 在这里，您可以设置模型的分辨率，请记住，在训练过程中不能更改此选项。 它会影响交换的面部的分辨率，模型的分辨率越高-学习的面部越详细，但训练的负担也将越来越长。 分辨率可以从64x64增至640x640，其增量为： 16（对于常规和-U体系结构变体） 32（用于-D和-UD体系结构变体） 更高的分辨率可能需要增加模型尺寸（尺寸）。</p>
<p><strong>Face type ( h/mf/f/wf/head ?:help ) :</strong>此选项使您可以设置要训练的脸部区域，共有5个选项-半脸，半脸，全脸，全脸和头部： a）H半脸-仅从嘴巴到眉毛训练，但在某些情况下可以割破脸部的顶部或底部（眉毛，下巴，嘴巴）。 b）MF中半脸-旨在解决此问题，方法是遮盖脸部比半脸大30％，这应该可以防止大多数不希望的割伤的发生，但仍然可以发生。 c）F全脸-覆盖除额头以外的大部分脸部区域，有时会割掉一点下巴，但是这种情况很少发生-当SRC和/或DST的额头覆盖头发时，最推荐使用此方法。 d）WF整脸-扩大该区域以覆盖几乎整个脸部，包括额头，甚至一点点头发，但是当我们要交换整个脸部（不包括头发）时，应使用此模式。该脸部类型的另一个选项是masked_training，它使您可以优先确定学习脸部的整个脸部的优先级，然后（禁用之后）让模型学习像额头一样的脸部其余部分。 e）头-用于交换整个头，不适合长发的对象，如果源面组/数据集来自单个源并且SRC和DST都短发或不变，则效果最好形状取决于角度。此脸型的最低建议分辨率为224。 <img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E8%84%B8%E5%9E%8B.jpg" alt="脸型.jpg" /></p>
<p><strong>whole face案例</strong></p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E6%95%B4%E8%84%B8%E6%A1%88%E4%BE%8B.png" alt="整脸案例.png" /><figcaption aria-hidden="true">整脸案例.png</figcaption>
</figure>
<p><strong>AE architecture (df/liae/df-u/liae-u/df-d/liae-d/df-ud/liae-ud ?:help ) :</strong> 此选项使您可以在2种主要的体系结构DF和LIAE及其-U，-D和-UD变体之间进行选择。</p>
<p>DF和LIAE体系结构是基础体系结构，两者均提供高质量和良好的性能。 DF-U，DF-UD，LIAE-U和LIAE-UD是其他体系结构变体。</p>
<p><strong>DF:</strong> 此模型体系结构提供了更直接的人脸交换，不使人脸变形，但要求源和目标/目标人脸/头部具有相似的人脸形状。 该模型在正面拍摄时效果最好，并且要求您的源数据集具有所有所需的角度，在侧面轮廓上可能会产生较差的结果。</p>
<p><strong>LIAE:</strong> 当涉及源和目标/目标之间的面部/头部形状相似性时，此模型体系结构没有那么严格，但是该模型确实使面部变形，因此建议使实际面部特征（眼睛，鼻子，嘴巴，整体面部结构）相似 在源和目标/目标之间。 该模型与源头镜头的源相似性较差，但可以更好地处理侧面轮廓，并且在源源面集/数据集方面更宽容，通常可以产生更精致的人脸替换，并具有更好的颜色/照明匹配度。 <strong> -U:</strong> 此变体旨在提高训练结果面与SRC数据集的相似性/相似性。 <strong>-D:</strong> 此变体旨在提高性能，让您以两倍的分辨率训练模型，而无需额外的计算成本（VRAM使用）和类似的性能，例如以与128分辨率相同的VRAM使用和速度（迭代时间）训练256分辨率模型</p>
<p><strong>-UD:</strong> 结合U和D</p>
<p>接下来的4个选项控制模型神经网络的尺寸，这些尺寸会影响模型的学习能力，对其进行修改可能会对所学面孔的性能和质量产生重大影响，因此应将其保留为默认值。</p>
<p><strong>AutoEncoder dimensions ( 32-1024 ?:help ) :</strong> 自动编码器中间层维度大小</p>
<p><strong>Encoder dimensions ( 16-256 ?:help ) :</strong> 编码器尺寸设置会影响模型学习面孔总体结构的能力。</p>
<p><strong>Decoder dimensions ( 16-256 ?:help ) :</strong> 解码器尺寸设置会影响模型学习细节的能力。</p>
<p><strong>Decoder mask dimensions ( 16-256 ?:help ) :</strong> 遮罩解码器的尺寸设置会影响学习到的遮罩的质量。</p>
<p>更改每个设置时的性能变化可能会对性能产生不同的影响，如果没有大量的培训，就无法衡量每个参数对性能和质量的影响。 每个设置为某个默认值，该默认值应提供最佳结果，并在训练速度和质量之间取得良好的折衷。</p>
<p>同样，在更改一个参数时，也应更改其他参数，以保持它们之间的关系相似（例如，如果将“编码器”和“解码器”的尺寸从64降低到48，则还可以将“自动编码器”的尺寸从256降低到192-240）。 随意尝试各种设置。 如果要获得最佳结果，请将其保留为默认值，或者对于高分辨率型号，将其略微提高。</p>
<p><strong>Eyes priority ( y/n ?:help ) :</strong> 试图通过强制神经网络训练优先级更高的眼睛来解决眼睛训练问题。 请记住，它不能保证正确的眼睛方向，它只会影响眼睛的细节和周围区域。 示例（之前和之后）：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E7%9C%BC%E7%9D%9B%E4%BC%98%E5%85%88.jpg" alt="眼睛优先.jpg" /><figcaption aria-hidden="true">眼睛优先.jpg</figcaption>
</figure>
<p><strong>Place models and optimizer on GPU ( y/n ?:help ) :</strong> 启用GPU优化器会将所有负载都放在GPU上，这将大大提高性能（迭代时间），但会导致更高的VRAM使用率，禁用此功能会将优化器的某些工作分担给CPU，从而减少了GPU和VRAM使用率的负载，从而使您可以实现 批处理量更大或以更高的迭代时间为代价运行更苛刻的模型。 如果您收到OOM（内存不足）错误，并且不想减小批量大小或禁用某些功能，则应禁用此功能，这样一来，一些工作将被卸载到CPU上，而某些数据将从GPU VRAM转移到系统RAM中- 您将能够以较低速度为代价运行模型而不会出现OOM错误。 默认值为y（启用）。</p>
<p><strong>Use learning rate dropout ( y/n/cpu ?:help ) :</strong> LRD被用于加速面部的培训，并减少相比，如果没有启用它，使用它较少的迭代子像素抖动：</p>
<ul>
<li><p>在禁用RW之前和运行其他选项之后一次。</p></li>
<li><p>禁用RW之后（也是LRD）第二次使用其他选项（均匀偏航，样式效果，真面，眼睛优先），但在启用GAN之后。</p></li>
</ul>
<p>此选项会影响VRAM的使用，因此，如果遇到OOM错误，则可以在CPU上运行它，但需要花费20％的迭代时间或降低批处理大小。</p>
<p>有关LRD的详细说明以及在培训期间启用主要功能的顺序，请参阅FAQ问题8（此主题的第3个帖子）："When should I enable or disable random warp, GAN, True Face, Style Power, Color Transfer and Learning Rate Dropout?"</p>
<p><strong>Enable random warp of samples ( y/n ?:help ) :</strong> 随机扭曲用于概括模型，以便它可以正确学习所有基本形状，面部特征，面部结构，表情等，但是只要启用该模型，学习精细细节就可能会遇到麻烦-因为它 建议您只要您的脸部仍在改善中（通过查看减少的损耗值和预览窗口）就启用此功能，一旦对脸部进行了全面训练并想要获得更多详细信息，则应禁用它并进行数千次迭代 应该会开始看到更多详细信息，并且禁用此功能后，您将继续进行培训。 默认值为y（启用）。 <strong> Uniform_yaw ( y/n ?:help ) :</strong> 有助于训练轮廓脸部，迫使模型根据其偏航角在所有面孔上均匀地训练，并优先考虑轮廓脸部，可能会导致正面脸部的训练速度变慢，这在预训练期间默认启用，可与随机变形类似地使用（在开始时 （训练过程）或在禁用或禁用RW后启用（当您对面部进行或多或少的训练，并且您希望轮廓脸部看起来更好且更少模糊时）。 当您的源数据集没有很多轮廓照片时很有用。 可以帮助降低损失值。 默认值为n（禁用）。</p>
<p><strong>GAN power ( 0.0 .. 10.0 ?:help ) :</strong> GAN代表Generative Adversarial Network，在DFL 2.0的情况下，它是作为获得更详细/更清晰面孔的一种额外培训方式而实施的。 此选项的调整范围是0.0到10.0，只有在模型或多或少地完成训练后（禁用样本随机扭曲并启用LRD之后），才应启用该选项。 建议从低值0.1开始，该值在大多数情况下也是建议值，一旦启用，就不应禁用它，请确保对模型进行备份，以防不满意结果。 默认值为0.0（禁用）。</p>
<p>用GAN训练0.1的面部进行40k迭代之前/之后的示例：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_GAN.png" alt="GAN.png" /><figcaption aria-hidden="true">GAN.png</figcaption>
</figure>
<p><strong>'True face' power. ( 0.0000 .. 1.0 ?:help ) :</strong> 使用可变功率设置的真实面部训练，让您将模型鉴别器设置为更高或更低的值，这样做是为了使最终面孔看起来更像src，而对于GAN，只有在禁用了随机扭曲后，才应启用此功能 并且模型训练有素。 在启用此功能之前，请考虑进行备份。 切勿使用较高的值，典型值为0.01，但可以使用较低的值，例如0.001。 设置越高，结果面将越像源数据集中的面，这可能导致颜色匹配问题，并导致出现伪影，因此重要的是不要使用高值。 它对性能的影响很小，可能会导致OOM错误发生。 默认值为0.0（禁用）。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E7%9C%9F%E5%AE%9E%E9%9D%A2%E9%83%A8%E6%9D%83%E9%87%8D.png" alt="真实面部权重.png" /><figcaption aria-hidden="true">真实面部权重.png</figcaption>
</figure>
<p><strong>Face style power ( 0.0..100.0 ?:help ) and Background style power ( 0.0..100.0 ?:help ) :</strong> 此设置控制图像的面部或背景部分的样式转移，用于将目标/目标面孔（data_dst）的样式转移到最终学习的面孔，这样可以提高质量和合并后最终结果的外观，但是 高值可能导致学习的人脸看起来更像data_dst，而不是data_src。 它将从DST传输一些颜色/照明信息到结果脸部。 建议不要使用大于10的值。从0.001-0.01之类的小值开始。 此功能对性能有很大影响，使用它会增加迭代时间，并且可能需要您减小批处理大小，禁用gpu优化器或在CPU上运行LRD。 在启用此功能之前，请考虑进行备份。 默认值为0.0（禁用）。</p>
<p><strong>Color transfer for src faceset ( none/rct/lct/mkl/idt/sot ?:help ) :</strong> 此功能用于将data_src的颜色与data_dst进行匹配，以使最终结果具有与data_dst相似的肤色/色调，并且训练后的最终结果不会在人脸移动时改变颜色（如果脸部不同，可能会发生这种情况 角度是从包含不同光照条件或颜色分级不同的各种光源获取的。 有以下几种选择：</p>
<p><strong>rct</strong> (reinhard color transfer)（我常用，滚石注）：基于<a href="https://www.cs.tau.ac.il/~turkel/imagepapers/ColorTransfer.pdf">ColorTransfer.pdf</a></p>
<p><strong>lct</strong> (linear color transfer)：使用线性变换将目标图像的颜色分布与源图像的颜色分布匹配。</p>
<p><strong>mkl</strong> (Monge-Kantorovitch linear)：基于<a href="http://www.mee.tcd.ie/~sigmedia/pmwiki/uploads/Main.Publications/fpitie07b.pdf">fpitie07b.pdf</a></p>
<p><strong>idt</strong> (Iterative Distribution Transfer)：基于<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.158.1052&amp;rep=rep1&amp;type=pdf">10.1.1.158</a></p>
<p><strong>sot</strong> (sliced optimal transfer)：基于<a href="https://dcoeurjo.github.io/OTColorTransfer/">OTColorTransfer</a></p>
<p><strong>Enable gradient clipping ( y/n ?:help ) :</strong> 梯度裁剪。实现此功能是为了防止在使用DFL 2.0的各种功能时可能发生的所谓的模型崩溃/损坏。 它对性能的影响很小，因此，如果您真的不想使用它，则必须启用自动备份，因为崩溃后的模型无法恢复，必须将其废弃，并且必须从头开始进行培训。 默认值为n（禁用），但是由于对性能的影响非常低，并且如果保持启用状态，可以防止模型崩溃而节省大量时间。 使用Style Powers时最容易发生模型崩溃，因此强烈建议您启用渐变裁剪或备份（也可以手动进行）。</p>
<p><strong>Enable pretraining mode ( y/n ?:help ) :</strong> 启用预训练过程，该过程使用随机人脸数据集对模型进行初始训练，将其训练约200k-400k次迭代后，可以在开始使用要训练的实际data_src和data_dst进行训练时使用此类模型，因为您可以节省时间不必每次都从0开始全面训练（模型将“知道”面孔的外观，从而加快初始训练阶段）。可以随时启用pretrain选项，但建议在开始时仅对模型进行一次预训练。您还可以使用自己的自定义面集进行预训练，您要做的就是创建一个（可以是data_src或data_dst），然后使用4.2）data_src（或dst）util faceset pack .bat文件打包成一个文件，然后将其重命名为faceset.pak并替换（备份旧的）“ ...\_internal\pretrain_CelebA”文件夹中的文件。默认值为n（禁用）。但是，如果要节省一些时间，可以去论坛找别人训练好的模型。</p>
<p><a href="https://mrdeepfakes.com/forums/thread-dfl-2-0-pretrained-models-general-thread-for-user-made-models-and-requests">共享模型</a></p>
<p>要使用共享的预训练模型，只需下载它，将所有文件直接放入模型文件夹中，开始训练，在选择要训练的模型（如果在模型文件夹中有更多内容）和用于训练的设备后2秒钟内按任意键 （GPU / CPU）来覆盖模型设置，并确保禁用预训练选项，以便您开始正确的训练；如果您启用了预训练选项，则模型将继续进行预训练。 请注意，该模型会将迭代计数恢复为0，这是预训练模型的正常行为。</p>
<h2 id="merging合成">7. Merging合成</h2>
<p>训练完模型后，该将学习的人脸合并到原始帧上以形成最终视频了（转换）。</p>
<p>为此，我们有2个对应于2种可用型号的转换脚本：</p>
<p><strong>7) merge SAEHD </strong></p>
<p><strong>7) merge Quick96</strong></p>
<p>选择其中任何一个后，命令行窗口将出现，并带有多个提示。 第一个将询问您是否要使用带交互界面的转化器，默认值为y（启用），除非你受虐狂，不然就好好开着吧，边调参数边预览</p>
<p><strong>Use interactive merger? ( y/n ) :</strong></p>
<p>第二个将询问您要使用哪种模型：</p>
<p><strong>Choose one of saved models, or enter a name to create a new model.</strong></p>
<p>[r] ：rename</p>
<p>[d] ：delete</p>
<p>[0] ：df192 - latest</p>
<p>:</p>
<p>第3个会问您要在合并（转换）过程中使用哪个GPU / GPU：</p>
<p><strong>Choose one or several GPU idxs (separated by comma).</strong></p>
<p>[CPU] ：CPU</p>
<p>[0] ：GeForce GTX 1070 8GB</p>
<p>[0] Which GPU indexes to choose?</p>
<p>:</p>
<p>按Enter将使用默认值[0]。</p>
<p>完成之后，您将看到一个带有当前设置的命令行窗口以及一个预览窗口，其中显示了操作交互式转换器/合并程序所需的所有控件。</p>
<p>这是命令行窗口和转换器预览窗口的快速浏览：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2020_11_21_%E3%80%90%E8%BD%AC%E3%80%91DFL%E5%AE%98%E6%96%B9%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E_%E5%BF%AB%E9%80%9F%E6%B5%8F%E8%A7%88.png" alt="快速浏览.png" /><figcaption aria-hidden="true">快速浏览.png</figcaption>
</figure>
<p>Converter具有许多选项，可用于更改遮罩类型，大小，羽化/模糊，还可以添加其他颜色转移并进一步锐化/增强最终训练的脸部。</p>
<p>这是解释的所有合并/转换器功能的列表：</p>
<p><strong>1. Main overlay modes:</strong></p>
<ul>
<li><strong>original:</strong> 显示原始画面而没有换脸</li>
<li><strong>overlay:</strong> 简单地将学习到的脸覆盖在框架上 （推荐用这个，滚石注）</li>
<li><strong>hist-match:</strong> 根据直方图叠加学习的面部和试图以使其匹配（具有2种模式：正常模式和可通过Z切换的蒙版）</li>
<li><strong>seamless:</strong> 使用opencv泊松无缝克隆功能在原始帧的头部上方融合新学习的面部</li>
<li><strong>seamless hist match:</strong> 结合了直方图匹配和无缝匹配。</li>
<li><strong>raw-rgb:</strong> 覆盖原始学习过的脸部而没有任何遮罩</li>
</ul>
<p>注意：无缝模式可能导致闪烁。</p>
<p><strong>2. Hist match threshold:</strong>在直方图匹配和无缝直方图覆盖模式下控制直方图匹配的强度。</p>
<p>Q - 增加值</p>
<p>A - 减小值</p>
<p><strong>3. Erode mask:</strong> 控制遮罩的大小。</p>
<p>W - 增加遮罩腐蚀（较小的遮罩）</p>
<p>S - 减少遮罩腐蚀(较大的遮罩)</p>
<p><strong>4. Blur mask</strong>：使遮罩边缘模糊/羽化，以实现更平滑的过渡</p>
<p>E - 增加值</p>
<p>D - 减小值</p>
<p><strong>5. Motion blur:</strong> 动态模糊。输入初始参数（转换器模式，模型，GPU / CPU）后，合并将加载所有帧和data_dst对齐的数据，同时，它会计算用于创建此设置控制的运动模糊效果的运动矢量，让您 将其添加到人脸移动的地方，但是即使移动很小，高值也可能使人脸模糊。 该选项仅在“ data_dst / aligned”文件夹中存在一组面孔时才有效-如果在清理过程中某些面孔带有_1前缀（即使只有一个人的面孔），效果将不起作用，同样 如果有一个可以反射目标人员面部的镜子，在这种情况下，您将无法使用运动模糊，并且添加该模糊的唯一方法是分别训练每组面部。</p>
<p>R - 增加motion blur</p>
<p>F - 减少motion blur</p>
<p><strong>6. Super resolution:</strong> 超分辨率使用与data_src数据集/面部设置增强器类似的算法，它可以为牙齿，眼睛等区域添加更多定义，并增强所学面部的细节/纹理。</p>
<p>T - 增加细节 the enhancement effect</p>
<p>G - 减少细节</p>
<p><strong>7. Blur/sharpen:</strong> 使用方块或高斯方法模糊或锐化所学的面部。</p>
<p>Y - sharpens the face</p>
<p>H - blurs the face</p>
<p>N - box/gaussian mode switch</p>
<p><strong>8. Face scale:</strong> 缩放人脸</p>
<p>U - scales learned face down</p>
<p>J - scales learned face up</p>
<p><strong>9. Mask modes:</strong> 6种遮罩计算方式，效果自己试一遍就知道了</p>
<p>dst: uses masks derived from the shape of the landmarks generated during data_dst faceset/dataset extraction.</p>
<p>learned-prd: uses masks learned during training. Keep shape of SRC faces.</p>
<p>learned-dst: uses masks learned during training. Keep shape of DST faces.</p>
<p>learned-prd*dst: combines both masks, smaller size of both.</p>
<p>learned-prd+dst: combines both masks, bigger size of both.</p>
<p>XSeg-prd: uses XSeg model to mask using data from source faces.</p>
<p>XSeg-dst: uses XSeg model to mask using data from destination faces.</p>
<p>XSeg-prd*dst: combines both masks, smaller size of both.</p>
<p>learned-prd*dst*XSeg-dst*prd: combines all 4 mask modes, smaller size of all.</p>
<p><strong>10. Color transfer modes:</strong> 与训练过程中的颜色转移类似，您可以使用此功能将学习到的脸部的肤色与原始帧更好地匹配，以实现更加无缝和逼真的脸部交换。 有8种不同的模式：</p>
<p>RCT</p>
<p>LCT</p>
<p>MKL</p>
<p>MKL-M</p>
<p>IDT</p>
<p>IDT-M</p>
<p>SOT - M</p>
<p>MIX-M</p>
<p><strong>11. Image degrade modes:</strong> 您可以使用3种设置来影响原始帧的外观（不影响换面）：</p>
<p>Denoise - denoises image making it slightly blurry (I - increases effect, K - decrease effect)</p>
<p>Bicubic - blurs the image using bicubic method (O - increases effect, L - decrease effect)</p>
<p>Color - decreases color bit depth (P - increases effect, ; - decrease effect)</p>
<p>附加控件：</p>
<p><strong>TAB button</strong> - 在主预览窗口和帮助屏幕之间切换。</p>
<p>请记住，您只能在主预览窗口中更改参数，按帮助屏幕上的任何其他按钮都不会更改它们。</p>
<p><strong>-/_ and =/+</strong> buttons are used to scale the preview window.</p>
<p>Use caps lock to change the increment from 1 to 10 (affects all numerical values).</p>
<p>要保存/覆盖当前一帧中所有下一帧的设置 <strong>shift + /</strong></p>
<p>要保存/覆盖当前一帧中所有先前帧的设置 <strong>shift + M</strong></p>
<p>要开始合并所有帧，请按 <strong>shift + &gt;</strong></p>
<p>要返回第一帧，请按 <strong>shift + &lt;</strong></p>
<p>要仅转换下一帧，请按 <strong>&gt;</strong></p>
<p>要返回上一帧，请按 <strong>&lt;</strong></p>
<h2 id="把转化好的帧合成为视频">8. 把转化好的帧合成为视频</h2>
<p>合并/转换所有面部之后，“ data_dst”文件夹中将有一个名为“ merged”的文件夹，其中包含构成视频的所有帧。 最后一步是将它们转换回视频，并与data_dst.mp4文件中的原始音轨合并。</p>
<p>为此，您将使用提供的4个.bat文件之一，这些文件将使用FFMPEG将所有帧组合成以下格式之一的视频-avi，mp4，lessless mp4或lossless mov：</p>
<p><strong>8) merged to avi</strong></p>
<p><strong>8) merged to mov lossless 无损mov</strong></p>
<p><strong>8) merged to mp4 lossless 无损MP4</strong></p>
<p><strong>8) merged to mp4</strong></p>
<h1 id="faq">FAQ</h1>
<p><strong>1. Q：1.0和2.0有什么区别？</strong></p>
<p>答：2.0是经过改进和优化的版本，由于进行了优化，它提供了更好的性能，这意味着您可以训练更高分辨率的模型或更快地训练现有模型。 合并和提取也明显更快。 问题在于DFL 2.0不再支持AMD GPU / OpenCL，唯一的使用方法是与Nvidia GPU（需要最少3.0 CUDA计算级别的GPU支持）或CPU一起使用。 请记住，在CPU上进行训练的速度要慢得多，其他所有步骤（例如提取和合并（以前称为转换））也要慢得多。 此外，新版本仅提供2种型号-SAEHD和Quick 96，没有H128 / H64 / DF / LIAEF / SAE型号。 同样，从1.0开始的所有训练/预训练模型（SAE / SAEHD）与2.0不兼容，因此您需要训练新模型。 在上面的主要指南中，您还可以了解其他一些更改。</p>
<p><strong>2. Q：做一次换脸需要多长时间？</strong></p>
<p>A：根据目标（DST）视频的时长，SRC数据集/面集的大小以及用于训练的硬件（GPU）的模型的类型。 如果您是从头开始训练模型或制作更长的deepfake，则在经过预训练的模型上进行简单，短暂的可能需要半天到5到7天的时间，特别是如果高分辨率全脸型需要额外的时间 培训XSeg模型，甚至在合并视频编辑软件后进行一些工作。 这也取决于您拥有的硬件，如果您的GPU的VRAM较少（4-6 GB），则需要花费更长的时间来训练具有更强大GPU（8-24GB）的模型。 它还取决于您的技能，查找SRC数据集/面容的原始资料的速度，可以找到合适的目标（DST）视频的速度以及为训练准备两个数据集的速度有多快。</p>
<p><strong>3. Q：你能用几张照片制作一个Deepfake视频吗？</strong></p>
<p>A：通常，答案是“否”。 推荐使用面部表情制作像样的Deepfake的方法是使用视频。角度和面部表情越多越好。 当然，您可以尝试只用几百张照片制作一个Deepfake视频，它可以正常工作，但结果却不那么令人信服。</p>
<p><strong>4. Q：理想的人脸数据数量是多少？</strong></p>
<p>A：对于data_src（名人）脸部，建议至少拥有4000-6000张不同的图像。当然，您可以拥有更多但通常10.000-15.000张图像就足够了，只要数据集中有多种（不同的面部角度和表情）。 最好将它们用于尽可能少的源，使用的源越多（尤其是当不同源之间相似的表达式/角度“重叠”时），将模型变形为DST的可能性越高，看起来更像是SRC，可能需要运行TF 或保持启用RW的模型训练时间更长。 有关制作源面集/数据集的更多详细指南，请查看以下指南： <a href="https://mrdeepfakes.com/forums/thread-guide-celebrity-faceset-dataset-creation-how-to-create-celebrity-facesets">thread-guide-celebrity-faceset-dataset-creation-how-to-create-celebrity-facesets</a></p>
<p><strong>5. Q：为什么我的Deepfake变得模糊？</strong></p>
<p>A：面孔模糊的原因很多。最常见的原因包括-训练时间不够长，源数据集中缺少必要的角度，提取的源或目标面集/数据集的对齐方式不正确，训练或合并过程中的设置不正确，源面或目标面集/数据集中的人脸模糊。 如果您想知道做些什么以及在做一次深度仿真时应避免什么，请阅读本主题（指南部分）的第一篇文章。</p>
<p><strong>6. Q：为什么我的结果脸没有眨眼/眼睛看起来不对/眼睛交叉？?</strong></p>
<p>A：这很可能是由于data_src中缺少图像而导致的，这些图像包含闭着眼睛或以特定角度或某些角度朝特定方向注视的面孔。确保在所有可能的角度上都有相当数量的不同面部表情，以匹配目标/目标视频中的面部表情和角度-其中包括睁着眼睛并朝不同方向看的面部，而模型不知道这些 脸部的眼睛看起来应该怎样，导致眼睛无法睁开或看上去全都错了。 造成此问题的另一个原因可能是使用错误的设置或调暗设置减少了跑步训练。</p>
<p><strong>7. Q：我什么时候应该停止训练？</strong></p>
<p>A：没有正确的答案，但是普遍的共识是使用预览窗口来判断何时停止训练和转换。没有确切的迭代次数或损失值，您应在此停止训练。 如果您正在运行预训练的模型，则建议至少进行100.000次迭代；如果从0开始运行新模型，则建议至少进行200.000次迭代，但是该数目甚至可能高达300.000次迭代（取决于模型必须学习的面孔的数量和数量） ）。</p>
<p><strong>8. Q：我什么时候应该启用或禁用随机扭曲，GAN，真面，样式效果，色彩转移和学习率下降？When should I enable or disable random warp, GAN, True Face, Style Power, Color Transfer and Learning Rate Dropout?</strong></p>
<p>A： 1.从“随机扭曲”开始，只要使模型能够泛化并达到0.4-0.6左右的损耗值，就应启用它-预测面（预览的第二和第四列）和最终结果面（第五列）应看起来正确，但可能仍然模糊。</p>
<p>2.接下来，您可以启用诸如Uniform Yaw之类的选项，以帮助概括轮廓面或帮助培训它们，以防您在源数据集中没有很多东西的情况下使用，但是不必总是使用RW来运行此选项，以后可以在启用该选项时启用禁用RW。</p>
<p>3.在禁用RW之前，您可以启用LRD并对其进行更多地训练，以使其在此阶段中学习更多，接下来，您将禁用RW和LRD，以便模型可以在下一阶段中正确进行训练。稍后，在禁用RW的情况下进行训练并有选择地为4-9运行一些其他选项之后，您可以第二次启用LRD，在LRD之后，您不应启用GAN以外的任何其他选项。</p>
<p>4.可以在禁用“随机扭曲”之前或之后使用“ True Face and Style Power”，但是建议在禁用RW之后以及启用LRD之前使用它们。</p>
<p>5.GAN应该最后启用，并且在同时启用LRD时也必须启用。</p>
<p>6.可以从培训开始或结束时就启用颜色转移，这完全取决于您的SRC面部表情/数据集在色彩方面与DST /目标视频的匹配程度。</p>
<p>7.仅当源面集/数据集缺少某些角度时才应启用随机翻转-注意使用随机翻转可能会导致某些问题，并且如果面部具有一些不对称的特征-它们将被镜像，建议您在启动随机翻转时RW仍处于启用状态。</p>
<p>8.对于大多数训练，应该启用蒙版训练（仅全脸），因为它有助于训练模型需要学习的内容，即所应用的XSeg遮罩（如果XSeg遮罩为未应用），但是如果您打算在合并过程中腐蚀蒙版（如果源面比DST大/宽，并且您不希望它的形状被蒙版剪切），则可以禁用它（如果这样做）确保在启用GAN之前先执行此操作。</p>
<p>9.禁用RW之后但在LRD和GAN之前，应启用眼睛优先级，因为其他选项可能会引起问题（真面目，样式效果）。在某些情况下，当仍在使用RW时，用户在运行它时报告了良好的效果，但请记住，启用它会优先考虑眼睛区域和面部其余部分，其学习速度不会像平常那样快。</p>
<p><strong>9. Q：DFL根本不起作用（提取，培训，合并）和/或我收到错误消息。</strong></p>
<p>您的GPU可能不受支持，您正在尝试在较新版本的DFL上运行旧模型（或以其他方式），或者软件或PC出现问题。</p>
<p>首先检查您的GPU是否受支持，DFL需要CUDA计算能力为3.0： <a href="https://zh.wikipedia.org/wiki/CUDA#GPUs_supported">CUDA GPUs_supported</a> 然后查看是否拥有DFL的最新版本：GOOGLE DRIVE TORRENT 然后检查您要运行的模型是否仍然兼容，最简单的方法是尝试运行具有相同参数的新模型（将批次大小调整为较低的值，例如2-4，以进行测试） 如果仍然有问题，请检查您的PC，GPU驱动程序过时和Windows更新等待中之类的事情可能会引起一些问题。 如果仍然无法运行，则可以在问题部分中创建一个新线程，但是在执行此操作之前，请检查github上的问题选项卡，以查看其他用户是否没有相同的问题/错误：DFL 2.0 GITHUB 如果找不到任何东西，并且您已在论坛上搜索类似的问题，请在此处创建新主题：<a href="https://mrdeepfakes.com/forums/forum-questions">forum-questions</a>或在此处发布有关信息。</p>
<p><strong>10. 训练SAEHD时出现OOM /内存不足错误。</strong> 如果遇到OOM错误，则意味着您的VRAM即将用尽，可以更改各种设置来解决此问题：</p>
<p>a）减少批次大小-较低的批次大小意味着模型在较少的图像上进行训练，因此使用较少的VRAM，但这意味着与达到较高的批次大小相比，您将需要更长的训练时间才能达到相同的结果，例如2-4的极低批次大小也会导致结果准确性降低。</p>
<p>b）更改优化器设置（models_opt_on_gpu）-设置为True时，优化器和模型均由GPU处理，这意味着更快的迭代时间/性能/更快的训练，但VRAM使用率更高；如果设置为False，则将处理运行网络优化器的职责通过CPU进行操作，这意味着较少的VRAM使用量，可能没有OOM，甚至可能的批处理量更大，但是由于迭代时间较长，因此训练速度会变慢。</p>
<p>c）关闭其他功能，例如面部和bg样式转换，TrueFace训练，GAN训练或性能沉重的CT方法（如SOT-M）-使它们增加迭代/训练时间并使用更多的VRAM。</p>
<p><strong>11. Q：I've turned off all additional features and the training is still giving me OOM errors even at low batch size.</strong></p>
<p>A：在这种情况下，您甚至可以更改更多设置，但由于您只能设置一次，因此将需要您开始新的模型训练：</p>
<p>a）以降低的分辨率运行模型-即使可以进行所有优化并禁用各种功能，仍然可能无法运行所需的分辨率，只需降低分辨率直到可以运行（分辨率为16倍）</p>
<p>b）减小自动编码器尺寸，编码器尺寸，解码器尺寸，解码器蒙版尺寸。 这些设置控制着模型的尺寸，因此更改它们可以对模型学习面部和表情特征的能力产生巨大影响。 将该值设置为低值可能意味着该模型不会闭上眼睛或无法学习某些面部特征。 如果您无能为力，请仅更改它们。 有关他们做什么的更多信息，请查看指南。</p>
<p>c）购买具有更多VRAM的GPU。</p>
<p><strong>12. Q：我的源数据集中有太多相似的面孔，有没有可以用来删除它们的工具？</strong></p>
<p>A：是的，您可以使用内置的DFL排序方法，也可以使用VisiPics之类的应用来检测源数据集中的相似外观并将其删除。</p>
<p><strong>13. Q：我正在训练已经进行了数千次迭代的模型，但是预览窗口中的面孔突然变成黑/白/看起来很怪异，我的损失值上升/为零。</strong></p>
<p>A：您的模型已经崩溃，这意味着您不能再使用它，必须重新开始，如果有备份，请使用它们。为防止模型崩溃，请使用渐变裁剪或仅启用备份，通常除非使用样式功能（否则强烈建议启用渐变裁剪），否则模型不会崩溃（但强烈建议您启用渐变裁剪），即使您担心即使没有启用任何其他功能也要崩溃 您可以始终在不影响性能的情况下始终启用它（可能很难注意到，根据我的测试，最多最多可以增加50-100毫秒）。</p>
<p><strong>14. Q：如果我训练Celeb A的模型（data_src）并使用Celeb B（data_dst）作为目的地，是否可以使用相同的Celeb A模型替换新的Celeb C？ 我可以重用模型吗？</strong></p>
<p>A：是的，实际上，如果您打算对同一来源进行更多的伪造，甚至在使用同一数据集时，也建议重用您的模型。 当使用完全不同的源和目标/目标时，您也可以重新使用模型。</p>
<p><strong>15. Q：我应该预训练我的模型吗？</strong></p>
<p>A：与重用一样，是的，您应该进行预训练。使用DFL内置的预训练功能，您可以在启动模型时选择该功能。 这是预训练模型，在200k至400k迭代中的任何位置运行此功能并在要完成预训练后将其关闭的正确方法。</p>
<p><strong>16. Q：我遇到错误：不是在DeepFaceLab中训练所需的dfl图像文件error: is not a dfl image file required for training in DeepFaceLab</strong></p>
<p>A：这意味着data_src / aligned和/或data_dst内部的图片对于DFL训练无效。 这可能是由以下几方面引起的：</p>
<p>1.您正在使用名人的共享数据集之一，尽管它们看起来像对齐的面孔（256x256图像）可能只是从中提取的图片，但它们是由不同于DFL的软件或较旧版本制作的。以不同方式存储界标/路线数据的不同应用。要修复它们，您只需要对它们运行对齐过程，只需将它们放入“ data_src”文件夹（而不是其中的“ aligned”文件夹），然后使用4重新对齐它们即可。data_src提取面S3FD</p>
<p>2.对齐后，您在gimp / photoshop中的data_src或data_dst的对齐文件夹中编辑了脸部/图像。 编辑这些图像时，将覆盖存储在其中的地标/路线数据。 如果要编辑这些图像，请首先运行4.2）data_src util faceset元数据保存以将对齐信息保存在单独的文件中，然后编辑图像并运行4.2）data_src util faceset元数据恢复以还原该数据。 仅允许编辑AI放大/增强功能（您现在也可以使用4.2进行操作）data_src实用面部设置增强功能，而不是使用外部应用程序（例如Gigapixel），颜色校正或对不改变其形状的面部进行编辑（例如删除或添加内容），则不允许翻转/镜像或旋转。</p>
<p>3.您的“ data_src / dst”或“ aligned”文件夹中有未提取的未对齐的常规图像。</p>
<p>4.您的“ data_src / aligned”文件夹中有_debug面。删除它们。</p>
<p><strong>17. Q：转换时出现错误：找不到XYZ.jpg / png的人脸，没有人脸地复制。I'm getting errors during conversion: no faces found for XYZ.jpg/png, copying without faces.</strong></p>
<p>A：这意味着对于“ data_dst”文件夹中的XYZ帧，没有脸部被提取到“ aligned”文件夹中。 这可能是因为在该帧中实际上没有可见的脸部（正常），或者它们是可见的，但是由于它们所处的角度或障碍物而无法检测到。 要解决此问题，您需要手动提取这些面孔。 查看主要指南，尤其是有关清理data_dst数据集的部分。</p>
<p>总体而言，在开始训练之前，应确保已对齐并正确提取了多少张面孔。 并记住，在训练之前应该清理两个数据集，以了解更多信息，请查阅第一篇文章（指南），并阅读以下有关准备源数据集以供训练使用并在我们的论坛上共享的主题</p>
<p><strong>18. Q：转换期间 警告：检测到多张脸。 强烈建议分开对待它们，并警告：检测到多张面孔。 将不使用定向模糊。 I'm getting errors: Warning: several faces detected. Highly recommended to treat them separately and Warning: several faces detected. Directional Blur will not be used. during conversion</strong></p>
<p>A：这是由data_dst / aligned文件夹中的多个面孔引起的。 提取过程试图不惜一切代价检测每帧中的面部。 如果它确实检测到多个面部或一个真实的面部并错误地将其他事物检测为面部，则会为每个帧创建多个文件，如下所示：0001_0.jpg 0001_1.jpg 0001_2.jpg（如果检测到3张面部）。</p>
<p><strong>19. Q：合并后，我在某些或所有合并帧中看到原始/ DST面。</strong></p>
<p>A：确保将转换器模式设置为叠加模式或“原始”模式以外的任何其他模式，并确保已对齐data_dst.mp4文件所有帧中的面。 如果您仅在某些帧上看到原始人脸，那是因为未从相应的帧中检测到它们/将它们对齐，则可能由于各种原因而发生这种情况：难以看到人脸的极端角度，模糊/运动模糊，障碍物等。 总体而言，您希望始终将data_dst.mp4中的所有面孔对齐。</p>
<p><strong>20. Q：训练时那些0.2513 0.5612代表什么意思？</strong></p>
<p>A：这些是损失值。 它们表明模型的训练程度。但是，除非它们已经稳定在某个值附近（假设您没有更改任何模型参数），否则您不应该关注它们，除非看到它们的值突然上升（上下波动），而应关注预览窗口并查找诸如 牙齿分离，美容痕迹，鼻子和眼睛，如果它们锋利且看起来不错，那么您就不必担心任何事情。 如果您发现损耗值由于某些原因尽管没有改变但仍因某些原因而上升，请考虑停止训练并通过梯度裁剪恢复它，或者禁用一些其他选项，这些选项可能是您在错误的设置下启用的，这现在会引起问题。</p>
<p><strong>21. Q：理想损耗值是多少，低/高损耗值应为多少？</strong></p>
<p>A：这完全取决于设置，数据集和各种不同的因素。通常，您希望在禁用所有功能的情况下开始训练，但样本的随机扭曲（以及可选的梯度裁剪，以防止模型崩溃和万一您的源数据集缺少某些面部/头部角度的情况下进行随机翻转）损失到0.4-0.5以下（取决于 模型架构，以及是启用了屏蔽训练的全脸模型还是启用了屏蔽训练的全脸/头部模型，以及模型分辨率或模型尺寸。 禁用随机扭曲模型后，应该能够达到0.15到0.25之间的损失值。 在某些情况下，您的模型可能会陷入某些损失值，或者永远无法达到较低的损失值。</p>
<p><strong>22. Q：我的模型崩溃了，我能以某种方式恢复它吗？</strong></p>
<p>A：不，您需要重新开始，或者如果使用了备份，请使用备份。</p>
<p><strong>23. Q：如果您使用名人面部表情训练并且想要向其中添加更多面部/图像/框架怎么办？ 如何为现有src / source / celebrity数据集增加更多种类？</strong></p>
<p>A：最安全的方法是将整个“ data_src”文件夹的名称更改为其他名称，或将其临时移动到其他位置，然后从新的data_src.mp4文件中提取帧，或者如果您已经提取了帧并准备好一些图片，则创建一个 新文件夹“ data_src”，将其复制到其中并运行data_src提取/对齐过程，然后将对齐的图像从旧的data_src / aligned文件夹复制到新文件夹中，并在Windows要求替换或跳过时，选择重命名选项 文件，因此您可以保留所有文件，而不会最终用新文件替换旧文件。</p>
<p><strong>24. Q：dst faceset / data_dst.mp4是否也需要清晰且高质量？ dst faceset / dataset / data_dst中的某些面孔会有点模糊/有阴影等吗？ 我的data_dst / aligned文件夹中的面孔模糊怎么办</strong></p>
<p>A：您希望您的data_dst尽可能清晰，并且没有任何运动模糊。 data_dst中的面孔模糊会导致几个问题： -首先是某些框架中的某些面孔将不会被检测到-转换/合并时，原始面孔将显示在这些框架上，因为在提取过程中无法正确对齐它们，因此您必须手动提取。 -其次是其他人可能未正确对齐-这将导致该帧上的最终脸部旋转/模糊，并且看起来很不正确，并且与其他模糊脸部相似，必须手动对齐才能用于训练和转换。 -第三-即使在某些情况下使用手动对齐，也可能无法正确检测/对齐面部，这又将导致原始面部在相应的帧上可见。 -包含运动模糊或正确对齐的模糊（不清晰）的面部可能仍会产生不良结果，因为用于训练的模型无法理解运动模糊，模糊时面部的某些部分（如嘴巴）可能显得更大/更宽或只是不同而已，模型会将其解释为该部分的形状/外观发生了变化，因此，预测的假面和最终的假面都将看起来不自然。 您应该从训练数据集（data_dst / aligned文件夹）中删除那些模糊的面部，然后将它们放在其他地方，然后再将它们复制回data_dst / aligned文件夹，然后再进行转换，这样我们可以将交换的面部显示在与那些模糊的面部相对应的帧上。 要消除运动中的怪异表情，您可以在合并中使用运动模糊（但不适用于“ data_dst / aligned”文件夹中只有一组面孔且所有文件都以_0前缀结尾的情况）。</p>
<p>您希望SRC数据集和DST数据集都尽可能清晰和高质量。 某些帧上的少量模糊不应该引起很多问题。至于阴影，这取决于我们在谈论多少阴影，可能看不见小的浅色阴影，您可以在脸上带有阴影的情况下获得良好的效果，但在很大程度上也会看起来很糟糕，您希望将脸部照亮均匀分布，并尽可能减少刺眼/尖锐和深色阴影。</p>
<p><strong>25. Q：当我尝试将Deepfake转换回8）转换为mp4的mp4时，找不到错误reference_file。</strong></p>
<p>A：您在“工作区”文件夹中缺少data_dst.mp4文件，请检查是否未删除该文件： 之所以需要它，是因为即使使用3）从视频data_dst FULL FPS提取图像将其分成单独的帧，“ data_dst”文件夹中的所有内容也只是视频的帧，您还需要声音，该声音取自 原始的data_dst.mp4文件。</p>
<p><strong>26. Q：我不小心删除了data_dst.mp4文件，无法恢复，仍然可以将合并/转换后的帧转换为mp4视频吗？</strong></p>
<p>A：是的，如果您已经永久删除了data_dst.mp4，并且无法恢复它或呈现相同的文件，您仍然可以使用ffmpeg和适当的命令将其手动转换回mp4（尽管没有声音）：</p>
<ul>
<li>start by going into folder .../_internal/ffmpeg and copy ffmpeg.exe</li>
<li>paste it into the merged folder</li>
<li>open up command line by pressing windows key + r (run) and typing cmd or searching it up after pressing windows key and typing cmd/cmd.exe</li>
<li>copy address of your merged folder (example: DFLworkspacedata_dstmerged)</li>
<li>in the command line type the letter of your drive, as in example above that would be "d:" (without quotation marks) and press enter</li>
<li>line D:&gt; should appear, next type "cd: FULL_ADDRESS", example: "cd: D:workspacedata_dstmerged"</li>
<li>you should now see your entire address like this: DFLworkspacedata_dstmerged&gt;</li>
<li>enter this command: ffmpeg -r xx -i %d.jpg -vcodec libx264 -crf 20 -pix_fmt yuv420p result.mp4</li>
<li>xx is framerate</li>
<li>d is a number representing amount of numbers in the file name so if your merged frames have names like 15024.jpg that would be 5, if it's 5235.jpg it is 4, etc. If your images are pngs, change .jpg to .png</li>
<li>crf is quality setting, best to be left at 20.</li>
</ul>
<p>If your merged file names have some letters in front like out12345.jpg add "out" before the % sign.</p>
<p>Example command for converting frames named "out_2315.png" into an 30 fps .mp4 file named "deepfake".</p>
<p>ffmpeg -r 30 -i out%4.png -vcodec libx264 -crf 20 -pix_fmt yuv420p deepfake.mp4</p>
<p>If you want to use x265 encoding change libx264 to libx265.</p>
<p><strong>27. Q：您可以暂停合并，然后再恢复吗？ 您可以保存合并设置吗？ 我的合并失败/合并时出现错误，并且卡在％处，我可以再次启动它，然后从上一个成功合并的帧开始合并吗？</strong></p>
<p>A：是的，默认情况下，交互式转换器/合并在“模型”文件夹中创建会话文件，该文件同时保存进度和设置。</p>
<p>如果您只想暂停训练，则可以单击&gt;，它将暂停。 但是，如果您需要将其完全关闭/重新启动PC等，则退出了与esc的合并，并等待它保存进度，下次选择合并/转换器（Y / N）后，下次启动合并时-是，您会 将会提示您是否要使用保存/会话文件并恢复进度，合并将在正确的框架处以正确的设置加载。</p>
<p>如果合并失败并且没有保存进度，则必须手动恢复它，方法是先备份“ data_dst”文件夹，然后删除data_dst中所有提取的帧以及“ aligned”文件夹中的所有图像 在“ data_dst”内部，对应于已在文件夹“ merged”中转换/合并的帧。 然后，只需启动合并/转换器，输入之前使用的设置，然后转换其余帧，然后从备份的“ data_dst”文件夹中将新合并的帧与旧的合并，并照常转换为.mp4即可。</p>
<p><strong>28. Q：训练期间预览中的面孔看起来不错，但转换后看起来很糟。 我看到了原始脸的一部分（下巴，眉毛，双脸轮廓）。</strong></p>
<p>A：预览中的面孔是AI的原始输出，然后需要在原始素材上进行合成。因此，当人脸形状不同或稍小/较大时，您可能会在DFL合并创建的蒙版周围/外部看到原始人脸的一部分。 要解决此问题，您需要更改转换设置，方法是：</p>
<ul>
<li><p>调整遮罩类型</p></li>
<li><p>调整遮罩腐蚀（大小）和模糊（羽化，使边缘平滑）</p></li>
<li><p>调整脸部大小（比例）</p></li>
</ul>
<p>注意：负腐蚀会增加面罩的尺寸（覆盖更多），正腐蚀会减小面罩的尺寸。</p>
<p><strong>29. Q：使用“无缝”模式时，最终结果/深层伪影具有怪异的伪影，面部变化的颜色，背景的颜色渗出，并使其在角落/边缘的颜色闪烁/变暗/更改颜色。</strong></p>
<p>A：您正在使用无缝/历史/无缝+历史叠加模式，或者使用具有变化光照条件的源数据集/面集训练了模型，并且在训练过程中未使用任何颜色转移。</p>
<ul>
<li>使用覆盖或除无缝/历史/无缝+历史之外的任何其他模式</li>
<li>如果要使用无缝：</li>
<li>减小遮罩/脸部的大小，以使其不会“触摸”外部区域，因此不会通过增加“侵蚀遮罩”值来获得脸部/头部外部的背景/区域的颜色。</li>
<li>或通过增加“模糊蒙版”（Blur Mask）值来平滑蒙版/脸部的边缘，这可能会掩盖某些颜色变化，还有助于使脸部看起来更...“无缝”（当您减小蒙版大小时）。 如果仍然持续使用上述简单叠加模式，则这两种方法都可能会或可能不会解决问题。</li>
</ul>
<p>如果您的源数据集包含具有不同光照条件的面部图像并且未使用颜色转移，则可能需要返回并继续启用颜色转移进行更多训练。 万一打开它会严重洗掉颜色或以不好的方式影响训练数据/面部的颜色（褪色，错误的颜色，过度饱和的颜色，噪点）或使学习的面部模糊（由于模型的变化太大）必须全面学习，好像源数据集和目标数据集中有新面孔一样），您可能需要保存界标数据并编辑源数据集颜色以更好地匹配目标数据集，并且变化较少。</p>
<p>我建议除非绝对必要，否则不要使用无缝模式，即使如此，我还是建议在每个主要角度和相机移动/光线变化时停下来看看它是否不会引起那些伪影。</p>
<p><strong>30. Q：半脸，半脸，全脸和全脸face_type模式有什么区别？</strong></p>
<p>A：全脸是覆盖整个脸部/头部的新模式，这意味着它也覆盖了整个额头，甚至覆盖了某些头发和其他特征，这些特征可能会被全脸模式剪切掉，并且在使用一半或一半时绝对不会出现脸部模式。它还在训练过程中带有新选项，让您训练称为masked_training的额头。首先，先启用它，然后将训练蒙版剪切到整个脸部区域，一旦对脸部进行了足够的训练，就禁用它并训练整个脸部/头部。此模式需要在后期手动屏蔽或训练自己的XSeg模型：<a href="https://mrdeepfakes.com/forums">mrdeepfakes.com</a></p>
<p>建议使用全脸face_type模式，以尽可能多地遮盖脸部，而无需多余的东西（发际线，额头和头部其他部位） 半脸模式是H64和H128模型中的默认face_type模式。它只覆盖一半的脸（从嘴到眉毛以下） 半脸是覆盖半脸约30％区域的一种模式。</p>
<p><strong>31. Q：什么是最适合深度伪造的GPU？ 我想升级我的GPU，我应该得到哪一个？</strong></p>
<p>A：20系最好，30系等更新</p>
<p><strong>32. Q：AutoEncoder，Encoder，Decoder和D_Mask_Decoder维度设置有什么作用？ 更改它们有什么作用？</strong></p>
<p>A：可以更改它们以提高性能或质量，将它们设置为高将使模型真的很难训练（缓慢，高使用vram），但会提供更准确的结果和更多的src，如外观，将其设置为低将提高性能但是结果将不太准确，并且模型可能无法学习人脸的某些特征，从而导致通用输出看起来更像dst或什么都不像dst或src。 自动编码器尺寸（32-1024？：help）：这是学习的整体模型能力。 价值太低，将无法学习所有内容-更高的价值将使模型能够学习更多表达式，并且以性能为代价更加准确。</p>
<p>编码器尺寸（16-256？：help）：这会影响模型学习不同表情，面部状态，角度，照明条件的能力。 值太低，模型可能无法学习某些表达式，模型可能无法闭上眼睛，嘴巴，某些角度的细节可能不够准确，较高的值将导致模型更加准确和富有表现力，前提是AE昏暗程度会相应提高。性能成本。</p>
<p>解码器尺寸（16-256？：help）：这会影响模型学习精细细节，纹理，牙齿，眼睛的能力，这些微小的事物会使人的面部变得细腻且可识别。 值太低将导致无法学习某些细节（例如牙齿和眼睛看起来模糊，缺少纹理），也可能无法正确学习一些微妙的表情和面部特征/纹理，从而导致像面部表情一样的src更少，价值更高将使面部更加细化，模型将能够以性能为代价选择更多这些细微的细节。</p>
<p>解码器蒙版尺寸（16-256？：help）：在启用学习蒙版的情况下进行训练时，会影响学习的蒙版的质量。不影响培训质量。</p>
<p><strong>33. Q：推荐的批量大小是多少？ 我应该设置多大的批量大小？ 批量大小可以设置多低？</strong></p>
<p>A：没有建议的批量大小，但是合理的值在8-12之间，其中16-22以上的值非常好，最小4-6的值。 批次大小2不足以正确训练模型，因此建议的最小值为4，值越大越好，但是在某些时候批次大小可能不利，尤其是在迭代时间开始增加或您有禁用models_opt_on_gpu-从而在CPU上强制优化器，这会减慢训练速度/增加迭代时间。 您可以通过将迭代时间除以批次大小来计算何时增加批次大小变得效率较低。选择可以在给定的迭代时间内为每个批次降低ms值的批次大小，例如：</p>
<p>批次8-1000/8 = 1000时1000 ms 批处理1500毫秒10-1500/10 = 150</p>
<p>在这种情况下，与批次10相比，在批次8中运行将在给定时间内提供更多的数据模型，但是差异很小。如果说我们要使用批处理12，但得到一个OOM-因此我们禁用models_opt_on_gpu，它现在看起来可能像这样： 批次12时为2300毫秒（CPU上的Optimizer）-2300/12 = 191毫秒，这比批次8和迭代时间为1000毫秒的128毫秒长得多。</p>
<p>启动模型时，最好使用较小的批处理大小-较长的迭代时间，然后在禁用随机扭曲时增加它。</p>
<p><strong>34. Q：如何使用预训练模型？</strong></p>
<p>A：只需下载它，然后将所有文件直接放入模型文件夹即可。 开始训练，在选择要训练的模型（如果文件夹中还有更多）和要训练的设备（GPU / CPU）之后的2秒钟内按任意键，以覆盖模型设置并确保禁用预训练选项，以便正确启动 训练中，如果您启用了预训练选项，则模型将继续进行预训练。 请注意，模型会将迭代计数还原为0，这是预训练模型的正常行为，这与不使用预训练功能而只是在随机面孔上训练的模型不同。</p>
<p><strong>35. Q：我的GPU使用率非常低，尽管选择了GPU进行训练/合并，也没有使用GPU。</strong></p>
<p>A：它可能正在使用中，但是Windows不仅报告CUDA使用情况（这是您应该查看的），而且GPU的总使用情况可能会更低（大约5-10％）。 要在培训期间（在Windows 10中）查看CUDA / GPU的真实使用情况，请进入任务管理器-&gt;性能-&gt;选择GPU-&gt;将4个较小的图形之一更改为CUD。</p>
<p>如果您使用的是其他版本的Windows，请下载外部监视软件（例如HWmonitor或GPU-Z），或者查看VRAM的使用情况，该使用率应接近培训期间的最大值。</p>
<h1 id="转载来源">转载来源</h1>
<p><a href="http://dfldata.xyz/forum.php?mod=viewthread&amp;tid=116&amp;page=1&amp;extra=#pid1515">【必看】DFL官方使用说明【已汉化】 - 软件下载与教程 - Discuz! Board - Powered by Discuz!</a></p>
]]></content>
      <tags>
        <tag>转载</tag>
        <tag>DeepFaceLab</tag>
      </tags>
  </entry>
  <entry>
    <title>学习Manim</title>
    <url>/2019/11/24/%E5%AD%A6%E4%B9%A0Manim/</url>
    <content><![CDATA[<h1 id="什么是manim">什么是Manim？</h1>
<p>Manim是Youtube上的UP主3Blue1Brown用来做跟数学和物理有关的动态视频所使用的动画引擎。可以用来制作一些漂亮的动画，比如可视化数学证明、将数学公式的推导动画化、绘制动态的2D图和3D图、做机械结构的动画、甚至制作乐谱和钢琴弹奏的动画。</p>
<p>那么Manim是如何做出这些动画的呢？我们来看看Manim的5个组成部分。</p>
<ol type="1">
<li>Python。不用多说，这是Manim的心脏，生成动画的代码是用Python语言来写的。</li>
<li>LaTeX。用来生成文字和公式。</li>
<li>Cairo。用来绘图。</li>
<li>FFmpeg。用来将图片拼成视频。</li>
<li>SoX。用来负责和音频有关的部分。</li>
</ol>
<p>这5个部分组合在一起使用，于是就能做出有趣的数学视频拉。</p>
<p>Manim已在GitHub上开源，这是<a href="https://github.com/3b1b/manim">Manim的主页</a>。</p>
<h1 id="在windows上安装">在Windows上安装</h1>
<h2 id="下载并安装latex">下载并安装LaTeX</h2>
<p>这里使用的是MiKTeX，MiKTeX是LaTeX的一个实现，可以理解成LaTeX就是手机这个概念，而MiKTeX就是具体一个牌子的手机。我们在<a href="https://miktex.org/download">MiKTeX的官网</a>可以下载到安装包（我下载到的版本是2.9.7255的basic MiKTeX），然后按照步骤安装即可。</p>
<div class="note warning"><p>basic MiKTeX有可能会在渲染中文等方面出现包不全的问题，尽量下载完整版或者TeXLive完整版安装使用。</p>
</div>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A21.png" alt="MiKTeX安装界面1.png" /><figcaption aria-hidden="true">MiKTeX安装界面1.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A22.png" alt="MiKTeX安装界面2.png" /><figcaption aria-hidden="true">MiKTeX安装界面2.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A23.png" alt="MiKTeX安装界面3.png" /><figcaption aria-hidden="true">MiKTeX安装界面3.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A24.png" alt="MiKTeX安装界面4.png" /><figcaption aria-hidden="true">MiKTeX安装界面4.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A25.png" alt="MiKTeX安装界面5.png" /><figcaption aria-hidden="true">MiKTeX安装界面5.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A26.png" alt="MiKTeX安装界面6.png" /><figcaption aria-hidden="true">MiKTeX安装界面6.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A27.png" alt="MiKTeX安装界面7.png" /><figcaption aria-hidden="true">MiKTeX安装界面7.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MiKTeX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A28.png" alt="MiKTeX安装界面8.png" /><figcaption aria-hidden="true">MiKTeX安装界面8.png</figcaption>
</figure>
<p>这样就安装好了。</p>
<h2 id="安装python">安装Python</h2>
<p>因为我的电脑上已经安装过Python所以安装的具体过程就不演示了。</p>
<p>这是<a href="https://www.python.org/">Python的官网</a>。截至目前Manim要求的Python版本是3.8。</p>
<h2 id="安装ffmpeg">安装FFmpeg</h2>
<p>前往<a href="https://www.ffmpeg.org/">FFmpeg的官网</a>下载对应的版本，我下载到的是4.2.1 win64 static版。下载好的文件应该是一个压缩包，解压并将解压好的文件夹放到一个固定的地方，这里我放到了C盘的根目录下。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_FFmpeg%E7%9B%AE%E5%BD%95.png" alt="FFmpeg目录.png" /><figcaption aria-hidden="true">FFmpeg目录.png</figcaption>
</figure>
<p>接着需要把bin目录的地址加到环境变量中，如下所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_FFmpeg%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="FFmpeg添加环境变量.png" /><figcaption aria-hidden="true">FFmpeg添加环境变量.png</figcaption>
</figure>
<p>这里注意是系统变量，不要加错了。</p>
<p>如果操作正确，那么打开命令行输入ffmpeg就能看到下面的内容：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_FFmpeg%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="FFmpeg安装成功.png" /><figcaption aria-hidden="true">FFmpeg安装成功.png</figcaption>
</figure>
<h2 id="安装sox">安装SoX</h2>
<p>到<a href="http://sox.sourceforge.net/">SoX的官方网站</a>下载安装包，我下载的版本是14.4.2 win32版本。下载完成后安装即可。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SoX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A21.png" alt="SoX安装界面1.png" /><figcaption aria-hidden="true">SoX安装界面1.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SoX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A22.png" alt="SoX安装界面2.png" /><figcaption aria-hidden="true">SoX安装界面2.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SoX%E5%AE%89%E8%A3%85%E7%95%8C%E9%9D%A23.png" alt="SoX安装界面3.png" /><figcaption aria-hidden="true">SoX安装界面3.png</figcaption>
</figure>
<p>安装完成后，和FFmpeg类似，要把SoX的目录加到环境变量中，如下所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SoX%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="SoX添加环境变量.png" /><figcaption aria-hidden="true">SoX添加环境变量.png</figcaption>
</figure>
<h2 id="安装各种python包">安装各种Python包</h2>
<p>这里为了隔离无关环境，因此使用Python的virtualenv隔离出一个虚拟环境用来安装相关Python包。</p>
<h3 id="创建虚拟环境">创建虚拟环境</h3>
<p>我在一个我想要的目录下新建了一个叫<code>学习Manim</code>的文件夹，在这个文件夹下打开命令行，输入：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">virtualenv manim_env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>稍等片刻，就能在当前目录下创建一个名为manim_env的虚拟环境。</p>
<p>之后输入命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> manim_env/Scripts/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就进入了虚拟环境中，在这个环境中安装的包不会影响到Python的全局环境。</p>
<h3 id="安装pycairo包">安装pycairo包</h3>
<p>因为直接pip安装pycairo包大概率会报错，因此需要到这个网站<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/">Python Extension Packages for Windows - Christoph Gohlke</a>下载对应版本pycairo的whl文件，由于我是64位Windows系统，Python版本是3.7，因此下载cp37m-win_amd64版本。如下图所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E4%B8%8B%E8%BD%BDpycairo.png" alt="下载pycairo.png" /><figcaption aria-hidden="true">下载pycairo.png</figcaption>
</figure>
<p>下载好之后在虚拟环境中运行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token punctuation">[</span>你的文件下载的路径<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>出现Successfully installed的信息之后安装就成功了。</p>
<h3 id="调整系统编码为utf-8">调整系统编码为UTF-8</h3>
<p>中文Windows系统的默认编码为GBK，这会导致Manim安装遇到编码问题，因此首先调整系统编码为UTF-8。 打开设置，按照下图的顺序设置就好，设置完会要求系统重启。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E8%B0%83%E6%95%B4%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A0%811.png" alt="调整系统编码1.png" /><figcaption aria-hidden="true">调整系统编码1.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E8%B0%83%E6%95%B4%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A0%812.png" alt="调整系统编码2.png" /><figcaption aria-hidden="true">调整系统编码2.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E8%B0%83%E6%95%B4%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A0%813.png" alt="调整系统编码3.png" /><figcaption aria-hidden="true">调整系统编码3.png</figcaption>
</figure>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E8%B0%83%E6%95%B4%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A0%814.png" alt="调整系统编码4.png" /><figcaption aria-hidden="true">调整系统编码4.png</figcaption>
</figure>
<h3 id="安装manim">安装Manim</h3>
<p>打开之前的虚拟环境，运行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> manimlib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>等待所有的安装完成就可以了。</p>
<p>另一种方式是直接从GitHub上clone到本地，这里推荐<a href="https://github.com/manim-kindergarten/manim">manim-kindergarten/manim</a>这个项目。</p>
<h3 id="安装pyreadline">安装pyreadline</h3>
<p>这个包需要手动安装，运行命令（都是在虚拟环境中）：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pyreadline<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="让manim支持中文">让Manim支持中文</h3>
<p>在<code>manim_env\Lib\site-packages\manimlib</code>文件夹下找到<code>constants.py</code>文件，打开它，找到<code>TEX_USE_CTEX = False</code>这一行，改成<code>TEX_USE_CTEX = True</code>之后保存。</p>
<p>（可能需要的操作）：打开<code>manim_env\Lib\site-packages\manimlib\ctex_template.tex</code>文件，将<code>\usepackage[UTF8]&#123;ctex&#125;</code>移动到第二行，保存。</p>
<h3 id="改回gbk编码可选">改回GBK编码（可选）</h3>
<p>安装完之后，你如果想的话，就按照之前的方式，把UTF-8编码改回GBK编码就行了。</p>
<h2 id="检查安装是否成功">检查安装是否成功</h2>
<p>下面从<a href="https://github.com/3b1b/manim/blob/master/example_scenes.py">这个网址</a>获取<code>example_scenes.py</code>文件，保存到电脑上，然后在命令行（虚拟环境）中打开文件所在的目录，输入下面的命令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim example_scenes.py SquareToCircle -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>暂时不用管这是什么意思，如果运行成功，会在当前目录下生成一个<code>videos</code>文件夹，进去找到<code>SquareToCircle.mp4</code>这个视频，播放一下，如果出现和下面的视频一样的动画，就说明Cairo能正常使用。</p>
<div id="dplayer3" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer3 = new DPlayer({"element":document.getElementById("dplayer3"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SquareToCircle.mp4"}});</script><!-- dplayer used1 -->
<p>接下来输入下面的命令检查LaTeX：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim example_scenes.py WriteStuff -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果出现了类似下面的对话框要求你安装一些文件，点击Install安装就行了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Package%20Installation.png" alt="Package Installation.png" /><figcaption aria-hidden="true">Package Installation.png</figcaption>
</figure>
<p>如果安装失败，十有八九是无法连接上包软件源，那么就重新运行一次命令，等再次弹出上面的窗口之后，点击<code>Change...</code>，打开下面的对话框。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Change%20Package%20Repository1.png" alt="Change Package Repository1.png" /><figcaption aria-hidden="true">Change Package Repository1.png</figcaption>
</figure>
<p>选中<code>Remote package repository (Internet)</code>，然后点击<code>Next</code>，进入下面的对话框，稍微等待一下之后，框里会出现源的列表，选择一个<code>China</code>的源，点击<code>Finish</code>。之后再安装。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Change%20Package%20Repository2.png" alt="Change Package Repository2.png" /><figcaption aria-hidden="true">Change Package Repository2.png</figcaption>
</figure>
<p>运行完之后，同样找到<code>WriteStuff.mp4</code>，播放一下，如果出现和下面一样的动画，就说明LaTeX正常。</p>
<div id="dplayer4" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer4 = new DPlayer({"element":document.getElementById("dplayer4"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_WriteStuff.mp4"}});</script><!-- dplayer used1 -->
<p>最后来测试一下中文，把下面的代码保存到一个名为<code>test_Chinese.py</code>的文件中。先不管它的意思。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span>

<span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">test_cn</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text01 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"黑夜给了我一双黑色的眼睛，"</span><span class="token punctuation">)</span>
        text02 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"我却用它寻找光明。"</span><span class="token punctuation">)</span>
        text03 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"顾城 《一代人》"</span><span class="token punctuation">)</span>
        text_group <span class="token operator">=</span> VGroup<span class="token punctuation">(</span>text01<span class="token punctuation">,</span> text02<span class="token punctuation">)</span>
        text02<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>text01<span class="token punctuation">,</span> DOWN<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text01<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>TransformFromCopy<span class="token punctuation">(</span>text01<span class="token punctuation">,</span> text02<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>text_group<span class="token punctuation">,</span>text03<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>之后运行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim test_Chinese.py test_cn -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果出现了形如<code>Exception: Xelatex error converting to xdv.</code>的错误，先把 <code>manimlib/constants.py</code> 中的 <code>MEDIA_DIR = "./media"</code> 改成 <code>MEDIA_DIR = os.path.join(os.getcwd(), "media")</code> 再进行尝试。</p>
<p>如果找到了下面的动画，说明中文也能正常显示出来了。</p>
<div id="dplayer5" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer5 = new DPlayer({"element":document.getElementById("dplayer5"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_test_cn.mp4"}});</script><!-- dplayer used1 -->
<p>如果你活着到达了这里，恭喜你，安装成功了！</p>
<h2 id="可选使用jupyter-notebook编辑">（可选）使用Jupyter Notebook编辑</h2>
<p>使用pip安装<code>manim-notebook</code>或<code>jupyter-manim</code>。</p>
<ul>
<li><a href="https://github.com/AkashKarnatak/manim_notebook">manim-notebook主页</a></li>
<li><a href="https://github.com/krassowski/jupyter-manim">jupyter-manim主页</a></li>
</ul>
<h1 id="开始学习manim">开始学习Manim</h1>
<h2 id="基本元素">基本元素</h2>
<p>打开<code>example_scenes.py</code>文件，可以看到第一行是这样的：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这一行实际上是给Linux用的，不是给Python解释器（或者你说的“编译器”）用的，它代表如果这个文件当作一个可执行文件来执行的时候，要调用哪个脚本引擎，像一般Shell脚本就会写<code>#!/bin/bash</code>之类。如果直接用Python执行，是不需要的。对Python来说这就是一行注释。</p>
<p>当Linux执行一个文件的时候，如果发现它是这样的格式，就会把<code>!</code>后面的内容提取出来拼在你的脚本文件或路径之前，当作实际执行的命令，对你这个脚本来说就是</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/bin/env python ./example_scenes.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>它代表调用<code>/usr/bin/env</code>，将后面两个值作为参数。env是个Linux命令，它会按照当前环境变量设置（主要是PATH变量），查找名为python的可执行文件，然后用后面的参数启动这个可执行文件，这就避免了将Python写死到固定位置，导致Python安装到其他可选位置（如<code>/usr/local/bin/</code>）下时脚本不可用的问题。</p>
<p>扯远了，总之在Windows下这行就是个没用的注释。不写也没关系。</p>
<p>第三行</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>表示导入Manim包中的所有内容，如果没有这一行就没办法使用Manim库。</p>
<p>在<code>manim_env\Lib\site-packages\manimlib\imports.py</code>这个文件中你可以找到所有Manim用到的包，比如numpy、math之类的，这个文件不要动它。</p>
<p>我们接下来学习如何从这些代码中输出动画。这里假设你了解Python的语法。</p>
<p>对于Python来说，每个动画都是一个从Scene继承的类，每个这样的类里要求必须有一个名为construct的函数，就像下面这样：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">NameOfScene</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Animation progress</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>所有的动画代码都写在construct函数的里面。</p>
<p>在<code>example_scenes.py</code>中，我们可以找到5个类：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">OpeningManimExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">SquareToCircle</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">WarpSquare</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">WriteStuff</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">UpdatersExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中就包括了刚才用来测试的<code>SquareToCircle</code>类和<code>WriteStuff</code>类。我们接下来从<code>OpeningManimExample</code>中输出动画，这样你就能知道Manim是怎么工作的了。</p>
<p>在文件目录下打开虚拟环境，然后输入：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">manim example_scenes<span class="token punctuation">.</span>py OpeningManimExample <span class="token operator">-</span>pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>格式就是manim+文件名+你要输出动画的类名+参数。</p>
<p>我们现在可以解释一下<code>-pl</code>是什么意思了。其中<code>p</code>表示preview，意思是输出完成后自动播放，<code>l</code>意思是low quality，在这里表示输出视频为480p、15fps，默认视频长宽比为16：9。之后会更详细的介绍更多渲染的选项。</p>
<p>等待输出完成你就可以看到效果了。</p>
<div id="dplayer6" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer6 = new DPlayer({"element":document.getElementById("dplayer6"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_OpeningManimExample.mp4"}});</script><!-- dplayer used1 -->
<p>新建一个文件<code>basic_elements.py</code>，我们来编写第一个动画。打开文件，输入如下内容：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">FirstScene</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第一行还是导入Manim的包。然后定义一个名为FirstScene的类。第5行，我们定义了一个变量text，TextMobject表示这是一行文字。第6行的作用是把这行文字加入到场景中，这样我们才能在动画里看到它。第6行的self我们暂时理解为存储着所有在屏幕上看到的对象。add这个函数表示把对象加到场景中，在这里对象是一行文字。</p>
<p>接下来我们来输出这个类。运行下面的指令：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim basic_elements.py FirstScene -ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果类名写错了或者不写，Manim会列出文件中有的所有类，并且让你选择，很方便。</p>
<p>最新版的Manim由于3b1b个人习惯，列出的类还会包括同一个目录下的其它文件，这样会导致列出的类过多，我们需要找到<code>manim_env\Lib\site-packages\manimlib\extract_scene.py</code>这个文件，将处于第60行左右的这一部分代码从：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">is_child_scene</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> inspect<span class="token punctuation">.</span>isclass<span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">issubclass</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> obj <span class="token operator">==</span> Scene<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>改成</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">is_child_scene</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> inspect<span class="token punctuation">.</span>isclass<span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">issubclass</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> obj <span class="token operator">==</span> Scene<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> obj<span class="token punctuation">.</span>__module__<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>module<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>保存一下，这样提示就只会列出当前文件中的类了。</p>
<p>这里我们用<code>-ps</code>表示输出一张图片而不是一段视频。运行完成后会在<code>videos\first_scene\images\</code>目录下生成一张名为<code>FirstScene.png</code>的图片，长成下面这个样子。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_FirstScene.png" alt="FirstScene.png" /><figcaption aria-hidden="true">FirstScene.png</figcaption>
</figure>
<p>这个类是没有办法导出成视频的，因为没有什么动画，如果你导出成视频，FFmpeg会报错。</p>
<h2 id="动画与暂停">动画与暂停</h2>
<p>我们接下来学习如何给文字加上动画和暂停。之前写的类只能输出图片，是因为使用的是<code>self.add()</code>，这个函数不会有动画效果。</p>
<p>我们新建一个文件<code>animations_and_pauses.py</code>，然后输入下面的代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">WriteText</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"This is a regular text"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>前5行之前已经认识了，第6行和第7行是新东西。现在来解释一下第6行和第7行是什么意思。</p>
<p>我们之前说过，self中保存着所有在屏幕上显示的对象，用add函数可以添加对象，但是没有任何动画。要为对象添加动画，需要使用<code>self.play()</code>。在参数中写<code>Write()</code>函数表示这个动画是写出字的效果，而Write的参数表示要画出动画的对象。这就是第6行的含义。</p>
<p>第7行表示将画面暂停3秒钟，我们使用<code>self.wait()</code>来暂停，参数里的数字表示暂停的时间，单位是秒，如果不填写参数，默认的暂停时间是1秒钟。</p>
<p>所以总结一下创建动画的逻辑是这样的：先声明一个文字对象（第5行），然后对这个对象应用一个动画（第6行），最后暂停3秒钟（第7行）。动画是从上往下按顺序一行一行执行的。要导出视频，动画必须要持续一段时间，而<code>play()</code>和<code>wait()</code>都能做到，但是<code>add()</code>不能。</p>
<p>我们来导出一下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim animations_and_pauses.py WriteText -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会得到下面的视频：</p>
<div id="dplayer7" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer7 = new DPlayer({"element":document.getElementById("dplayer7"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_WriteText.mp4"}});</script><!-- dplayer used1 -->
<p>我们接下来学习把对象从屏幕移除，在代码最后加入下面的语句：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">WriteText</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        self<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面的第4行表示把对象text从屏幕移除，这个移除是瞬间的，所以text会瞬间消失。之后第5行没有任何参数，表示等待1秒钟。</p>
<p>我们在play函数中没有指定动画的时长，是因为play已经有默认的动画时长了，如果要指定长度的动画，应该怎么办呢？我们可以把原先的代码改成下面这样：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">WriteText</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>新加的参数<code>run_time</code>可以指定动画的时长，单位也是秒，写成上面的形式之后，写字的动画就会持续3秒钟。</p>
<p>除了<code>Write()</code>之外，还有很多其他的动画，我们可以到<code>manim_env\Lib\site-packages\manimlib\animation\</code>中找到其他的动画名字。打开<code>creation.py</code>你可以看到类似下面的一些类：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ShowPartial</span><span class="token punctuation">(</span>Animation<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">ShowCreation</span><span class="token punctuation">(</span>ShowPartial<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">Uncreate</span><span class="token punctuation">(</span>ShowCreation<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">DrawBorderThenFill</span><span class="token punctuation">(</span>Animation<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">Write</span><span class="token punctuation">(</span>DrawBorderThenFill<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">ShowIncreasingSubsets</span><span class="token punctuation">(</span>Animation<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>你可以发现<code>Write()</code>是在这定义的。打开<code>fading.py</code>和<code>growing.py</code>还可以发现其它的函数，比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># fading.py</span>

<span class="token keyword">class</span> <span class="token class-name">FadeOut</span><span class="token punctuation">(</span>Transform<span class="token punctuation">)</span><span class="token punctuation">:</span>
  
<span class="token keyword">class</span> <span class="token class-name">FadeIn</span><span class="token punctuation">(</span>Transform<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeInFrom</span><span class="token punctuation">(</span>Transform<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeInFromDown</span><span class="token punctuation">(</span>FadeInFrom<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeOutAndShift</span><span class="token punctuation">(</span>FadeOut<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeOutAndShiftDown</span><span class="token punctuation">(</span>FadeOutAndShift<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeInFromPoint</span><span class="token punctuation">(</span>FadeIn<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">FadeInFromLarge</span><span class="token punctuation">(</span>FadeIn<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">VFadeIn</span><span class="token punctuation">(</span>Animation<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">VFadeOut</span><span class="token punctuation">(</span>VFadeIn<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">VFadeInThenOut</span><span class="token punctuation">(</span>VFadeIn<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># growing.py</span>

<span class="token keyword">class</span> <span class="token class-name">GrowFromPoint</span><span class="token punctuation">(</span>Transform<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">GrowFromCenter</span><span class="token punctuation">(</span>GrowFromPoint<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">GrowFromEdge</span><span class="token punctuation">(</span>GrowFromPoint<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">GrowArrow</span><span class="token punctuation">(</span>GrowFromPoint<span class="token punctuation">)</span><span class="token punctuation">:</span>

<span class="token keyword">class</span> <span class="token class-name">SpinInFromNothing</span><span class="token punctuation">(</span>GrowFromCenter<span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以尝试一下哪些可以用在text上哪些不行。我自己尝试的效果在下面，有些函数可能用法不对，之后再补充。</p>
<div id="dplayer8" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer8 = new DPlayer({"element":document.getElementById("dplayer8"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_testAnimations.mp4"}});</script><!-- dplayer used1 -->
<h2 id="位置旋转和字体">位置、旋转和字体</h2>
<p>我们现在学习除了文字之外的第一种对象——点。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染一下你就能在视频中看到一个点了。</p>
<p>就像代码中展示的那样，这个点是一个对象，而对象具有属性（变量）和方法（函数）。我们现在来学习怎样修改点的位置，这是通过类的方法来实现的。</p>
<p>“位置”这个属性可以分为两种：</p>
<ul>
<li>绝对位置</li>
<li>相对位置</li>
</ul>
<p>而修改点的绝对位置有两种方法：<code>.to_edge()</code>和<code>.to_corner()</code>，从名字就可以看出来这是将点移动到边和角上的方法。先来看<code>.to_edge()</code>其中的参数可以填<code>UP</code>、<code>DOWN</code>、<code>LEFT</code>、<code>RIGHT</code>。我们可以像下面这样使用：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>to_edge<span class="token punctuation">(</span>UP<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>UP</code>、<code>DOWN</code>、<code>LEFT</code>、<code>RIGHT</code>本质上是四个numpy的数组</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">UP    <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
DOWN  <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
LEFT  <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
RIGHT <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以看出第一位表示左右，从左到右对应-1到1，第二位表示上下，从下到上对应-1到1，就像一个平面直角坐标系一样。</p>
<p>类似的，想将点移动到角上，可以用<code>.to_corner()</code>方法，对应的参数同样有四个<code>UR</code>、<code>UL</code>、<code>DR</code>、<code>DL</code>，本质上它们也是numpy数组：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">UR <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
UL <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
DR <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
DL <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>对应关系也很容易看出来，就好像一个点的x，y坐标一样。</p>
<p>当然，既然是numpy数组，意味着是可以做计算的，比如<code>.to_corner(UR)</code>，你也可以写成<code>.to_corner(UP+RIGHT)</code>。</p>
<p>如果渲染之后你会发现，尽管使用了<code>.to_edge()</code>，但是点似乎离视频的边还有一小段距离。这是因为默认情况下，点中有一个属性buff，表示点和边之间的间隙。要想显式地指定间隙的大小，可以这样写：<code>.to_edge(DIRECTION, buff=NUMBER)</code></p>
<p>接下来是相对位置。第一个指定相对位置的方法是<code>.move_to()</code>，参数是一个向量。我们可以像下面一样：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        vector <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'float64'</span><span class="token punctuation">)</span>
        <span class="token comment">#                  x  y  z</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>vector<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这样点就会出现在相对于正中间(1, 2)的位置上，也就是右上部分的位置上。这里所有的向量坐标都是相对于视频正中间的。另外，<code>.move_to()</code>没有动画效果，是瞬时的。</p>
<p>上面的代码还可以写成下面的样子，效果是完全一样的，你可以思考一下为什么：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token operator">+</span>RIGHT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果我们想把一个点移到另一个对象（比如一段文字）的中心，我们可以这么做：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"here"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>DOWN<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>更进一步，如果我们想把一个点移动到文字的右边5个单位的位置时，就需要用到<code>.get_center()</code>方法了，这个方法可以获取一个对象的中心坐标，获得坐标之后就可以参与计算了。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"here"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>DOWN<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>text<span class="token punctuation">.</span>get_center<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">5</span><span class="token operator">*</span>RIGHT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>下面一个方法<code>.next_to()</code>正如名字一样，不是以物体的中心为参照的，而是物体的边界，所以这个方法不会产生重叠，而是会把对象“靠着”放。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"here"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>DOWN<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>LEFT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        <span class="token builtin">object</span><span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>text<span class="token punctuation">,</span> RIGHT<span class="token punctuation">,</span> buff<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>从上面可以看出<code>.next_to()</code>的用法，第一个参数表示参照对象，第二个表示方向，第三个表示间距，例子里的间距5，就是相对于text的右边缘，而不是中心。所以用<code>.next_to()</code>画出的点，会比<code>.move_to()</code>的稍稍靠右一点点。</p>
<p>最后一个相对位置的方法是<code>.shift()</code>，这个可以简单理解为移动的意思，参数就表示要移动的方向和距离（用向量来表示）。比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">object</span> <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>UP<span class="token operator">+</span>RIGHT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>RIGHT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第5行把点移到了坐标为(1, 1)的地方，而第7行则在这个基础上再往右移了一个单位，也就是移到了(2, 1)的位置。</p>
<p>接下来说说怎么旋转一个对象。我们先来旋转一段文字。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>PI<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment"># 弧度制</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用<code>.rotate()</code>方法，加上你要旋转的角度（用弧度制），对象就会在原来的基础上逆时针旋转对应的角度（负数就是顺时针旋转）。这个旋转是瞬时的。</p>
<p>如果想指定旋转中心，我们需要用参数<code>about_point</code>来指定。比如在下面一段代码中，我们想让点2以点1为旋转中心，逆时针旋转110°。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        dot1<span class="token punctuation">,</span> dot2 <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>dot1<span class="token punctuation">,</span> dot2<span class="token punctuation">)</span>
        dot1<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>UP<span class="token punctuation">)</span>
        dot2<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>LEFT<span class="token operator">+</span>DOWN<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        dot2<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">*</span>DEGREES<span class="token punctuation">,</span> about_point<span class="token operator">=</span>dot1<span class="token punctuation">.</span>get_center<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>从第8行可以知道2件事情：</p>
<ol type="1">
<li>如果不想使用弧度而想使用角度可以像第一个参数那样写</li>
<li>赋给<code>about_point</code>的不是一个对象（比如点），而是一个坐标。</li>
</ol>
<p>如果想翻转一个对象，可以使用<code>.flip()</code>方法，参数用来指定翻转的轴：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Positions</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>UP<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面的代码会把Text上下翻转。</p>
<p>最后我们来看一下如何指定字体。这是用LaTeX的格式来实现的。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SizeTextOnLaTeX</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        textHuge <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\Huge Huge Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        texthuge <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\huge huge Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textLARGE <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\LARGE LARGE Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textLarge <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\Large Large Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textlarge <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\large large Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textNormal <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\normalsize normal Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textsmall <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\small small Text 012.\\#!?&#125; Texto normal"</span><span class="token punctuation">)</span>
        textfootnotesize <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\footnotesize footnotesize Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textscriptsize <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\scriptsize scriptsize Text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        texttiny <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;\\tiny tiny Texto 012.\\#!?&#125; Text normal"</span><span class="token punctuation">)</span>
        textHuge<span class="token punctuation">.</span>to_edge<span class="token punctuation">(</span>UP<span class="token punctuation">)</span>
        texthuge<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textHuge<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textLARGE<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>texthuge<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textLarge<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textLARGE<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textlarge<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textLarge<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textNormal<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textlarge<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textsmall<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textNormal<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textfootnotesize<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textsmall<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        textscriptsize<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textfootnotesize<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        texttiny<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textscriptsize<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>textHuge<span class="token punctuation">,</span>texthuge<span class="token punctuation">,</span>textLARGE<span class="token punctuation">,</span>textLarge<span class="token punctuation">,</span>textlarge<span class="token punctuation">,</span>textNormal<span class="token punctuation">,</span>
                 textsmall<span class="token punctuation">,</span>textfootnotesize<span class="token punctuation">,</span>textscriptsize<span class="token punctuation">,</span>texttiny<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">TextFonts</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        textNormal <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"&#123;Roman serif text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textItalic <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\textit&#123;Italic text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textTypewriter <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\texttt&#123;Typewritter text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textBold <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\textbf&#123;Bold text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textSL <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\textsl&#123;Slanted text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textSC <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\textsc&#123;Small caps text 012.\\#!?&#125; Text"</span><span class="token punctuation">)</span>
        textNormal<span class="token punctuation">.</span>to_edge<span class="token punctuation">(</span>UP<span class="token punctuation">)</span>
        textItalic<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textNormal<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span>
        textTypewriter<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textItalic<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span>
        textBold<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textTypewriter<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span>
        textSL<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textBold<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span>
        textSC<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>textSL<span class="token punctuation">,</span>DOWN<span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">.5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>textNormal<span class="token punctuation">,</span>textItalic<span class="token punctuation">,</span>textTypewriter<span class="token punctuation">,</span>textBold<span class="token punctuation">,</span>textSL<span class="token punctuation">,</span>textSC<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>熟悉LaTeX的语法就能很容易看出来指定字体是怎么办到的。</p>
<h2 id="渲染设置">渲染设置</h2>
<p>我们现在学习一些最重要的渲染设置。</p>
<p>作为例子，首先把下面的代码保存成名为<code>rendering_settings.py</code>的文件。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">RenderingSettings</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Texts</span>
        obj1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span>
        obj2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UL<span class="token punctuation">)</span>
        obj3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UR<span class="token punctuation">)</span>
        obj4 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DR<span class="token punctuation">)</span>
        obj5 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DL<span class="token punctuation">)</span>

        <span class="token comment"># Animations</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj3<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj4<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj5<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>保存后用下面的命令进行渲染：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我们会得到一段视频。从视频属性或者文件夹的名称<code>480p15</code>我们可以知道，视频的fps是15帧每秒，宽854像素，高480像素，宽高比为16:9。</p>
<p>现在我们换一个渲染设置<code>-pm</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -pm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会得到一段新视频。从视频属性或文件夹名称<code>720p30</code>我们可以知道，视频的fps是30帧每秒，宽1280像素，高720像素，宽高比为16:9。视频质量变高了。</p>
<p>我们再把渲染设置换成<code>-p</code>：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>又会得到一段新视频。从视频属性或文件夹名称<code>1440p60</code>我们可以知道，视频的fps是60帧每秒，宽2560像素，高1440像素，宽高比为16:9。视频质量又变高了。</p>
<p>从上面归纳一下，<code>-p</code>是在渲染完后自动打开视频，<code>-l</code>表示low_quality，<code>-m</code>表示meduim_quality，不显式指定则表示high_quality。</p>
<p>我们之前提到<code>-ps</code>可以渲染一张图片，准确来说<code>-s</code>指的是渲染视频的最后一帧，这一般用于检查是否有错误。这样就不用为了最后的一点片段渲染整个视频了。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>执行完命令后会直接弹出最后一帧的图片。</p>
<p>其实我们可以一次渲染很多场景，比如在<code>example_scenes.py</code>文件里有很多类，这时候我们可以：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim example_scenes.py -ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>之后我们可以一次选择多个场景（用数字来选择），用逗号分隔。</p>
<p>选择完成之后Manim会渲染你选择的所有场景，渲染完之后会打开所有的结果。</p>
<p>如果想要渲染一个<code>.py</code>文件里的所有场景，可以使用<code>-a</code>参数。比如：</p>
<ul>
<li><code>-al</code> All scenes in low resolution</li>
<li><code>-am</code> All scenes in medium resolution</li>
<li><code>-a</code> All scenens in high resolution</li>
<li><code>-as</code> All scenes' last frames as images</li>
</ul>
<p>用<code>-r HEIGHT</code>可以显式地指定视频的高度。比如：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -plr <span class="token number">700</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样输出的视频高度就是700像素。不过长宽比始终会是16:9。</p>
<p>有了这条命令之后就可以实现对帧率的单独控制了：</p>
<ul>
<li><code>-plr HEIGHT</code> 15fps</li>
<li><code>-pmr HEIGHT</code> 30fps</li>
<li><code>-pr HEIGHT</code> 60fps</li>
</ul>
<p>如果需要渲染一个带alpha通道（也就是透明度）的视频，可以用<code>-t</code>参数。</p>
<p>默认长宽比是16:9，这个长宽比是否可以改变呢？当然可以，格式是这样的<code>-r HEIGHT, WIDTH</code>。</p>
<p>渲染过程中会出现进度条，不过一般都是进度条走完就消失了，如果想保留进度条，我们可以用<code>--leave_progress_bars</code>参数。</p>
<p>上面的这个参数有什么用呢？一个典型的场景就是，假设你的场景非常复杂，你只需要渲染其中一个部分，这时候你就可以使用<code>-n</code>参数。这个参数有两种用法。</p>
<ul>
<li><code>-n START</code>从第START个动画开始渲染，一直渲染到结束。</li>
<li><code>-n START, END+1</code>从第START个动画开始渲染，渲染到第END个动画。</li>
</ul>
<p>这里就涉及到一个问题，如何确定代码里的动画是第几个呢？</p>
<p>比如下面的代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">RenderingSettings</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Texts</span>
        obj1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span>
        obj2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UL<span class="token punctuation">)</span>
        obj3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UR<span class="token punctuation">)</span>
        obj4 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DR<span class="token punctuation">)</span>
        obj5 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DL<span class="token punctuation">)</span>

        <span class="token comment"># Animations</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 1</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 3</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 4</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 5</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 7</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj5<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 8</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>代码中标出来的数字就表示这是第几段动画。比如我想要渲染obj3到obj4的动画，我可以这样写：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -pl -n <span class="token number">4,8</span> --leave_progress_bars<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>输出的一部分是这样的：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Animation <span class="token number">0</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">1</span>/1 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">165</span>.43it/s<span class="token punctuation">]</span>
Animation <span class="token number">2</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">1</span>/1 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">276</span>.47it/s<span class="token punctuation">]</span>
Animation <span class="token number">4</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">96</span>.83it/s<span class="token punctuation">]</span>
Animation <span class="token number">6</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">105</span>.95it/s<span class="token punctuation">]</span>
Media will be written to ./media<span class="token punctuation">\</span>. You can change this behavior with the --media_dir flag.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>我们可以看到，Animation 0和Animation 2，分别对应了obj1和obj2的渲染，也就是代码里的第11和第14行。进度条后面的<code>1/1</code>就表示只渲染了1帧，而Animation 6后面的动画都没有渲染，这就表示我们达到了只渲染obj3和obj4的目的。</p>
<p>但是如果场景过于复杂呢？难道我们都要从头开始数吗？其实不需要，我们可以在代码里<code>print()</code>出一些信息，比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">RenderingSettings</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Texts</span>
        obj1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span>
        obj2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UL<span class="token punctuation">)</span>
        obj3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UR<span class="token punctuation">)</span>
        obj4 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DR<span class="token punctuation">)</span>
        obj5 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>DL<span class="token punctuation">)</span>

        <span class="token comment"># Animations</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 0</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 1</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 3</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Write obj3"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 4</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 5</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj4<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 6</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 7</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>obj5<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 8</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>           <span class="token comment"># 9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意第17行加入了print信息。这时候再使用<code>--leave_progress_bars</code>显示进度条信息：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim rendering_settings.py RenderingSettings -pl --leave_progress_bars<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这时候我们就能从输出看到：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Animation <span class="token number">0</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">103</span>.73it/s<span class="token punctuation">]</span>
Animation <span class="token number">2</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">99</span>.62it/s<span class="token punctuation">]</span>
Write obj3
Animation <span class="token number">4</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">101</span>.64it/s<span class="token punctuation">]</span>
Animation <span class="token number">6</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">101</span>.62it/s<span class="token punctuation">]</span>
Animation <span class="token number">8</span>: WriteTextMobject: <span class="token number">100</span>%<span class="token operator">|</span>▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒<span class="token operator">|</span> <span class="token number">15</span>/15 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">98</span>.30it/s<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以看到Write obj3的下一行正好就是Animation 4，和代码里是一致的。这样就可以知道你想要的片段是第几个了。这时候再使用<code>-n</code>就清楚你想要的片段编号是多少了。</p>
<div class="note info"><p>这个方法在git bash下面行不通，在cmd上是可以用的</p>
</div>
<p>如果想改变输出文件的名称，可以使用<code>-o OUTPUT_NAME</code>。</p>
<h2 id="tex公式">TeX公式</h2>
<p>我们现在来学习如何写TeX公式。</p>
<p>如果不会写TeX公式呢，这里推荐一个网站：<a href="https://www.codecogs.com/latex/eqneditor.php?lang=zh-cn">在线LaTeX公式编辑器</a>（另外一个强烈推荐的网站：<a href="https://www.latexlive.com/">在线LaTeX公式编辑器-妈叔出品</a>）。只需要鼠标点击就能生成想要的公式了，不仅可以显示对应的TeX代码，还能直接生成公式图片。如果不知道一些符号该怎么写也可以去这个网站查看。</p>
<div class="note info"><p>一般用<code>\frac{a}{b}</code>来生成分数，但是在Manim使用<code>{a}\over{b}</code>更好，待会会说明为什么。</p>
</div>
<p>新建一个名为<code>tex_formulas.py</code>的文件，然后新建一个场景名为Formula，如下：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">Formula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
        formula_tex<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意，要插入一个公式用的是<code>TexMobject</code>，而不是<code>TextMobject</code>，两者仅仅差了一个字母t。</p>
<p>第6行表示把公式放大2倍，这个很好理解。如果想把对象放缩，用<code>.scale(factor)</code>就好了，他会把对象的大小变为原来的factor倍。</p>
<p>然后在第5行的引号中输入你想插入的公式，比如导数的定义：</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\frac</span><span class="token punctuation">&#123;</span>d<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>dx<span class="token punctuation">&#125;</span>f(x)=<span class="token function selector">\lim</span>_<span class="token punctuation">&#123;</span>h<span class="token function selector">\rightarrow</span> 0<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token function selector">\frac</span><span class="token punctuation">&#123;</span>f(x+h)-f(x)<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>h<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><span class="math display">\[
\frac{d}{dx}f(x)=\lim_{h\rightarrow 0}{\frac{f(x+h)-f(x)}{h}}
\]</span></p>
<p>我们把上面的代码放到引号中：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">Formula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\frac&#123;d&#125;&#123;dx&#125;f(x)=\lim_&#123;h\rightarrow 0&#125;&#123;\frac&#123;f(x+h)-f(x)&#125;&#123;h&#125;&#125;"</span><span class="token punctuation">)</span>
        formula_tex<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>之后我们需要把TeX格式的公式转换成Python格式，有2种方法：</p>
<ol type="1">
<li>把所有的反下划线<code>\</code>都变成<code>\\</code>，比如<code>\frac</code>变成<code>\\frac</code>。</li>
<li>在字符串前面加上<code>r</code>，这在Python中表示这个字符串是一个非转义的原始字符串。</li>
</ol>
<p>转换完之后是这样的：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">Formula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;f(x)=\\lim_&#123;h\\rightarrow 0&#125;&#123;\\frac&#123;f(x+h)-f(x)&#125;&#123;h&#125;&#125;"</span><span class="token punctuation">)</span> <span class="token comment"># 第1种方法</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">r"\frac&#123;d&#125;&#123;dx&#125;f(x)=\lim_&#123;h\rightarrow 0&#125;&#123;\frac&#123;f(x+h)-f(x)&#125;&#123;h&#125;&#125;"</span><span class="token punctuation">)</span> <span class="token comment"># 第2种方法</span>
        formula_tex<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第5行和第6行都是正确的写法，选其中一种就可以了。</p>
<p>用下面的命令渲染一下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim tex_formulas.py Formula -ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以渲染出下面的图片了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Formula.png" alt="Formula.png" /><figcaption aria-hidden="true">Formula.png</figcaption>
</figure>
<p>当然，使用<code>TextMobject()</code>来书写公式也是可以的，不过要把公式放在<code>$</code>中间。这时候的公式是行内公式，会显得比较紧凑，和正常的公式有些不同。比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">InlineFormula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">r"Fraction: $\frac&#123;d&#125;&#123;dx&#125;$"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>会得到下面的图片：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_InlineFormula.png" alt="InlineFormula.png" /><figcaption aria-hidden="true">InlineFormula.png</figcaption>
</figure>
<p>如果想让行内公式以正常大小展示，可以使用<code>\displaystyle</code>，就像下面这样：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">InlineFormula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">r"Fraction: $\displaystyle\frac&#123;d&#125;&#123;dx&#125;$"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果如下，可以看出公式大了一点：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_InlineFormula2.png" alt="InlineFormula2.png" /><figcaption aria-hidden="true">InlineFormula2.png</figcaption>
</figure>
<p>之后我们会学习“打碎”公式和文字，这会非常有用。“打碎”是什么意思呢？举一个简单的例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">FragmentFormula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">'+'</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">)</span>
        formula_tex<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中第3行的效果和<code>formula_tex=TexMobject("a+b")</code>是完全一样的。</p>
<p>到这里我们就能解释为什么<code>\over</code>比<code>\frac</code>要好了，因为<code>\frac</code>没有办法被打碎，也就是说类似<code>TexMobject('\\frac&#123;', 'a&#125;&#123;', 'b&#125;')</code>的写法是会报错的。对于这种情况，可以用<code>TexMobject('a', '\\over', 'b')</code>代替。</p>
<p>如果想写多行的公式，那么可以使用三个引号<code>"""</code>或<code>'''</code>，这没什么特别的，就是Python中多行字符串的表示。比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MultiLineFormula</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula_tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token triple-quoted-string string">r'''
            \begin&#123;bmatrix&#125;
            a &amp; a \\
            a &amp; a \\
            a &amp; a
            \end&#123;bmatrix&#125;
        '''</span> <span class="token punctuation">)</span>
        formula_tex<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>formula_tex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染出来的结果是这样的：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MultiLineFormula.png" alt="MultiLineFormula.png" /><figcaption aria-hidden="true">MultiLineFormula.png</figcaption>
</figure>
<p>仔细看括号的正中间有一条小缝，这比较不美观，能不能把这条缝去掉呢？可以。</p>
<p>打开<code>manimlib/mobject/svg/tex_mobject.py</code>，找到下面的代码片段：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SingleStringTexMobject</span><span class="token punctuation">(</span>SVGMobject<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"template_tex_file_body"</span><span class="token punctuation">:</span> TEMPLATE_TEX_FILE_BODY<span class="token punctuation">,</span>
        <span class="token string">"stroke_width"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"fill_opacity"</span><span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token string">"background_stroke_width"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"background_stroke_color"</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
        <span class="token string">"should_center"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"height"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"organize_left_to_right"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"alignment"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意<code>background_stroke_width</code>这一行，这个参数是用来给对象添加阴影的。我们把后面的1改成0，然后保存。</p>
<p>重新渲染一下，小缝就没了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MultiLineFormula2.png" alt="MultiLineFormula2.png" /><figcaption aria-hidden="true">MultiLineFormula2.png</figcaption>
</figure>
<h2 id="数组">数组</h2>
<p>我们来看看数组有什么用。</p>
<p>新建一个名为<code>arrays.py</code>的文件。粘贴下列代码，先不用管是什么意思。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

COLOR_P <span class="token operator">=</span> <span class="token string">"#3EFC24"</span>

<span class="token keyword">class</span> <span class="token class-name">TextColor</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token string">"E"</span><span class="token punctuation">,</span> <span class="token string">"F"</span><span class="token punctuation">)</span>
        <span class="token comment">#                   0    1    2    3    4    5</span>
        
        text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>GREEN<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>ORANGE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">"#DC28E2"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>COLOR_P<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后渲染一下：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">manim arrays<span class="token punctuation">.</span>py TextColor <span class="token operator">-</span>ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会得到下面的图片：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_TextColor.png" alt="TextColor.png" /><figcaption aria-hidden="true">TextColor.png</figcaption>
</figure>
<p>我们看到ABCDEF六个字母，不过每一个字母都用了不同的颜色。</p>
<p>要改变一个对象的颜色，可以使用<code>.set_color()</code>方法。参数填的是对应的颜色。在<code>manimlib\constants.py</code>这个文件中可以找到已经定义好的一些颜色。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Colors</span>
COLOR_MAP <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"DARK_BLUE"</span><span class="token punctuation">:</span> <span class="token string">"#236B8E"</span><span class="token punctuation">,</span>
    <span class="token string">"DARK_BROWN"</span><span class="token punctuation">:</span> <span class="token string">"#8B4513"</span><span class="token punctuation">,</span>
    <span class="token string">"LIGHT_BROWN"</span><span class="token punctuation">:</span> <span class="token string">"#CD853F"</span><span class="token punctuation">,</span>
    <span class="token string">"BLUE_E"</span><span class="token punctuation">:</span> <span class="token string">"#1C758A"</span><span class="token punctuation">,</span>
    <span class="token string">"BLUE_D"</span><span class="token punctuation">:</span> <span class="token string">"#29ABCA"</span><span class="token punctuation">,</span>
    <span class="token string">"BLUE_C"</span><span class="token punctuation">:</span> <span class="token string">"#58C4DD"</span><span class="token punctuation">,</span>
    <span class="token string">"BLUE_B"</span><span class="token punctuation">:</span> <span class="token string">"#9CDCEB"</span><span class="token punctuation">,</span>
    <span class="token string">"BLUE_A"</span><span class="token punctuation">:</span> <span class="token string">"#C7E9F1"</span><span class="token punctuation">,</span>
    <span class="token string">"TEAL_E"</span><span class="token punctuation">:</span> <span class="token string">"#49A88F"</span><span class="token punctuation">,</span>
    <span class="token string">"TEAL_D"</span><span class="token punctuation">:</span> <span class="token string">"#55C1A7"</span><span class="token punctuation">,</span>
    <span class="token string">"TEAL_C"</span><span class="token punctuation">:</span> <span class="token string">"#5CD0B3"</span><span class="token punctuation">,</span>
    <span class="token string">"TEAL_B"</span><span class="token punctuation">:</span> <span class="token string">"#76DDC0"</span><span class="token punctuation">,</span>
    <span class="token string">"TEAL_A"</span><span class="token punctuation">:</span> <span class="token string">"#ACEAD7"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_E"</span><span class="token punctuation">:</span> <span class="token string">"#699C52"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_D"</span><span class="token punctuation">:</span> <span class="token string">"#77B05D"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_C"</span><span class="token punctuation">:</span> <span class="token string">"#83C167"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_B"</span><span class="token punctuation">:</span> <span class="token string">"#A6CF8C"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_A"</span><span class="token punctuation">:</span> <span class="token string">"#C9E2AE"</span><span class="token punctuation">,</span>
    <span class="token string">"YELLOW_E"</span><span class="token punctuation">:</span> <span class="token string">"#E8C11C"</span><span class="token punctuation">,</span>
    <span class="token string">"YELLOW_D"</span><span class="token punctuation">:</span> <span class="token string">"#F4D345"</span><span class="token punctuation">,</span>
    <span class="token string">"YELLOW_C"</span><span class="token punctuation">:</span> <span class="token string">"#FFFF00"</span><span class="token punctuation">,</span>
    <span class="token string">"YELLOW_B"</span><span class="token punctuation">:</span> <span class="token string">"#FFEA94"</span><span class="token punctuation">,</span>
    <span class="token string">"YELLOW_A"</span><span class="token punctuation">:</span> <span class="token string">"#FFF1B6"</span><span class="token punctuation">,</span>
    <span class="token string">"GOLD_E"</span><span class="token punctuation">:</span> <span class="token string">"#C78D46"</span><span class="token punctuation">,</span>
    <span class="token string">"GOLD_D"</span><span class="token punctuation">:</span> <span class="token string">"#E1A158"</span><span class="token punctuation">,</span>
    <span class="token string">"GOLD_C"</span><span class="token punctuation">:</span> <span class="token string">"#F0AC5F"</span><span class="token punctuation">,</span>
    <span class="token string">"GOLD_B"</span><span class="token punctuation">:</span> <span class="token string">"#F9B775"</span><span class="token punctuation">,</span>
    <span class="token string">"GOLD_A"</span><span class="token punctuation">:</span> <span class="token string">"#F7C797"</span><span class="token punctuation">,</span>
    <span class="token string">"RED_E"</span><span class="token punctuation">:</span> <span class="token string">"#CF5044"</span><span class="token punctuation">,</span>
    <span class="token string">"RED_D"</span><span class="token punctuation">:</span> <span class="token string">"#E65A4C"</span><span class="token punctuation">,</span>
    <span class="token string">"RED_C"</span><span class="token punctuation">:</span> <span class="token string">"#FC6255"</span><span class="token punctuation">,</span>
    <span class="token string">"RED_B"</span><span class="token punctuation">:</span> <span class="token string">"#FF8080"</span><span class="token punctuation">,</span>
    <span class="token string">"RED_A"</span><span class="token punctuation">:</span> <span class="token string">"#F7A1A3"</span><span class="token punctuation">,</span>
    <span class="token string">"MAROON_E"</span><span class="token punctuation">:</span> <span class="token string">"#94424F"</span><span class="token punctuation">,</span>
    <span class="token string">"MAROON_D"</span><span class="token punctuation">:</span> <span class="token string">"#A24D61"</span><span class="token punctuation">,</span>
    <span class="token string">"MAROON_C"</span><span class="token punctuation">:</span> <span class="token string">"#C55F73"</span><span class="token punctuation">,</span>
    <span class="token string">"MAROON_B"</span><span class="token punctuation">:</span> <span class="token string">"#EC92AB"</span><span class="token punctuation">,</span>
    <span class="token string">"MAROON_A"</span><span class="token punctuation">:</span> <span class="token string">"#ECABC1"</span><span class="token punctuation">,</span>
    <span class="token string">"PURPLE_E"</span><span class="token punctuation">:</span> <span class="token string">"#644172"</span><span class="token punctuation">,</span>
    <span class="token string">"PURPLE_D"</span><span class="token punctuation">:</span> <span class="token string">"#715582"</span><span class="token punctuation">,</span>
    <span class="token string">"PURPLE_C"</span><span class="token punctuation">:</span> <span class="token string">"#9A72AC"</span><span class="token punctuation">,</span>
    <span class="token string">"PURPLE_B"</span><span class="token punctuation">:</span> <span class="token string">"#B189C6"</span><span class="token punctuation">,</span>
    <span class="token string">"PURPLE_A"</span><span class="token punctuation">:</span> <span class="token string">"#CAA3E8"</span><span class="token punctuation">,</span>
    <span class="token string">"WHITE"</span><span class="token punctuation">:</span> <span class="token string">"#FFFFFF"</span><span class="token punctuation">,</span>
    <span class="token string">"BLACK"</span><span class="token punctuation">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>
    <span class="token string">"LIGHT_GRAY"</span><span class="token punctuation">:</span> <span class="token string">"#BBBBBB"</span><span class="token punctuation">,</span>
    <span class="token string">"LIGHT_GREY"</span><span class="token punctuation">:</span> <span class="token string">"#BBBBBB"</span><span class="token punctuation">,</span>
    <span class="token string">"GRAY"</span><span class="token punctuation">:</span> <span class="token string">"#888888"</span><span class="token punctuation">,</span>
    <span class="token string">"GREY"</span><span class="token punctuation">:</span> <span class="token string">"#888888"</span><span class="token punctuation">,</span>
    <span class="token string">"DARK_GREY"</span><span class="token punctuation">:</span> <span class="token string">"#444444"</span><span class="token punctuation">,</span>
    <span class="token string">"DARK_GRAY"</span><span class="token punctuation">:</span> <span class="token string">"#444444"</span><span class="token punctuation">,</span>
    <span class="token string">"DARKER_GREY"</span><span class="token punctuation">:</span> <span class="token string">"#222222"</span><span class="token punctuation">,</span>
    <span class="token string">"DARKER_GRAY"</span><span class="token punctuation">:</span> <span class="token string">"#222222"</span><span class="token punctuation">,</span>
    <span class="token string">"GREY_BROWN"</span><span class="token punctuation">:</span> <span class="token string">"#736357"</span><span class="token punctuation">,</span>
    <span class="token string">"PINK"</span><span class="token punctuation">:</span> <span class="token string">"#D147BD"</span><span class="token punctuation">,</span>
    <span class="token string">"GREEN_SCREEN"</span><span class="token punctuation">:</span> <span class="token string">"#00FF00"</span><span class="token punctuation">,</span>
    <span class="token string">"ORANGE"</span><span class="token punctuation">:</span> <span class="token string">"#FF862F"</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这个文件中你也可以找到之前使用过的一些常数，比如<code>UP</code>、<code>PI</code>之类的。在修改中文支持的时候也是修改这个文件里的<code>TEX_USE_CTEX</code>常数。</p>
<p>如果想，是可以按照格式在<code>COLOR_MAP</code>里添加新的颜色。</p>
<p>回到刚才的代码，可以看到在第7行，六个字母被隔开了，而设置颜色的时候，text成了一个列表，也就是我们说的数组。当我们给一个变量赋值成一段文字的时候，我们实际上是将文字存在了一段内存里，而使用变量名来访问这段内存。如果我们把文字字符串拆分成一个列表的时候（就像代码第7行一样），这段文字就被按顺序存在了若干段内存里，这几段内存都使用相同的变量名来访问，不过每段内存有自己的编号，要访问其中一段内存，就采用<code>变量名[编号]</code>的形式来访问。这样我们就可以对每一个部分单独改变对应的属性（比如颜色）了。</p>
<p>除了改变文字的颜色，我们还可以改变公式的颜色，比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">FormulaColor1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'='</span><span class="token punctuation">,</span> <span class="token string">'&#123;a'</span><span class="token punctuation">,</span> <span class="token string">'\\over'</span><span class="token punctuation">,</span> <span class="token string">'b&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token comment">#                  0    1    2    3         4</span>

        text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>GREEN<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>ORANGE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">"#DC28E2"</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自己渲染一下，就能发现公式的每一部分颜色都不一样了。</p>
<p>这段程序也说明了为什么<code>\frac</code>不如<code>\over</code>方便。</p>
<p>再来看下面一段代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">FormulaColor2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
            <span class="token string">"\\sqrt&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\int_&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"a&#125;^"</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;b&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\left("</span><span class="token punctuation">,</span>
            <span class="token string">"\\frac&#123;x&#125;&#123;y&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\right)"</span><span class="token punctuation">,</span>
            <span class="token string">"dx&#125;"</span><span class="token punctuation">)</span>

        text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>GREEN<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>YELLOW<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>PINK<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>ORANGE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>PURPLE<span class="token punctuation">)</span>
        text<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>MAROON<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>看上去好像没什么问题，字符串列表有8个，数列也有8个，不过渲染完的结果却是这样的：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_FormulaColor2.png" alt="FormulaColor2.png" /><figcaption aria-hidden="true">FormulaColor2.png</figcaption>
</figure>
<p>我们可以看到渲染出了3个问题：</p>
<ol type="1">
<li>根号的颜色有两种，而剩下元素的颜色没有对应上。</li>
<li>最后的字母<span class="math inline">\(x\)</span>不见了。</li>
</ol>
<p>第1个问题是因为<code>\sqrt</code>会占用2个编号，而不是1个，根号左边的部分编号在前，根号上面的一横编号在后。也就是说<code>text[0]</code>实际上是根号的左边，而<code>text[1]</code>实际上是根号的上边。</p>
<p>你还能发现<span class="math inline">\(a\)</span>和<span class="math inline">\(b\)</span>在定义公式的时候是<span class="math inline">\(a\)</span>在前，<span class="math inline">\(b\)</span>在后，那么按道理<span class="math inline">\(a\)</span>应该是<code>text[3]</code>，<span class="math inline">\(b\)</span>应该是<code>text[4]</code>，也就是说<span class="math inline">\(a\)</span>应该是<code>text[3]</code>的黄色，而<span class="math inline">\(b\)</span>应该是<code>text[4]</code>的粉色。但是图片中正好相反。这是因为Manim实际上不完全按照你分割的顺序来编号，对于有上标和下标的地方来说，上标的编号在前，下标的编号在后。所以呢，为了不产生困惑，至少在用Manim的时候，还是尽量先写上标，再写下标。</p>
<p>这里还出现了<code>\frac</code>的另一个问题，注意看左括号和分数的上半部分的颜色变成一样的了，可这不是本意。要解决这个问题，还需要使用<code>\over</code>。</p>
<p>第2个问题暂时不知道是怎么回事，不过解决方法是在<span class="math inline">\(x\)</span>的后面加一个<code>.</code>，也就是把最后一项改成<code>"dx.&#125;"</code>。</p>
<p>所以可以看出，要搞清楚究竟Manim是怎么分块的还是很麻烦的。不过幸运的是，这里有一份神奇代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CheckFormulaByTXT</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"camera_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">"background_color"</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"svg_type"</span><span class="token punctuation">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>
        <span class="token string">"text"</span><span class="token punctuation">:</span> TexMobject<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
        <span class="token string">"svg_scale"</span><span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>
        <span class="token string">"angle"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"flip_svg"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"fill_opacity"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"remove"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"stroke_color"</span><span class="token punctuation">:</span> WHITE<span class="token punctuation">,</span>
        <span class="token string">"fill_color"</span><span class="token punctuation">:</span> WHITE<span class="token punctuation">,</span>
        <span class="token string">"stroke_width"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string">"numbers_scale"</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
        <span class="token string">"show_numbers"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"animation"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"direction_numbers"</span><span class="token punctuation">:</span> UP<span class="token punctuation">,</span>
        <span class="token string">"color_numbers"</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
        <span class="token string">"space_between_numbers"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"show_elements"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"color_element"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">,</span>
        <span class="token comment"># "set_size": "width",</span>
        <span class="token string">"remove_stroke"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"show_stroke"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"warning_color"</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
        <span class="token string">"stroke_"</span><span class="token punctuation">:</span> <span class="token number">1</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>imagen <span class="token operator">=</span> self<span class="token punctuation">.</span>text
        <span class="token comment"># if self.set_size == "width":</span>
        <span class="token comment">#     self.imagen.set_width(FRAME_WIDTH)</span>
        <span class="token comment"># else:</span>
        <span class="token comment">#     self.imagen.set_height(FRAME_HEIGHT)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>get_width<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>FRAME_HEIGHT <span class="token operator">&lt;</span> FRAME_WIDTH<span class="token operator">*</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>get_height<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>set_height<span class="token punctuation">(</span>FRAME_HEIGHT<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>set_width<span class="token punctuation">(</span>FRAME_WIDTH<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>self<span class="token punctuation">.</span>svg_scale<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>flip_svg <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>flip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>show_numbers <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>print_formula<span class="token punctuation">(</span>
                self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>numbers_scale<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>direction_numbers<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>remove<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>space_between_numbers<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>color_numbers
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>return_elements<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>show_elements<span class="token punctuation">)</span>
        <span class="token keyword">for</span> st <span class="token keyword">in</span> self<span class="token punctuation">.</span>remove_stroke<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>st<span class="token punctuation">]</span><span class="token punctuation">.</span>set_stroke<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> st <span class="token keyword">in</span> self<span class="token punctuation">.</span>show_stroke<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>st<span class="token punctuation">]</span><span class="token punctuation">.</span>set_stroke<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>stroke_<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>animation <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>DrawBorderThenFill<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            c <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
                <span class="token keyword">for</span> w <span class="token keyword">in</span> self<span class="token punctuation">.</span>remove<span class="token punctuation">:</span>
                    <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                        permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
                <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
            c <span class="token operator">+=</span> <span class="token number">1</span>
        self<span class="token punctuation">.</span>personalize_image<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">personalize_image</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">print_formula</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">,</span> inverse_scale<span class="token punctuation">,</span> direction<span class="token punctuation">,</span> exception<span class="token punctuation">,</span> buff<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>warning_color<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        c <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">for</span> w <span class="token keyword">in</span> exception<span class="token punctuation">:</span>
                <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                    permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>stroke_color<span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">+=</span> <span class="token number">1</span>

        c <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
            element <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"%d"</span> <span class="token operator">%</span> c<span class="token punctuation">,</span> color<span class="token operator">=</span>color<span class="token punctuation">)</span>
            element<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>inverse_scale<span class="token punctuation">)</span>
            element<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>text<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> direction<span class="token punctuation">,</span> buff<span class="token operator">=</span>buff<span class="token punctuation">)</span>
            <span class="token keyword">for</span> w <span class="token keyword">in</span> exception<span class="token punctuation">:</span>
                <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                    permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>add_foreground_mobjects<span class="token punctuation">(</span>element<span class="token punctuation">)</span>
            c <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">return_elements</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> formula<span class="token punctuation">,</span> adds<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> adds<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>add_foreground_mobjects<span class="token punctuation">(</span>formula<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>color_element<span class="token punctuation">)</span><span class="token punctuation">,</span>
                TexMobject<span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token operator">%</span>i<span class="token punctuation">,</span> color<span class="token operator">=</span>self<span class="token punctuation">.</span>color_element<span class="token punctuation">,</span> background_stroke_width<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span>self<span class="token punctuation">.</span>numbers_scale<span class="token punctuation">)</span><span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>formula<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>direction_numbers<span class="token punctuation">,</span> buff<span class="token operator">=</span>self<span class="token punctuation">.</span>space_between_numbers<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>把神奇代码粘贴到你的文件中，然后这样来使用，在文件中新建一个类：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CheckFormula1</span><span class="token punctuation">(</span>CheckFormulaByTXT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text"</span><span class="token punctuation">:</span> TexMobject<span class="token punctuation">(</span>
            <span class="token string">"\\sqrt&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\int_&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"a&#125;^"</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;b&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;\\left("</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;x"</span><span class="token punctuation">,</span>
            <span class="token string">"\\over"</span><span class="token punctuation">,</span>
            <span class="token string">"y&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\right)&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"dx.&#125;"</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>"text"后面填入你弄不清楚分块的对象，比如刚才的那个。</p>
<p>最后将这个类渲染成图片，就像下面这样：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim arrays.py CheckFormula1 -ps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>你就能得到下面的图片：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CheckFormula1.png" alt="CheckFormula1.png" /><figcaption aria-hidden="true">CheckFormula1.png</figcaption>
</figure>
<p>图片中用红色的数字标明了每一部分的编号是多少。如果你觉得还是不确定，那么你还可以通过下面的操作来高亮这个公式的一部分！</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CheckFormula1</span><span class="token punctuation">(</span>CheckFormulaByTXT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text"</span><span class="token punctuation">:</span> TexMobject<span class="token punctuation">(</span>
            <span class="token string">"\\sqrt&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\int_&#123;"</span><span class="token punctuation">,</span>
            <span class="token string">"a&#125;^"</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;b&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;\\left("</span><span class="token punctuation">,</span>
            <span class="token string">"&#123;x"</span><span class="token punctuation">,</span>
            <span class="token string">"\\over"</span><span class="token punctuation">,</span>
            <span class="token string">"y&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\right)&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"dx.&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"show_elements"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在"text"这一项的后面加一个逗号，然后加入名为"show_elements"的一项，这一项的值是一个列表，列表里你可以填刚才图片中出现的数字，比如你对公式第0块和第9块还不是很确定，那么就在列表中填0和9。</p>
<p>重新渲染一下，你就能得到下面的图：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CheckFormula2.png" alt="CheckFormula2.png" /><figcaption aria-hidden="true">CheckFormula2.png</figcaption>
</figure>
<p>非常炫酷的是，这些地方都被高亮成蓝色了，分块一目了然。</p>
<p>如果你发现有一些地方连在一起了，那么你可以多分几块，比如上面的第9块。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">TexMobject<span class="token punctuation">(</span>
    <span class="token string">"\\sqrt&#123;"</span><span class="token punctuation">,</span>
    <span class="token string">"\\int_&#123;"</span><span class="token punctuation">,</span>
    <span class="token string">"a&#125;^"</span><span class="token punctuation">,</span>
    <span class="token string">"&#123;b&#125;"</span><span class="token punctuation">,</span>
    <span class="token string">"&#123;\\left("</span><span class="token punctuation">,</span>
    <span class="token string">"&#123;x"</span><span class="token punctuation">,</span>
    <span class="token string">"\\over"</span><span class="token punctuation">,</span>
    <span class="token string">"y&#125;"</span><span class="token punctuation">,</span>
    <span class="token string">"\\right)&#125;"</span><span class="token punctuation">,</span>
    <span class="token string">"d"</span><span class="token punctuation">,</span>
    <span class="token string">"x.&#125;"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>现在我们再来学习一个方法<code>.set_color_by_tex(STR, COLOR)</code>，这个方法可以把对象中的指定字符串给设置成特定的颜色。比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ColorByCaracter</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"&#123;d"</span><span class="token punctuation">,</span><span class="token string">"\\over"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">"&#125;"</span><span class="token punctuation">,</span><span class="token string">"\\int_"</span><span class="token punctuation">,</span><span class="token string">"&#123;a&#125;^"</span><span class="token punctuation">,</span><span class="token string">"&#123;"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">"&#125;"</span><span class="token punctuation">,</span><span class="token string">"f("</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">,</span><span class="token string">")d"</span><span class="token punctuation">,</span><span class="token string">"t"</span><span class="token punctuation">,</span><span class="token string">"="</span><span class="token punctuation">,</span><span class="token string">"f("</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">")"</span><span class="token punctuation">)</span>
		text<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span>RED<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染一下：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ColorByCharacter.png" alt="ColorByCharacter.png" /><figcaption aria-hidden="true">ColorByCharacter.png</figcaption>
</figure>
<p>咦，又出现了很奇怪的问题，公式没显示全，而且涂色的字符串也不对。问题还是出在上下标的顺序上，一定记住，先上标，后下标。</p>
<p>修改一下：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ColorByCharacterFixed</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"&#123;d"</span><span class="token punctuation">,</span> <span class="token string">"\\over"</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"&#125;"</span><span class="token punctuation">,</span>
            <span class="token string">"\\int^"</span><span class="token punctuation">,</span> <span class="token string">"&#123;x&#125;_"</span><span class="token punctuation">,</span> <span class="token string">"&#123;"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"&#125;"</span><span class="token punctuation">,</span> <span class="token string">"f("</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">")d"</span><span class="token punctuation">,</span> <span class="token string">"t"</span><span class="token punctuation">,</span>
                <span class="token string">"="</span><span class="token punctuation">,</span> <span class="token string">"f("</span><span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">")..."</span><span class="token punctuation">)</span>
		text<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">,</span>RED<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>显示不全的问题还是可以通过在后面加若干个点的方式解决。</p>
<p>现在效果正确了。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ColorByCharacterFixed.png" alt="ColorByCharacterFixed.png" /><figcaption aria-hidden="true">ColorByCharacterFixed.png</figcaption>
</figure>
<p>不过鉴于TeX公式会出现各种各样的问题，因此<code>.set_color_by_tex()</code>最好用在文本上。</p>
<p>熟练运用for循环可以简化赋值的过程。下面列出了5种for循环的场景：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ListFor</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#no usar siempre frac</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"[0]"</span><span class="token punctuation">,</span><span class="token string">"[1]"</span><span class="token punctuation">,</span><span class="token string">"[2]"</span><span class="token punctuation">,</span><span class="token string">"[3]"</span><span class="token punctuation">,</span><span class="token string">"[4]"</span><span class="token punctuation">,</span><span class="token string">"[5]"</span><span class="token punctuation">,</span><span class="token string">"[6]"</span><span class="token punctuation">,</span><span class="token string">"[7]"</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        	text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ForRange1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#no usar siempre frac</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"[0]"</span><span class="token punctuation">,</span><span class="token string">"[1]"</span><span class="token punctuation">,</span><span class="token string">"[2]"</span><span class="token punctuation">,</span><span class="token string">"[3]"</span><span class="token punctuation">,</span><span class="token string">"[4]"</span><span class="token punctuation">,</span><span class="token string">"[5]"</span><span class="token punctuation">,</span><span class="token string">"[6]"</span><span class="token punctuation">,</span><span class="token string">"[7]"</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        	text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ForRange2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#no usar siempre frac</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"[0]"</span><span class="token punctuation">,</span><span class="token string">"[1]"</span><span class="token punctuation">,</span><span class="token string">"[2]"</span><span class="token punctuation">,</span><span class="token string">"[3]"</span><span class="token punctuation">,</span><span class="token string">"[4]"</span><span class="token punctuation">,</span><span class="token string">"[5]"</span><span class="token punctuation">,</span><span class="token string">"[6]"</span><span class="token punctuation">,</span><span class="token string">"[7]"</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        	text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ForTwoVariables</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#no usar siempre frac</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"[0]"</span><span class="token punctuation">,</span><span class="token string">"[1]"</span><span class="token punctuation">,</span><span class="token string">"[2]"</span><span class="token punctuation">,</span><span class="token string">"[3]"</span><span class="token punctuation">,</span><span class="token string">"[4]"</span><span class="token punctuation">,</span><span class="token string">"[5]"</span><span class="token punctuation">,</span><span class="token string">"[6]"</span><span class="token punctuation">,</span><span class="token string">"[7]"</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span>color <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>RED<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>PINK<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        	text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>color<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ForTwoVariables2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#no usar siempre frac</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"[0]"</span><span class="token punctuation">,</span><span class="token string">"[1]"</span><span class="token punctuation">,</span><span class="token string">"[2]"</span><span class="token punctuation">,</span><span class="token string">"[3]"</span><span class="token punctuation">,</span><span class="token string">"[4]"</span><span class="token punctuation">,</span><span class="token string">"[5]"</span><span class="token punctuation">,</span><span class="token string">"[6]"</span><span class="token punctuation">,</span><span class="token string">"[7]"</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i<span class="token punctuation">,</span>color <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>RED<span class="token punctuation">,</span> PINK<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        	text<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>color<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最后，我们来介绍一个类<code>Cross</code>，这个类可以给指定的字符串打上×。观察下面的代码并渲染它，学习这个类是如何使用的。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CrossText1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\sum^&#123;\\infty&#125;_&#123;i=1&#125;i"</span><span class="token punctuation">,</span> <span class="token string">"="</span><span class="token punctuation">,</span> <span class="token string">"-\\frac&#123;1&#125;&#123;2&#125;"</span><span class="token punctuation">)</span>
        cross <span class="token operator">=</span> Cross<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        cross<span class="token punctuation">.</span>set_stroke<span class="token punctuation">(</span>RED<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>cross<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="变换">变换</h2>
<p>在学习变换之前，我们先来学习一下如何使用自己之前定义的类，但是不用把源代码粘贴到每个要用到它的新文件中。比如说上一节中的那份给数组编号的神奇代码。我们难道每次要使用的时候都需要把那一大段源代码粘贴过来吗？答案是可以不用。</p>
<p>怎么做到这件事呢？我们首先把神奇代码保存到一个新的文件<code>my_class.py</code>中。记住一定不要忘记第一行。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">CheckFormulaByTXT</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"camera_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">"background_color"</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"svg_type"</span><span class="token punctuation">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>
        <span class="token string">"text"</span><span class="token punctuation">:</span> TexMobject<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
        <span class="token string">"svg_scale"</span><span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span>
        <span class="token string">"angle"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"flip_svg"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"fill_opacity"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"remove"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"stroke_color"</span><span class="token punctuation">:</span> WHITE<span class="token punctuation">,</span>
        <span class="token string">"fill_color"</span><span class="token punctuation">:</span> WHITE<span class="token punctuation">,</span>
        <span class="token string">"stroke_width"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token string">"numbers_scale"</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
        <span class="token string">"show_numbers"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"animation"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"direction_numbers"</span><span class="token punctuation">:</span> UP<span class="token punctuation">,</span>
        <span class="token string">"color_numbers"</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
        <span class="token string">"space_between_numbers"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"show_elements"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"color_element"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">,</span>
        <span class="token comment"># "set_size": "width",</span>
        <span class="token string">"remove_stroke"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"show_stroke"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"warning_color"</span><span class="token punctuation">:</span> RED<span class="token punctuation">,</span>
        <span class="token string">"stroke_"</span><span class="token punctuation">:</span> <span class="token number">1</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>imagen <span class="token operator">=</span> self<span class="token punctuation">.</span>text
        <span class="token comment"># if self.set_size == "width":</span>
        <span class="token comment">#     self.imagen.set_width(FRAME_WIDTH)</span>
        <span class="token comment"># else:</span>
        <span class="token comment">#     self.imagen.set_height(FRAME_HEIGHT)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>get_width<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>FRAME_HEIGHT <span class="token operator">&lt;</span> FRAME_WIDTH<span class="token operator">*</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>get_height<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>set_height<span class="token punctuation">(</span>FRAME_HEIGHT<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>set_width<span class="token punctuation">(</span>FRAME_WIDTH<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>self<span class="token punctuation">.</span>svg_scale<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>flip_svg <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>flip<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>show_numbers <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>print_formula<span class="token punctuation">(</span>
                self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>numbers_scale<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>direction_numbers<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>remove<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>space_between_numbers<span class="token punctuation">,</span>
                self<span class="token punctuation">.</span>color_numbers
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>return_elements<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>show_elements<span class="token punctuation">)</span>
        <span class="token keyword">for</span> st <span class="token keyword">in</span> self<span class="token punctuation">.</span>remove_stroke<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>st<span class="token punctuation">]</span><span class="token punctuation">.</span>set_stroke<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> st <span class="token keyword">in</span> self<span class="token punctuation">.</span>show_stroke<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>st<span class="token punctuation">]</span><span class="token punctuation">.</span>set_stroke<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>stroke_<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>animation <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>DrawBorderThenFill<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            c <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
                <span class="token keyword">for</span> w <span class="token keyword">in</span> self<span class="token punctuation">.</span>remove<span class="token punctuation">:</span>
                    <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                        permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
                <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>imagen<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
            c <span class="token operator">+=</span> <span class="token number">1</span>
        self<span class="token punctuation">.</span>personalize_image<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">personalize_image</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">print_formula</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">,</span> inverse_scale<span class="token punctuation">,</span> direction<span class="token punctuation">,</span> exception<span class="token punctuation">,</span> buff<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>warning_color<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
        c <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">for</span> w <span class="token keyword">in</span> exception<span class="token punctuation">:</span>
                <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                    permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>stroke_color<span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">+=</span> <span class="token number">1</span>

        c <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            permission_print <span class="token operator">=</span> <span class="token boolean">True</span>
            element <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"%d"</span> <span class="token operator">%</span> c<span class="token punctuation">,</span> color<span class="token operator">=</span>color<span class="token punctuation">)</span>
            element<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>inverse_scale<span class="token punctuation">)</span>
            element<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>text<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> direction<span class="token punctuation">,</span> buff<span class="token operator">=</span>buff<span class="token punctuation">)</span>
            <span class="token keyword">for</span> w <span class="token keyword">in</span> exception<span class="token punctuation">:</span>
                <span class="token keyword">if</span> j <span class="token operator">==</span> w<span class="token punctuation">:</span>
                    permission_print <span class="token operator">=</span> <span class="token boolean">False</span>
            <span class="token keyword">if</span> permission_print<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>add_foreground_mobjects<span class="token punctuation">(</span>element<span class="token punctuation">)</span>
            c <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token keyword">def</span> <span class="token function">return_elements</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> formula<span class="token punctuation">,</span> adds<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> adds<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>add_foreground_mobjects<span class="token punctuation">(</span>formula<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>self<span class="token punctuation">.</span>color_element<span class="token punctuation">)</span><span class="token punctuation">,</span>
                TexMobject<span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token operator">%</span>i<span class="token punctuation">,</span> color<span class="token operator">=</span>self<span class="token punctuation">.</span>color_element<span class="token punctuation">,</span> background_stroke_width<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span>self<span class="token punctuation">.</span>numbers_scale<span class="token punctuation">)</span><span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>formula<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>direction_numbers<span class="token punctuation">,</span> buff<span class="token operator">=</span>self<span class="token punctuation">.</span>space_between_numbers<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后呢，在<code>manim_env\Lib\site-packages\manimlib</code>这个目录下新建一个文件夹<code>my_class</code>，并把<code>my_class.py</code>文件保存到这个新的文件夹下。</p>
<p>之后我们打开<code>manim_env\Lib\site-packages\manimlib\imports.py</code>这个文件，你可能可以注意到，这就是我们每次都import的那个文件。</p>
<p>我们在文件中找到下面的一行注释：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Non manim libraries that are also nice to have without thinking</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并且把我们的包的导入写在下面，就像这个样子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Non manim libraries that are also nice to have without thinking</span>
<span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>my_class<span class="token punctuation">.</span>my_class <span class="token keyword">import</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>第一个点后面的my_class代表那个新建的文件夹，第二个点后面的my_class代表py文件。保存。</p>
<p>在这之后，我们就不需要复制神奇代码也能使用它了。举个例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">Check1</span><span class="token punctuation">(</span>CheckFormulaByTXT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text"</span><span class="token punctuation">:</span> TextMobject<span class="token punctuation">(</span><span class="token string">"T"</span><span class="token punctuation">,</span> <span class="token string">"E"</span><span class="token punctuation">,</span> <span class="token string">"ST"</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>能直接渲染出结果：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Check1.png" alt="Check1.png" /><figcaption aria-hidden="true">Check1.png</figcaption>
</figure>
<p>现在我们来学习变换。如果我们要把一个对象变成另一个对象，我们就使用变换<code>Transform()</code>。来看下面一个例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">TransformationText1V1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        texto1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"First text"</span><span class="token punctuation">)</span>
        texto2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Second text"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>texto1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>texto1<span class="token punctuation">,</span> texto2<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意看第7行<code>Transform()</code>的使用方式，和<code>Write()</code>类似，需要把函数放在<code>self.play()</code>里面，因为这是个动画。<code>Transform()</code>的第一个参数是我们要进行变换的对象，第二个参数是要变换成的目标对象。</p>
<p>我们来渲染看一看。</p>
<div id="dplayer9" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer9 = new DPlayer({"element":document.getElementById("dplayer9"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_TransformationText1V1.mp4"}});</script><!-- dplayer used1 -->
<p>另一种变换的方式是使用<code>ReplacementTransform()</code>，它和<code>Transform()</code>的区别呢，我们通过下面的两段代码来说明：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">WhatIsTransform</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        t1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span>
        t2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span>
        t3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>t1<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t3<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>FadeOut<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">WhatIsReplacementTransform</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        t1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">)</span>
        t2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"B"</span><span class="token punctuation">)</span>
        t3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"C"</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>t1<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>t2<span class="token punctuation">,</span> t3<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>FadeOut<span class="token punctuation">(</span>t3<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面有两个类，分别用<code>Transform()</code>和<code>ReplacementTransform()</code>来实现变换操作，渲染一下你可以发现两者没有任何区别。也就是说，同一种效果可以用两种不同的方法编写。</p>
<div id="dplayer10" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer10 = new DPlayer({"element":document.getElementById("dplayer10"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_WhatIsTransform.mp4"}});</script><!-- dplayer used1 -->
<p>那么它们的不同体现在什么地方呢？</p>
<p>来看一下代码：</p>
<p>用<code>Transform()</code>的类生成的动画第10行，第13行，第16行，变换的对象都是<code>t1</code>。也就是说在执行了第10行之后，<code>t1</code>的内容就由字母A变成了字母B，执行了第13行之后，<code>t1</code>的内容由字母B变成了字母C。这两个过程中，<code>t2</code>和<code>t3</code>里保存的字母没有任何变化，所以最后第16行的淡出操作的参数是内容已经变成字母C的对象<code>t1</code>。换种方式说，就是使用<code>Transform()</code>的时候，第二个参数<code>t2</code>和<code>t3</code>都只是<code>t1</code>变换的目标，<code>t1</code>会把自己的形状变成目标的样子，而这两个目标<code>t2</code>和<code>t3</code>甚至都没有出现在屏幕上，你看见的只是<code>t1</code>的变形过程。</p>
<p>用<code>ReplacementTransform()</code>的类生成的动画第28行、第31行、第34行，你会发现填的参数和<code>Transform()</code>不一样了。为什么呢？<code>ReplacementTransform()</code>的变换过程是怎样的呢？现在来详细解释一下。<code>ReplacementTransform(t1, t2)</code>的变换过程实际上可以看成3步：</p>
<p>第一步：<code>Transform(t1, t2)</code></p>
<p>第二步：<code>self.remove(t1)</code></p>
<p>第三步：<code>self.add(t2)</code></p>
<p>也就是说，第一步<code>t1</code>变成了<code>t2</code>，此时屏幕上的字母是<code>t1</code>。但是第二步和第三步执行完之后，屏幕上的字母实际上就是<code>t2</code>了，<code>t1</code>已经从屏幕上移除了。所以呢我们下一步的变换，自然要对<code>t2</code>来做了。这就是两者的不同之处。</p>
<p>现在我们已经知道如何进行变换了，和之前的数组结合起来，我们就可以实现一些很骚很炫酷的效果了，比如：公式的变形。</p>
<p>来看下面的代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CopyTextV1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        formula <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
            <span class="token string">r'\frac&#123;d&#125;&#123;dx&#125;'</span><span class="token punctuation">,</span> <span class="token comment"># 0</span>
            <span class="token string">'('</span><span class="token punctuation">,</span>             <span class="token comment"># 1</span>
            <span class="token string">'u'</span><span class="token punctuation">,</span>             <span class="token comment"># 2</span>
            <span class="token string">'+'</span><span class="token punctuation">,</span>             <span class="token comment"># 3</span>
            <span class="token string">'v'</span><span class="token punctuation">,</span>             <span class="token comment"># 4</span>
            <span class="token string">')'</span><span class="token punctuation">,</span>             <span class="token comment"># 5</span>
            <span class="token string">'='</span><span class="token punctuation">,</span>             <span class="token comment"># 6</span>
            <span class="token string">r'\frac&#123;d&#125;&#123;dx&#125;'</span><span class="token punctuation">,</span> <span class="token comment"># 7</span>
            <span class="token string">'u'</span><span class="token punctuation">,</span>             <span class="token comment"># 8</span>
            <span class="token string">'+'</span><span class="token punctuation">,</span>             <span class="token comment"># 9</span>
            <span class="token string">r'\frac&#123;d&#125;&#123;dx&#125;'</span><span class="token punctuation">,</span> <span class="token comment"># 10</span>
            <span class="token string">'v'</span>              <span class="token comment"># 11</span>
        <span class="token punctuation">)</span> <span class="token comment"># 定义了一个公式对象</span>
        formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 把公式大小变为原来的2倍</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 让公式的第0到6个部分写出来</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formula<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formula<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formula<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token comment"># 把公式的2、4、3部分的拷贝分别变为第8、11、9部分</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formula<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> formula<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token comment"># 把公式的第0部分的拷贝变为第7和第10部分</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面是一段微分的等式。效果如下：</p>
<div id="dplayer11" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer11 = new DPlayer({"element":document.getElementById("dplayer11"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CopyTextV1.mp4"}});</script><!-- dplayer used1 -->
<p>如果要变换的公式的形状是一样的，那么就不会有变形的效果，只会有移动的效果（只要开始和结束的两个对象位置不同就会有移动效果）。而21、22、23、27、28行出现了<code>.copy()</code>方法，这个方法用于生成一份该对象的拷贝，这样原来的对象就不会受影响了。</p>
<p>如果要变换的部分比较多，我们当然也可以使用诸如列表解析式、<code>zip()</code>等高级函数、for循环、<code>*</code>参数传递之类的方式，来简化重复代码的书写。</p>
<p>这里贴出几个练习，尝试着渲染一下看看结果，并且试着理解每段代码的含义，别害怕，并没有那么难，如果很难看明白代码，就去看看渲染结果，然后反推代码的意思。当然，你也可以有一些批判性的想法，因为有些代码看上去并没有那么好懂，因此我们也不一定要模仿，就当拓展一下思路，自己写的代码以自己容易读懂为准。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CopyTextV2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span>
			<span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"v"</span><span class="token punctuation">,</span><span class="token string">")"</span><span class="token punctuation">,</span><span class="token string">"="</span><span class="token punctuation">,</span>
			<span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"v"</span>
			<span class="token punctuation">)</span>
		formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTextV3</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span>
			<span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"v"</span><span class="token punctuation">,</span><span class="token string">")"</span><span class="token punctuation">,</span><span class="token string">"="</span><span class="token punctuation">,</span>
			<span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"v"</span>
			<span class="token punctuation">)</span>
		formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
		formula<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
		formula<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTextV4</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span>
			<span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"v"</span><span class="token punctuation">,</span><span class="token string">")"</span><span class="token punctuation">,</span><span class="token string">"="</span><span class="token punctuation">,</span>
			<span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"u"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;"</span><span class="token punctuation">,</span><span class="token string">"v"</span>
			<span class="token punctuation">)</span>
		formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
		<span class="token keyword">for</span> letter<span class="token punctuation">,</span>color <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">"u"</span><span class="token punctuation">,</span>RED<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"v"</span><span class="token punctuation">,</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
			formula<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span>letter<span class="token punctuation">,</span>color<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			ReplacementTransform<span class="token punctuation">(</span>formula<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			run_time<span class="token operator">=</span><span class="token number">3</span>
			<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTwoFormulas1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula1 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\neg"</span><span class="token punctuation">,</span>		<span class="token comment">#0</span>
				<span class="token string">"\\forall"</span><span class="token punctuation">,</span>		<span class="token comment">#1</span>
				<span class="token string">"x"</span><span class="token punctuation">,</span>			<span class="token comment">#2</span>
				<span class="token string">":"</span><span class="token punctuation">,</span>			<span class="token comment">#3</span>
				<span class="token string">"P(x)"</span>			<span class="token comment">#4</span>
			<span class="token punctuation">)</span>
		formula2 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\exists"</span><span class="token punctuation">,</span>		<span class="token comment">#0</span>
				<span class="token string">"x"</span><span class="token punctuation">,</span>			<span class="token comment">#1</span>
				<span class="token string">":"</span><span class="token punctuation">,</span>			<span class="token comment">#2</span>
				<span class="token string">"\\neg"</span><span class="token punctuation">,</span>		<span class="token comment">#3</span>
				<span class="token string">"P(x)"</span>			<span class="token comment">#4</span>
			<span class="token punctuation">)</span>
		<span class="token keyword">for</span> size<span class="token punctuation">,</span>pos<span class="token punctuation">,</span>formula <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token punctuation">,</span>formula1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>DOWN<span class="token punctuation">,</span>formula2<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
			formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>size<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		changes <span class="token operator">=</span> <span class="token punctuation">[</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token comment"># | | | | |</span>
			<span class="token comment"># v v v v v</span>
			 <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token punctuation">]</span>
		<span class="token keyword">for</span> pre_ind<span class="token punctuation">,</span>post_ind <span class="token keyword">in</span> changes<span class="token punctuation">:</span>
			self<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>
				ReplacementTransform<span class="token punctuation">(</span>
					formula1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
					<span class="token punctuation">)</span>
				<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>pre_ind<span class="token punctuation">,</span>post_ind<span class="token punctuation">)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				run_time<span class="token operator">=</span><span class="token number">2</span>
			<span class="token punctuation">)</span>
			self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTwoFormulas2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula1 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"\\forall"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		formula2 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\exists"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		<span class="token keyword">for</span> tam<span class="token punctuation">,</span>pos<span class="token punctuation">,</span>formula <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token punctuation">,</span>formula1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>DOWN<span class="token punctuation">,</span>formula2<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
			formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>tam<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		changes <span class="token operator">=</span> <span class="token punctuation">[</span>
			<span class="token comment"># First time</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token comment"># | | |</span>
			<span class="token comment"># v v v</span>
			 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token comment"># Second time</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token comment"># |</span>
			<span class="token comment"># v</span>
			 <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token comment"># Third time</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token comment"># |</span>
			<span class="token comment"># v</span>
			 <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token punctuation">]</span>
		<span class="token keyword">for</span> pre_ind<span class="token punctuation">,</span>post_ind <span class="token keyword">in</span> changes<span class="token punctuation">:</span>
			self<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>
				ReplacementTransform<span class="token punctuation">(</span>
					formula1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
					<span class="token punctuation">)</span>
				<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>pre_ind<span class="token punctuation">,</span>post_ind<span class="token punctuation">)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				run_time<span class="token operator">=</span><span class="token number">2</span>
			<span class="token punctuation">)</span>
			self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTwoFormulas2Color</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula1 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"\\forall"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		formula2 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\exists"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		parametters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token punctuation">,</span>formula1<span class="token punctuation">,</span>GREEN<span class="token punctuation">,</span><span class="token string">"\\forall"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					  <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>DOWN<span class="token punctuation">,</span>formula2<span class="token punctuation">,</span>ORANGE<span class="token punctuation">,</span><span class="token string">"\\exists"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">for</span> size<span class="token punctuation">,</span>pos<span class="token punctuation">,</span>formula<span class="token punctuation">,</span>col<span class="token punctuation">,</span>sim <span class="token keyword">in</span> parametters<span class="token punctuation">:</span>
			formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>size<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span>sim<span class="token punctuation">,</span>col<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span><span class="token string">"\\neg"</span><span class="token punctuation">,</span>PINK<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		changes <span class="token operator">=</span> <span class="token punctuation">[</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token punctuation">]</span>
		<span class="token keyword">for</span> pre_ind<span class="token punctuation">,</span>post_ind <span class="token keyword">in</span> changes<span class="token punctuation">:</span>
			self<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>
				ReplacementTransform<span class="token punctuation">(</span>
					formula1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>formula2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
					<span class="token punctuation">)</span>
				<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>pre_ind<span class="token punctuation">,</span>post_ind<span class="token punctuation">)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				run_time<span class="token operator">=</span><span class="token number">2</span>
			<span class="token punctuation">)</span>
			self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">CopyTwoFormulas3</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		formula1 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"\\forall"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		formula2 <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
				<span class="token string">"\\exists"</span><span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"\\neg"</span><span class="token punctuation">,</span><span class="token string">"P(x)"</span>
			<span class="token punctuation">)</span>
		parametters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token punctuation">,</span>formula1<span class="token punctuation">,</span>GREEN<span class="token punctuation">,</span><span class="token string">"\\forall"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					  <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>DOWN<span class="token punctuation">,</span>formula2<span class="token punctuation">,</span>ORANGE<span class="token punctuation">,</span><span class="token string">"\\exists"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">for</span> size<span class="token punctuation">,</span>pos<span class="token punctuation">,</span>formula<span class="token punctuation">,</span>col<span class="token punctuation">,</span>sim <span class="token keyword">in</span> parametters<span class="token punctuation">:</span>
			formula<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>size<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span>sim<span class="token punctuation">,</span>col<span class="token punctuation">)</span>
			formula<span class="token punctuation">.</span>set_color_by_tex<span class="token punctuation">(</span><span class="token string">"\\neg"</span><span class="token punctuation">,</span>PINK<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>formula1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		changes <span class="token operator">=</span> <span class="token punctuation">[</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token punctuation">]</span>
		<span class="token keyword">for</span> pre_ind<span class="token punctuation">,</span>post_ind <span class="token keyword">in</span> changes<span class="token punctuation">:</span>
			self<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>
				ReplacementTransform<span class="token punctuation">(</span>
					formula1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>formula2<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
					<span class="token punctuation">)</span>
				<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>pre_ind<span class="token punctuation">,</span>post_ind<span class="token punctuation">)</span>
				<span class="token punctuation">]</span><span class="token punctuation">,</span>
				run_time<span class="token operator">=</span><span class="token number">2</span>
			<span class="token punctuation">)</span>
			self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果我们只定义了一个对象，并且想做出一些变换的动画（比如变色）的时候，我们可以这样写：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ChangeTextColorAnimation</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span>
		text<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>text<span class="token punctuation">.</span>set_color<span class="token punctuation">,</span> YELLOW<span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面代码的第7行会让<code>text</code>的颜色由默认的白色渐变成黄色。格式是第一个参数写上改变属性的方法名称（不带括号），第二个参数是第一个参数的参数（比如<code>YELLOW</code>是<code>.set_color()</code>的参数）。</p>
<p>第7行有另一种相同的写法，那就是使用<code>ApplyMethod()</code>函数：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
    ApplyMethod<span class="token punctuation">(</span>text<span class="token punctuation">.</span>set_color<span class="token punctuation">,</span> YELLOW<span class="token punctuation">)</span><span class="token punctuation">,</span>
    run_time<span class="token operator">=</span><span class="token number">2</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>self.play()</code>还允许一次传入多个对象的属性，比如位移、大小、颜色。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ChangeColorAndSizeAnimation</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span>
		text<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
		text<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>LEFT<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
                text<span class="token punctuation">.</span>shift<span class="token punctuation">,</span> RIGHT<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>
                text<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>
                text<span class="token punctuation">.</span>set_color<span class="token punctuation">,</span> RED<span class="token punctuation">,</span>
                run_time<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>只要注意是一个属性+一个参数的顺序就好了。</p>
<p>当然，上面的变换还有另一种写法，那就是用<code>.generate_target()</code>方法。观察下面的代码：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ChangeColorAndSizeAnimation2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>LEFT<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        text<span class="token punctuation">.</span>generate_target<span class="token punctuation">(</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>target<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>RIGHT<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>target<span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>target<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
                MoveToTarget<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span>
                run_time<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第9行的<code>.generate_target()</code>方法执行后，<code>text.target</code>就是一个<code>text</code>的副本了，通过在<code>text.target</code>这个对象上的修改就能得到<code>text</code>的目标对象。</p>
<p>配合第14行的<code>MoveToTarget()</code>函数，就能实现变换的动画了。</p>
<p>我们来了解一下Manim中对象的层次关系。 <span class="math display">\[
\text{Mobject}
\begin{cases}
\text{VMobject}
\begin{cases}
\text{TextMobject} \\
\text{TexMobject} \\
\vdots
\end{cases}
\\
\vdots
\end{cases}
\]</span> 最大的概念是Mobject，M可以理解为Manim或者Mathematical，意思是Manim对象或者数学对象，每一个出现在屏幕上的对象都是一个Mobject。</p>
<p>下一层的概念是VMobject，V是Vector的意思，表示能组成向量的Manim对象。</p>
<p>VMobject就包括了我们曾经使用过的TextMobject和TexMobject两个概念。</p>
<p>把VMobject组成一组，就叫做VGroup。如果我们<code>print(TextMobject("b"))</code>，命令行上会输出TextMobject，如果我们<code>print(TextMobject("b")[:])</code>，命令行上会输出VGroup。</p>
<p>如果我们有个文字对象，比如<code>text1 = TextMobject('a')</code>。我们想定义一个新的文字对象<code>text2</code>，不过想让<code>text2</code>具有一些和<code>text1</code>相同的属性（比如大小、颜色、位置等等）。那么我们可以使用一系列的<code>.match_...()</code>方法。比如：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">text2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>match_style<span class="token punctuation">(</span>text1<span class="token punctuation">)</span><span class="token punctuation">.</span>match_width<span class="token punctuation">(</span>text1<span class="token punctuation">)</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>text_1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>.match_style()</code>方法可以复制颜色、粗细、透明度等样式信息，<code>.match_width()</code>方法可以调整宽度和text1相同，<code>.move_to()</code>方法可以把位置调整到和text1相同。</p>
<h2 id="可视化工具和文档">可视化工具和文档</h2>
<p>首先来推荐几个个网站：</p>
<ul>
<li><p>第一个网站是<a href="https://www.eulertour.com">EulerTour</a>，这是一个可以在线编写Manim代码并且渲染的网站，如果你对配置Manim环境感到头痛，那么强烈推荐这个网站，网站是完全免费的哦。</p></li>
<li><p>第二个网站是<a href="https://elteoremadebeethoven.github.io/manim_3feb_docs.github.io/html/index.html">Manim Feb/03/2019</a>，这是一个非官方的Manim文档，和参考网页第一条的系列视频是配套的，你可以从这个网站上找到几乎所有的对象和方法的介绍，包括每一个对象的类型、方法的参数列表和配置参数、展示视频以及样例代码。非常方便。</p></li>
<li><p>第三个网站也是一个Manim文档：<a href="https://www.eulertour.com/learn/manim/index.html">Manim</a>，是第一个网站出的一份文档，上面也有效果的展示和代码供参考。</p></li>
<li><p>第四个网站是中文化的Manim教程文档<a href="https://manim.ml/index.html">manim教程文档 — manim v0.2 文档</a>。</p>
<blockquote>
<p>这是MK成员根据EulerTour写的 <a href="https://www.eulertour.com/docs/">eulertour-docs</a> 中文翻译和很多manim教程的学习笔记（教程文档）</p>
</blockquote></li>
</ul>
<p>接下来我们来学习Manim的一个新的对象：<code>Brace()</code>。这是一个大括号对象。我们来根据下面的代码展示一下这个对象的使用方式：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MoveBraces</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text<span class="token operator">=</span>TexMobject<span class="token punctuation">(</span>
            <span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;f(x)g(x)="</span><span class="token punctuation">,</span>       <span class="token comment">#0</span>
            <span class="token string">"f(x)\\frac&#123;d&#125;&#123;dx&#125;g(x)"</span><span class="token punctuation">,</span>        <span class="token comment">#1</span>
            <span class="token string">"+"</span><span class="token punctuation">,</span>                            <span class="token comment">#2</span>
            <span class="token string">"g(x)\\frac&#123;d&#125;&#123;dx&#125;f(x)"</span>         <span class="token comment">#3</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        brace1 <span class="token operator">=</span> Brace<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> UP<span class="token punctuation">,</span> buff <span class="token operator">=</span> SMALL_BUFF<span class="token punctuation">)</span>
        brace2 <span class="token operator">=</span> Brace<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> UP<span class="token punctuation">,</span> buff <span class="token operator">=</span> SMALL_BUFF<span class="token punctuation">)</span>
        t1 <span class="token operator">=</span> brace1<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token string">"$g'f$"</span><span class="token punctuation">)</span>
        t2 <span class="token operator">=</span> brace2<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token string">"$f'g$"</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            GrowFromCenter<span class="token punctuation">(</span>brace1<span class="token punctuation">)</span><span class="token punctuation">,</span>
            FadeIn<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
        	ReplacementTransform<span class="token punctuation">(</span>brace1<span class="token punctuation">,</span>brace2<span class="token punctuation">)</span><span class="token punctuation">,</span>
        	ReplacementTransform<span class="token punctuation">(</span>t1<span class="token punctuation">,</span>t2<span class="token punctuation">)</span>
        	<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果是这样的：</p>
<div id="dplayer12" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer12 = new DPlayer({"element":document.getElementById("dplayer12"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MoveBraces.mp4"}});</script><!-- dplayer used1 -->
<p>我们反推一下，主要就是第10~13行，观察第10行我们发现<code>Brace(Mobject, direction, [buff])</code>第一个参数就是括号要括的对象，第二个是括号的方位，第三个自然就是和对象之间的间隔了。至于<code>UP</code>和<code>SMALL_BUFF</code>都是一些常数。</p>
<p>第12行的<code>.get_text()</code>方法可以在括号上添加文字，也就是<code>TextMobject</code>。所以如果要显示公式的话，就要加上<code>$</code>。不过这个方法应该生成出的文字就跟括号没啥关系了，对括号做的操作应该都不会影响到文字，所以如果要让它们一起动，必须给文字也设置动画才行。</p>
<p>来看另一种标记的对象：<code>SurroundingRectangle()</code>。顾名思义，就是一个能把对象包围的框框。</p>
<div id="dplayer13" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer13 = new DPlayer({"element":document.getElementById("dplayer13"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_MoveFrameBox.mp4"}});</script><!-- dplayer used1 -->
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MoveFrameBox</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text<span class="token operator">=</span>TexMobject<span class="token punctuation">(</span>
            <span class="token string">"\\frac&#123;d&#125;&#123;dx&#125;f(x)g(x)="</span><span class="token punctuation">,</span><span class="token string">"f(x)\\frac&#123;d&#125;&#123;dx&#125;g(x)"</span><span class="token punctuation">,</span><span class="token string">"+"</span><span class="token punctuation">,</span>
            <span class="token string">"g(x)\\frac&#123;d&#125;&#123;dx&#125;f(x)"</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        framebox1 <span class="token operator">=</span> SurroundingRectangle<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buff <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span>
        framebox2 <span class="token operator">=</span> SurroundingRectangle<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> buff <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            ShowCreation<span class="token punctuation">(</span>framebox1<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
        	ReplacementTransform<span class="token punctuation">(</span>framebox1<span class="token punctuation">,</span>framebox2<span class="token punctuation">)</span><span class="token punctuation">,</span>
        	<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>SurroundingRectangle(Mobject, [buff])</code>在学了大括号之后，你应该猜得出这两个参数的含义了吧。</p>
<p>框框没有了<code>.get_text()</code>方法怎么办？用普通的文字或者公式对象结合<code>.next_to()</code>方法来使用就好了。</p>
<p>下一个对象是箭头：<code>Arrow()</code>。来看下面的代码，学习怎么定义一个箭头：</p>
<div id="dplayer14" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer14 = new DPlayer({"element":document.getElementById("dplayer14"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Arrow1.mp4"}});</script><!-- dplayer used1 -->
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Arrow1</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		step1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Step 1"</span><span class="token punctuation">)</span>
		step2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Step 2"</span><span class="token punctuation">)</span>
		arrow <span class="token operator">=</span> Arrow<span class="token punctuation">(</span>LEFT<span class="token punctuation">,</span>RIGHT<span class="token punctuation">)</span>
		step1<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>LEFT<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
		arrow<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>step1<span class="token punctuation">,</span>RIGHT<span class="token punctuation">,</span>buff <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span>
		step2<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>arrow<span class="token punctuation">,</span>RIGHT<span class="token punctuation">,</span>buff <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>step1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>GrowArrow<span class="token punctuation">(</span>arrow<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>step2<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>观察第5行，思考一个问题：定义一个箭头对象一定需要哪些参数呢？当然是起点和终点。所以<code>Arrow(start, end)</code>你就能明白为什么这么定义了吧。</p>
<p>第11行的<code>GrowArrow()</code>是专门绘制一个箭头的动画的，它会让Arrow从箭尾到箭头地画出来。</p>
<p>当然你不仅仅可以用<code>LEFT</code>之类的来表示方位，要方便地从一个对象指向另一个对象，我们可以这样写：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Arrow2</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
		step1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Step 1"</span><span class="token punctuation">)</span>
		step2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Step 2"</span><span class="token punctuation">)</span>
		step1<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>LEFT<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span>DOWN<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span>
		step2<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span>RIGHT<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>UP<span class="token punctuation">)</span>
		arrow1 <span class="token operator">=</span> Arrow<span class="token punctuation">(</span>step1<span class="token punctuation">.</span>get_right<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>step2<span class="token punctuation">.</span>get_left<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
		arrow1<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
		arrow2 <span class="token operator">=</span> Arrow<span class="token punctuation">(</span>step1<span class="token punctuation">.</span>get_top<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>step2<span class="token punctuation">.</span>get_bottom<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>buff<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
		arrow2<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>BLUE<span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>step1<span class="token punctuation">)</span><span class="token punctuation">,</span>Write<span class="token punctuation">(</span>step2<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>GrowArrow<span class="token punctuation">(</span>arrow1<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>GrowArrow<span class="token punctuation">(</span>arrow2<span class="token punctuation">)</span><span class="token punctuation">)</span>
		self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意一下第7行和第9行表明了你该怎么让箭头指对象，同时你还可以用<code>buff</code>指定箭头和对象间的距离。</p>
<p>并且可以使用<code>.set_color()</code>来为箭头上色。</p>
<p>如果要画一条线段，就把<code>Arrow()</code>换成<code>Line()</code>就好了，参数和用法没有什么区别，<code>Line()</code>对象也可以使用<code>GrowArrow()</code>函数做动画。</p>
<p>如果要画虚线呢，就换成<code>DashedLine()</code>，用法也一样。</p>
<h2 id="d和3d图像的绘制">2D和3D图像的绘制</h2>
<p>为了学习2D图像和3D图像如何绘制，首先我们需要做一些铺垫，先介绍一下什么叫做CONFIG字典。我们以一个例子来说明CONFIG字典的作用。CONFIG字典可以认为是一个包含了许多对象的集合，我们可以用下面的格式来创建对象。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">ConfigExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text_1"</span><span class="token punctuation">:</span> <span class="token string">"Text 1"</span><span class="token punctuation">,</span>
        <span class="token string">"text_2"</span><span class="token punctuation">:</span> <span class="token string">"Text 2"</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>custom_method<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">custom_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        t1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_1<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上面的代码在CONFIG字典中创建了两个字符串对象。如果要使用这些对象必须在变量名前面加上self，就像第12行一样。</p>
<p>这看起来就只是另外一种声明对象的方式，但实际上不是那个样子的。当我们在类里面定义一个方法的时候，在那个方法里的所有的变量和对象都只能在那个方法内使用。这样如果类里面有其他的方法的话，那一个方法里面定义的对象就没有办法在另一个方法里面使用。这就是为什么需要CONFIG字典的原因，CONFIG字典可以在同一个类中的方法之间共享对象。在上面的例子里面的<code>t1</code>就是只能在<code>custom_method</code>方法中使用，但是<code>self.text_1</code>是所有方法里面都能使用的。</p>
<p>另外也可以用Python本身的方法来定义一个类内的变量，就像下面的代码一样。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> manimlib<span class="token punctuation">.</span>imports <span class="token keyword">import</span> <span class="token operator">*</span>

<span class="token keyword">class</span> <span class="token class-name">ConfigExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text_1"</span><span class="token punctuation">:</span> <span class="token string">"Text 1"</span><span class="token punctuation">,</span>
        <span class="token string">"text_2"</span><span class="token punctuation">:</span> <span class="token string">"Text 2"</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>custom_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">custom_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>t1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>下面一个例子能更好地让你理解如何综合使用两种方式在方法之间沟通对象。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ConfigExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"text_1"</span><span class="token punctuation">:</span> <span class="token string">"Text 1"</span><span class="token punctuation">,</span>
        <span class="token string">"text_2"</span><span class="token punctuation">:</span> <span class="token string">"Text 2"</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>custom_method<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>t1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>custom_method2<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">custom_method</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>t1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_1<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>t2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span>self<span class="token punctuation">.</span>text_2<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">custom_method2</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>self<span class="token punctuation">.</span>t1<span class="token punctuation">,</span> self<span class="token punctuation">.</span>t2<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其实我们现在编写的所有类，都继承了一个类Scene。而这个Scene类里面就有一些可以修改的参数。而这些可以修改的参数也被写在了CONFIG字典里。</p>
<p>事实上，我们打开<code>manimlib/scene/scene.py</code>可以看到：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>Container<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"camera_class"</span><span class="token punctuation">:</span> Camera<span class="token punctuation">,</span>
        <span class="token string">"camera_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"file_writer_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"skip_animations"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"always_update_mobjects"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"random_seed"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"start_at_animation_number"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"end_at_animation_number"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"leave_progress_bars"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>从第3行看出，Scene类中引入了另一个类称为Camera，这个类位于文件<code>manimlib/camera/camera.py</code>之中。下面展示了部分Camera类的CONFIG信息：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Camera</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"background_image"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"pixel_height"</span><span class="token punctuation">:</span> DEFAULT_PIXEL_HEIGHT<span class="token punctuation">,</span>
        <span class="token string">"pixel_width"</span><span class="token punctuation">:</span> DEFAULT_PIXEL_WIDTH<span class="token punctuation">,</span>
        <span class="token string">"frame_rate"</span><span class="token punctuation">:</span> DEFAULT_FRAME_RATE<span class="token punctuation">,</span>
        <span class="token comment"># Note: frame height and width will be resized to match</span>
        <span class="token comment"># the pixel aspect ratio</span>
        <span class="token string">"frame_height"</span><span class="token punctuation">:</span> FRAME_HEIGHT<span class="token punctuation">,</span>
        <span class="token string">"frame_width"</span><span class="token punctuation">:</span> FRAME_WIDTH<span class="token punctuation">,</span>
        <span class="token string">"frame_center"</span><span class="token punctuation">:</span> ORIGIN<span class="token punctuation">,</span>
        <span class="token string">"background_color"</span><span class="token punctuation">:</span> BLACK<span class="token punctuation">,</span>
        <span class="token string">"background_opacity"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token comment"># Points in vectorized mobjects with norm greater</span>
        <span class="token comment"># than this value will be rescaled.</span>
        <span class="token string">"max_allowable_norm"</span><span class="token punctuation">:</span> FRAME_WIDTH<span class="token punctuation">,</span>
        <span class="token string">"image_mode"</span><span class="token punctuation">:</span> <span class="token string">"RGBA"</span><span class="token punctuation">,</span>
        <span class="token string">"n_channels"</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token string">"pixel_array_dtype"</span><span class="token punctuation">:</span> <span class="token string">'uint8'</span><span class="token punctuation">,</span>
        <span class="token comment"># z_buff_func is only used if the flag above is set to True.</span>
        <span class="token comment"># round z coordinate to nearest hundredth when comparring</span>
        <span class="token string">"z_buff_func"</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> m<span class="token punctuation">:</span> np<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>get_center<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"cairo_line_width_multiple"</span><span class="token punctuation">:</span> <span class="token number">0.01</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>里面有一些比较有用的设置，比如背景图片<code>background_image</code>和背景颜色<code>background_color</code>等等。</p>
<p>而上文中Scene类的第4行提示我们，可以通过在自己的类中使用<code>camera_config</code>来改变上文中提到的一些设置。下面以如何修改背景颜色来举个例子。</p>
<p>在我们自己编写的类<code>ConfigExample</code>中这样写：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ConfigExample</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"camera_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"background_color"</span><span class="token punctuation">:</span> RED
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"text_1"</span><span class="token punctuation">:</span> <span class="token string">"Text 1"</span><span class="token punctuation">,</span>
        <span class="token string">"text_2"</span><span class="token punctuation">:</span> <span class="token string">"Text 2"</span>
    <span class="token punctuation">&#125;</span>
    
    <span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后渲染一下：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim 2D_and_3D_graphs.py ConfigExample -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以看到背景变成了红色。</p>
<p>在Manim中，就是通过修改CONFIG的方式，来重新设定被继承的类的参数和设置的。</p>
<p>下面我们来学习一下2D图像的绘制。和它有关的类<code>GraphScene</code>位于<code>manimlib/scene/graph_scene.py</code>中。我们来看看它的CONFIG内容都有哪些，以便于我们以后修改。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GraphScene</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"x_min"</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"x_max"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token string">"x_axis_width"</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
        <span class="token string">"x_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"x_leftmost_tick"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># Change if different from x_min</span>
        <span class="token string">"x_labeled_nums"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"x_axis_label"</span><span class="token punctuation">:</span> <span class="token string">"$x$"</span><span class="token punctuation">,</span>
        <span class="token string">"y_min"</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"y_max"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token string">"y_axis_height"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token string">"y_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"y_bottom_tick"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># Change if different from y_min</span>
        <span class="token string">"y_labeled_nums"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"y_axis_label"</span><span class="token punctuation">:</span> <span class="token string">"$y$"</span><span class="token punctuation">,</span>
        <span class="token string">"axes_color"</span><span class="token punctuation">:</span> GREY<span class="token punctuation">,</span>
        <span class="token string">"graph_origin"</span><span class="token punctuation">:</span> <span class="token number">2.5</span> <span class="token operator">*</span> DOWN <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> LEFT<span class="token punctuation">,</span>
        <span class="token string">"exclude_zero_label"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"default_graph_colors"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>BLUE<span class="token punctuation">,</span> GREEN<span class="token punctuation">,</span> YELLOW<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"default_derivative_color"</span><span class="token punctuation">:</span> GREEN<span class="token punctuation">,</span>
        <span class="token string">"default_input_color"</span><span class="token punctuation">:</span> YELLOW<span class="token punctuation">,</span>
        <span class="token string">"default_riemann_start_color"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">,</span>
        <span class="token string">"default_riemann_end_color"</span><span class="token punctuation">:</span> GREEN<span class="token punctuation">,</span>
        <span class="token string">"area_opacity"</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
        <span class="token string">"num_rects"</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以看到上面包括了x轴/y轴最小/大值，坐标密度等等一系列的参数。在下面的例子中，我们通过自定义这其中的一些参数，来自己绘制一个坐标轴。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Plot1</span><span class="token punctuation">(</span>GraphScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"y_max"</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
        <span class="token string">"y_min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"x_max"</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
        <span class="token string">"x_min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"y_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token string">"x_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
        <span class="token string">"axes_color"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">,</span>
        <span class="token string">"y_labeled_nums"</span><span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"x_labeled_nums"</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7.0</span><span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">"x_label_decimal"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"y_label_direction"</span><span class="token punctuation">:</span> RIGHT<span class="token punctuation">,</span>
        <span class="token string">"x_label_direction"</span><span class="token punctuation">:</span> UP<span class="token punctuation">,</span>
        <span class="token string">"y_label_decimal"</span><span class="token punctuation">:</span> <span class="token number">3</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>setup_axes<span class="token punctuation">(</span>animate<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        graph <span class="token operator">=</span> self<span class="token punctuation">.</span>get_graph<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span>
                                color<span class="token operator">=</span>GREEN<span class="token punctuation">,</span>
                                x_min<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                                x_max<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            ShowCreation<span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">,</span>
            run_time<span class="token operator">=</span><span class="token number">2</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim 2D_and_3D_graphs.py Plot1 -pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>显示效果如下：</p>
<div id="dplayer15" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer15 = new DPlayer({"element":document.getElementById("dplayer15"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Plot1%E9%94%99%E8%AF%AF.mp4"}});</script><!-- dplayer used1 -->
<p>可以发现视频中图像有些错误，现在我们来修正它。</p>
<p>我们可以发现，坐标轴下方的数字刻度并没有小数，并且数字也并没有在我们指定的位置（指定数字位于x轴的上方和y轴的右方）。而从<code>GraphScene</code>类中的<code>setup_axes</code>方法中可以看出，坐标轴是由位于<code>manimlib/mobject/number_liine.py</code>中的<code>NumberLine</code>类绘制的。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">NumberLine</span><span class="token punctuation">(</span>Line<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"color"</span><span class="token punctuation">:</span> LIGHT_GREY<span class="token punctuation">,</span>
        <span class="token string">"x_min"</span><span class="token punctuation">:</span> <span class="token operator">-</span>FRAME_X_RADIUS<span class="token punctuation">,</span>
        <span class="token string">"x_max"</span><span class="token punctuation">:</span> FRAME_X_RADIUS<span class="token punctuation">,</span>
        <span class="token string">"unit_size"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"include_ticks"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"tick_size"</span><span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span>
        <span class="token string">"tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token comment"># Defaults to value near x_min s.t. 0 is a tick</span>
        <span class="token comment"># TODO, rename this</span>
        <span class="token string">"leftmost_tick"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token comment"># Change name</span>
        <span class="token string">"numbers_with_elongated_ticks"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">"include_numbers"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"numbers_to_show"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
        <span class="token string">"longer_tick_multiple"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string">"number_at_center"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"number_scale_val"</span><span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">,</span>
        <span class="token string">"label_direction"</span><span class="token punctuation">:</span> DOWN<span class="token punctuation">,</span>
        <span class="token string">"line_to_number_buff"</span><span class="token punctuation">:</span> MED_SMALL_BUFF<span class="token punctuation">,</span>
        <span class="token string">"include_tip"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"tip_width"</span><span class="token punctuation">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span>
        <span class="token string">"tip_height"</span><span class="token punctuation">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span>
        <span class="token string">"decimal_number_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"num_decimal_places"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"exclude_zero_from_default_numbers"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>刻度的位置是由<code>label_direction</code>控制的。小数的显示是由<code>decimal_number_config</code>控制的。所以我们需要修改<code>graph_scene.py</code>中生成坐标轴的<code>setup_axes</code>方法。</p>
<p>找到生成x轴的部分，如下：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">setup_axes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> animate<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ...</span>
    x_axis <span class="token operator">=</span> NumberLine<span class="token punctuation">(</span>
        x_min<span class="token operator">=</span>self<span class="token punctuation">.</span>x_min<span class="token punctuation">,</span>
        x_max<span class="token operator">=</span>self<span class="token punctuation">.</span>x_max<span class="token punctuation">,</span>
        unit_size<span class="token operator">=</span>self<span class="token punctuation">.</span>space_unit_to_x<span class="token punctuation">,</span>
        tick_frequency<span class="token operator">=</span>self<span class="token punctuation">.</span>x_tick_frequency<span class="token punctuation">,</span>
        leftmost_tick<span class="token operator">=</span>self<span class="token punctuation">.</span>x_leftmost_tick<span class="token punctuation">,</span>
        numbers_with_elongated_ticks<span class="token operator">=</span>self<span class="token punctuation">.</span>x_labeled_nums<span class="token punctuation">,</span>
        color<span class="token operator">=</span>self<span class="token punctuation">.</span>axes_color
    <span class="token punctuation">)</span>
    <span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改成下面的样子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">setup_axes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> animate<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># ...</span>
    x_axis <span class="token operator">=</span> NumberLine<span class="token punctuation">(</span>
        x_min<span class="token operator">=</span>self<span class="token punctuation">.</span>x_min<span class="token punctuation">,</span>
        x_max<span class="token operator">=</span>self<span class="token punctuation">.</span>x_max<span class="token punctuation">,</span>
        unit_size<span class="token operator">=</span>self<span class="token punctuation">.</span>space_unit_to_x<span class="token punctuation">,</span>
        tick_frequency<span class="token operator">=</span>self<span class="token punctuation">.</span>x_tick_frequency<span class="token punctuation">,</span>
        leftmost_tick<span class="token operator">=</span>self<span class="token punctuation">.</span>x_leftmost_tick<span class="token punctuation">,</span>
        numbers_with_elongated_ticks<span class="token operator">=</span>self<span class="token punctuation">.</span>x_labeled_nums<span class="token punctuation">,</span>
        color<span class="token operator">=</span>self<span class="token punctuation">.</span>axes_color<span class="token punctuation">,</span>
        label_direction<span class="token operator">=</span>self<span class="token punctuation">.</span>x_label_direction<span class="token punctuation">,</span>
        decimal_number_config<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"num_decimal_places"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>x_label_decimal<span class="token punctuation">&#125;</span>
    <span class="token punctuation">)</span>
    <span class="token comment"># ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>同样地，将y轴也做类似的修改：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">y_axis <span class="token operator">=</span> NumberLine<span class="token punctuation">(</span>
    <span class="token comment"># ...</span>
    label_direction<span class="token operator">=</span>self<span class="token punctuation">.</span>y_label_direction<span class="token punctuation">,</span>
    decimal_number_config<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"num_decimal_places"</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>y_label_decimal<span class="token punctuation">&#125;</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这两处修改中用到的两个变量，需要添加进CONFIG中，并赋上初值：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GraphScene</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token comment"># ...</span>
        <span class="token string">"x_label_direction"</span><span class="token punctuation">:</span> DOWN<span class="token punctuation">,</span>
        <span class="token string">"y_label_direction"</span><span class="token punctuation">:</span> LEFT<span class="token punctuation">,</span>
        <span class="token string">"x_label_decimal"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"y_label_decimal"</span><span class="token punctuation">:</span> <span class="token number">0</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>保存后重新渲染一遍刚才的类，结果如下所示，坐标轴如我们所希望的一样显示了。</p>
<div id="dplayer16" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer16 = new DPlayer({"element":document.getElementById("dplayer16"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Plot1%E6%AD%A3%E7%A1%AE.mp4"}});</script><!-- dplayer used1 -->
<p>类中剩余CONFIG的意思留给你自己弄清楚其中的含义了，别担心，这并不复杂，只要自己尝试着修改一下值，看看结果，就能很轻松地猜出它们的意思了。</p>
<p>下面列出一些有用的CONFIG选项以及它们的作用：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"x_max"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment"># x轴的最大值，类似的：x_min、y_max、y_min</span>
    <span class="token string">"x_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment"># 表示在x轴上每5个单位划一条短线，类似的：y_tick_frequency</span>
    <span class="token string">"axes_color"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">,</span> <span class="token comment"># 坐标轴的颜色</span>
    <span class="token string">"x_labeled_nums"</span><span class="token punctuation">:</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 表示需要在x轴上显示的数字，可以是range或者list，如果用了numpy需要转化为list，类似的：y_labeled_nums</span>
    <span class="token string">"x_label_decimal"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment"># x轴上显示数字的精度（小数点后几位），类似的：y_lable_decimal</span>
    <span class="token string">"graph_origin"</span><span class="token punctuation">:</span> <span class="token number">3</span> <span class="token operator">*</span> DOWN <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> LEFT<span class="token punctuation">,</span> <span class="token comment"># 原点的位置，ORIGIN表示正中间</span>
    <span class="token string">"x_label_direction"</span><span class="token punctuation">:</span> DOWN<span class="token punctuation">,</span> <span class="token comment"># 数字相对于x轴的位置，类似的：y_label_direction</span>
    <span class="token string">"x_axis_label"</span><span class="token punctuation">:</span> <span class="token string">"$x_1$"</span><span class="token punctuation">,</span> <span class="token comment"># x轴的标签，None表示不显示，类似的：y_axis_label</span>
    <span class="token string">"x_axis_width"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment"># x轴的长度，类似的：y_axis_height</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置好了需要的CONFIG，画图就非常简单了，基本上分成以下几步（写在<code>construct</code>方法中）：</p>
<ol type="1">
<li><p>设置坐标轴：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>setup_axes<span class="token punctuation">(</span>animate<span class="token operator">=</span><span class="token boolean">True</span><span class="token operator">/</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># 是否显示绘制动画</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>绘制函数图像：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">graph <span class="token operator">=</span> self<span class="token punctuation">.</span>get_graph<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span>GREEN<span class="token punctuation">,</span> x_min<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> x_max<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>显示：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ol>
<p><a href="https://github.com/Elteoremadebeethoven/AnimationsWithManim/blob/master/English/6a_plots_2D/scenes.md">AnimationsWithManim/scenes.md at master · Elteoremadebeethoven/AnimationsWithManim</a>上有关于坐标轴控制的更加详细的例子，可以进一步学习。</p>
<p>接下来我们来看看3D图像怎么绘制。绘制3D图像要用到的类叫做<code>ThreeDScene</code>，类如其名。首先来看一个例子。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CameraPosition1</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        circle <span class="token operator">=</span> Circle<span class="token punctuation">(</span><span class="token punctuation">)</span>
        circle<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">80</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span>
                                    theta<span class="token operator">=</span><span class="token number">45</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span>
                                    distance<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>
                                    gamma<span class="token operator">=</span><span class="token number">30</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">,</span> ShowCreation<span class="token punctuation">(</span>axes<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>代码比较好理解，第3行建立一个空间坐标系，第4行用默认参数画了一个圆，第9行生成坐标系以及圆的动画。</p>
<p>重点来说一下第7行，<code>self.set_camera_orientation</code>顾名思义是用来设置观察角度的，也就是想像你的头（为了好理解，接下来都把camera当成是你的头）在什么位置，朝着哪个方向看。不像2D，3D需要指定你从什么方位观察，观察角度的表示方式是球坐标系的表示方式<span class="math inline">\((r, \theta, \varphi)\)</span>。球坐标系的示意图如下所示：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_%E7%90%83%E5%9D%90%E6%A0%87%E7%B3%BB.svg" alt="球坐标系.svg" /><figcaption aria-hidden="true">球坐标系.svg</figcaption>
</figure>
<p>一般来说，<span class="math inline">\(\theta\)</span>的取值范围是<span class="math inline">\([0, 2\pi)=[0, 360^{\circ})\)</span>，<span class="math inline">\(\varphi\)</span>的取值范围是<span class="math inline">\([0, \pi]=[0, 180^{\circ}]\)</span>，<span class="math inline">\(r\)</span>的取值范围是<span class="math inline">\([0, +\infty)\)</span>。</p>
<p>第四个参数<span class="math inline">\(\gamma\)</span>表示看向坐标系时，你的头的旋转角度，取值范围是<span class="math inline">\([0, 2\pi)=[0, 360^{\circ})\)</span>。</p>
<p>渲染结果如下：</p>
<div id="dplayer17" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer17 = new DPlayer({"element":document.getElementById("dplayer17"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CameraPosition1.mp4"}});</script><!-- dplayer used1 -->
<p>如果想要移动你的头，可以使用<code>move_camera</code>方法，用法如下面的例子所示：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CameraPosition2</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        circle <span class="token operator">=</span> Circle<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">,</span> ShowCreation<span class="token punctuation">(</span>axes<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>move_camera<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">30</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span> theta<span class="token operator">=</span><span class="token operator">-</span><span class="token number">45</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染结果如下：</p>
<div id="dplayer18" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer18 = new DPlayer({"element":document.getElementById("dplayer18"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CameraPosition2.mp4"}});</script><!-- dplayer used1 -->
<p>如果要持续沿着z轴旋转可以使用<code>begin_ambient_camera_rotation</code>和<code>stop_ambient_camera_rotation</code>方法。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CameraPosition3</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        circle <span class="token operator">=</span> Circle<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">80</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">,</span> ShowCreation<span class="token punctuation">(</span>axes<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>begin_ambient_camera_rotation<span class="token punctuation">(</span>rate<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>stop_ambient_camera_rotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>渲染结果如下：</p>
<div id="dplayer19" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer19 = new DPlayer({"element":document.getElementById("dplayer19"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CameraPosition3.mp4"}});</script><!-- dplayer used1 -->
<p>空间中的参数曲线可以表现为如下的形式： <span class="math display">\[
f(u)=(x(u), y(u), z(u))
\]</span> 如果想要在3D空间中画一条参数曲线，可以使用<code>ParametricFunction</code>类。</p>
<pre class="line-numbers language-none"><code class="language-none">class ParametricCurve1(ThreeDScene):
    def construct(self):
        curve1 &#x3D; ParametricFunction(
            lambda u: np.array([1.2 * np.cos(u), 1.2 * np.sin(u), u &#x2F; 2]),
            color&#x3D;RED,
            t_min&#x3D;-TAU,
            t_max&#x3D;TAU,
        )
        curve2 &#x3D; ParametricFunction(
            lambda u: np.array([1.2 * np.cos(u), 1.2 * np.sin(u), u]),
            color&#x3D;RED,
            t_min&#x3D;-TAU,
            t_max&#x3D;TAU,
        )
        axes &#x3D; ThreeDAxes()
        self.add(axes)
        self.set_camera_orientation(phi&#x3D;80 * DEGREES, theta&#x3D;-60 * DEGREES)
        self.begin_ambient_camera_rotation(rate&#x3D;0.1)
        self.play(ShowCreation(curve1))
        self.wait()
        self.play(Transform(curve1, curve2),
                  rate_func&#x3D;there_and_back,
                  run_time&#x3D;3)
        self.wait()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>ParametricFunction</code>接受一个lambda表达式形式的参数曲线，<code>t_min</code>和<code>t_max</code>分别代表参数的取值范围。</p>
<p>第22行的<code>rate_func</code>是对动画速率的控制，<code>there_and_back</code>表示将play的内容正放再倒放，实际上这是一个定义在<code>manimlib/utils/rate_functions.py</code>中的一个函数，除此之外还有许多其它的函数，比如<code>linear</code>、<code>wiggle</code>等，分别代表了不同的动画效果（或者说速率控制）。</p>
<p>渲染结果如下：</p>
<div id="dplayer20" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer20 = new DPlayer({"element":document.getElementById("dplayer20"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ParametricCurve1.mp4"}});</script><!-- dplayer used1 -->
<p>如果仔细观察你可以发现，实际上这条红色的参数曲线完全在坐标轴之前，而不是一部分在前，一部分在后，和坐标轴互有遮挡。要想正确显示，需要在<code>ParametricCurve1</code>的基础上，将曲线的<code>set_shade_in_3d</code>设置为True，如下所示：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ParametricCurve2</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        curve1 <span class="token operator">=</span> ParametricFunction<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span> u<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span> u <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span>BLACK<span class="token punctuation">,</span>
            t_min<span class="token operator">=</span><span class="token operator">-</span>TAU<span class="token punctuation">,</span>
            t_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        curve2 <span class="token operator">=</span> ParametricFunction<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span> u<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            color<span class="token operator">=</span>RED<span class="token punctuation">,</span>
            t_min<span class="token operator">=</span><span class="token operator">-</span>TAU<span class="token punctuation">,</span>
            t_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        curve1<span class="token punctuation">.</span>set_shade_in_3d<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        curve2<span class="token punctuation">.</span>set_shade_in_3d<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">80</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span> theta<span class="token operator">=</span><span class="token operator">-</span><span class="token number">60</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>begin_ambient_camera_rotation<span class="token punctuation">(</span>rate<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>curve1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Transform<span class="token punctuation">(</span>curve1<span class="token punctuation">,</span> curve2<span class="token punctuation">)</span><span class="token punctuation">,</span>
                  rate_func<span class="token operator">=</span>there_and_back<span class="token punctuation">,</span>
                  run_time<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>同时我也让curve1的颜色变暗一点，线粗一点方便观察。</p>
<div id="dplayer21" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer21 = new DPlayer({"element":document.getElementById("dplayer21"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ParametricCurve2.mp4"}});</script><!-- dplayer used1 -->
<p>可以看出有了一定的交叉感，不过还是和实际的覆盖关系有区别。</p>
<p>曲线用<code>ParametricFunction</code>，曲面用另一个类，叫<code>ParametricSurface</code>。下面是一个例子。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SurfacesAnimations</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        cylinder <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span><span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>
            <span class="token punctuation">[</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>TAU <span class="token operator">*</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>TAU <span class="token operator">*</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> u<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fade<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
        paraboloid <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>TAU <span class="token operator">*</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>TAU <span class="token operator">*</span> v<span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
            checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>PURPLE_D<span class="token punctuation">,</span> PURPLE_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
            resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        para_hyp <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span><span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> u<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     v_min<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>
                                     v_max<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                                     u_min<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>
                                     u_max<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
                                     checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>BLUE_D<span class="token punctuation">,</span> BLUE_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
                                     resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        cone <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>u <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> u <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            v_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
            v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
            u_min<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>
            u_max<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
            checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>GREEN_D<span class="token punctuation">,</span> GREEN_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
            resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        hip_one_side <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>
                <span class="token punctuation">[</span>np<span class="token punctuation">.</span>cosh<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>
                 np<span class="token punctuation">.</span>cosh<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>
                 np<span class="token punctuation">.</span>sinh<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            v_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
            v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
            u_min<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>
            u_max<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
            checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>YELLOW_D<span class="token punctuation">,</span> YELLOW_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
            resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        ellipsoid <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span><span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token number">1</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>
                u<span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                      v_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
                                      v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
                                      u_min<span class="token operator">=</span><span class="token operator">-</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                      u_max<span class="token operator">=</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                      checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>TEAL_D<span class="token punctuation">,</span> TEAL_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
                                      resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        sphere <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span><span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>
            sin<span class="token punctuation">(</span>u<span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   v_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
                                   v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
                                   u_min<span class="token operator">=</span><span class="token operator">-</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                   u_max<span class="token operator">=</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                   checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>RED_D<span class="token punctuation">,</span> RED_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">75</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>begin_ambient_camera_rotation<span class="token punctuation">(</span>rate<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>sphere<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>sphere<span class="token punctuation">,</span> ellipsoid<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>ellipsoid<span class="token punctuation">,</span> cone<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>cone<span class="token punctuation">,</span> hip_one_side<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>hip_one_side<span class="token punctuation">,</span> para_hyp<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>para_hyp<span class="token punctuation">,</span> paraboloid<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ReplacementTransform<span class="token punctuation">(</span>paraboloid<span class="token punctuation">,</span> cylinder<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>FadeOut<span class="token punctuation">(</span>cylinder<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>简单来说，参数曲面可以这么表示： <span class="math display">\[
f(u, v)=(x(u,v), y(u,v), z(u,v))
\]</span> <code>v_min</code>、<code>v_max</code>、<code>u_min</code>、<code>u_max</code>用来控制参数方程的定义域，<code>resolution</code>用来控制曲面方格的密度，而<code>fade</code>用来控制曲面的透明度。</p>
<p>效果如下：</p>
<div id="dplayer22" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer22 = new DPlayer({"element":document.getElementById("dplayer22"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_SurfacesAnimations.mp4"}});</script><!-- dplayer used1 -->
<p>如果想要在空间中插入文字，可以像下面的例子一样操作：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Text3D</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">75</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span> theta<span class="token operator">=</span><span class="token operator">-</span><span class="token number">45</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        text3d <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"This is a 3D text"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>set_shade_in_3d<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        text3d<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> axis<span class="token operator">=</span>RIGHT<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>axes<span class="token punctuation">,</span> text3d<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>效果如下：</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Text3D.png" alt="Text3D.png" /><figcaption aria-hidden="true">Text3D.png</figcaption>
</figure>
<p>可以看到在<code>ThreeDScene</code>中，即使是普通的<code>TextMobject</code>也变成3D的了，如果想让这些文字像普通的<code>Scene</code>中显示的一样，可以使用<code>add_fixed_in_frame_mobjects</code>方法：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Text3D2</span><span class="token punctuation">(</span>ThreeDScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> ThreeDAxes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>set_camera_orientation<span class="token punctuation">(</span>phi<span class="token operator">=</span><span class="token number">75</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">,</span> theta<span class="token operator">=</span><span class="token operator">-</span><span class="token number">45</span> <span class="token operator">*</span> DEGREES<span class="token punctuation">)</span>
        text3d <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"This is a 3D text"</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add_fixed_in_frame_mobjects<span class="token punctuation">(</span>text3d<span class="token punctuation">)</span>  <span class="token comment">#&lt;----- Add this</span>
        text3d<span class="token punctuation">.</span>to_corner<span class="token punctuation">(</span>UL<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>begin_ambient_camera_rotation<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Write<span class="token punctuation">(</span>text3d<span class="token punctuation">)</span><span class="token punctuation">)</span>

        sphere <span class="token operator">=</span> ParametricSurface<span class="token punctuation">(</span><span class="token keyword">lambda</span> u<span class="token punctuation">,</span> v<span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>
            sin<span class="token punctuation">(</span>u<span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                   v_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
                                   v_max<span class="token operator">=</span>TAU<span class="token punctuation">,</span>
                                   u_min<span class="token operator">=</span><span class="token operator">-</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                   u_max<span class="token operator">=</span>PI <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                                   checkerboard_colors<span class="token operator">=</span><span class="token punctuation">[</span>RED_D<span class="token punctuation">,</span> RED_E<span class="token punctuation">]</span><span class="token punctuation">,</span>
                                   resolution<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>LaggedStartMap<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">,</span> sphere<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer23" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer23 = new DPlayer({"element":document.getElementById("dplayer23"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_Text3D2.mp4"}});</script><!-- dplayer used1 -->
<h2 id="常见问题">常见问题</h2>
<h3 id="如何管理一组对象">如何管理一组对象</h3>
<p>要管理一组对象，可以使用<code>VGroup</code>类的<code>arrange</code>方法。举个例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ArrangeObjects</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text1 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"You have"</span><span class="token punctuation">)</span>
        text2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"to use"</span><span class="token punctuation">)</span>
        text3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"\\tt VGroup"</span><span class="token punctuation">)</span>

        text_group <span class="token operator">=</span> VGroup<span class="token punctuation">(</span>text1<span class="token punctuation">,</span> text2<span class="token punctuation">,</span> text3<span class="token punctuation">)</span>
        text_group<span class="token punctuation">.</span>arrange<span class="token punctuation">(</span>
            DOWN<span class="token punctuation">,</span>
            aligned_edge<span class="token operator">=</span>LEFT<span class="token punctuation">,</span>
            buff<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text_group<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>text_group<span class="token punctuation">.</span>arrange<span class="token punctuation">,</span> UP<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"aligned_edge"</span><span class="token punctuation">:</span> RIGHT<span class="token punctuation">,</span> <span class="token string">"buff"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>text_group<span class="token punctuation">.</span>arrange<span class="token punctuation">,</span> RIGHT<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"buff"</span><span class="token punctuation">:</span> <span class="token number">0.4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer24" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer24 = new DPlayer({"element":document.getElementById("dplayer24"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ArrangeObjects.mp4"}});</script><!-- dplayer used1 -->
<h3 id="如何缩放或者移动摄影机视角">如何缩放或者移动摄影机视角</h3>
<p>要做到这一点，需要继承一个类<code>MovingCameraScene</code>，之后通过<code>self.camera_frame</code>来调整。</p>
<p>举个例子。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ChangePositionAndSizeCamera</span><span class="token punctuation">(</span>MovingCameraScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span><span class="token string">"\\nabla\\textbf&#123;u&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
        square <span class="token operator">=</span> Square<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Arrange the objects</span>
        VGroup<span class="token punctuation">(</span>text<span class="token punctuation">,</span> square<span class="token punctuation">)</span><span class="token punctuation">.</span>arrange<span class="token punctuation">(</span>RIGHT<span class="token punctuation">,</span> buff<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>text<span class="token punctuation">,</span> square<span class="token punctuation">)</span>

        <span class="token comment"># Save the state of camera</span>
        self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>save_state<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Animation of the camera</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            <span class="token comment"># Set the size with the width of a object</span>
            self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>set_width<span class="token punctuation">,</span>
            text<span class="token punctuation">.</span>get_width<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.2</span><span class="token punctuation">,</span>
            <span class="token comment"># Move the camera to the object</span>
            self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>move_to<span class="token punctuation">,</span>
            text<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Restore the state saved</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Restore<span class="token punctuation">(</span>self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>set_height<span class="token punctuation">,</span>
                  square<span class="token punctuation">.</span>get_width<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.2</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>move_to<span class="token punctuation">,</span> square<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Restore<span class="token punctuation">(</span>self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer25" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer25 = new DPlayer({"element":document.getElementById("dplayer25"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ChangePositionAndSizeCamera.mp4"}});</script><!-- dplayer used1 -->
<p>如果要在其它特定的场景（指一些<code>Scene</code>的派生类，比如<code>GraphScene</code>）中变更视角，除了需要同时继承该类和<code>MovingCameraScene</code>类之外，还需要自己定义一个<code>setup</code>方法，否则会报错。举个例子。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ChangePositionAndSizeCameraInAnotherScene</span><span class="token punctuation">(</span>GraphScene<span class="token punctuation">,</span> MovingCameraScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"y_max"</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
        <span class="token string">"y_min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"x_max"</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
        <span class="token string">"x_min"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token string">"y_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token string">"x_tick_frequency"</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

    <span class="token comment"># Setup the scenes</span>
    <span class="token keyword">def</span> <span class="token function">setup</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        GraphScene<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        MovingCameraScene<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>setup_axes<span class="token punctuation">(</span>animate<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

        graph <span class="token operator">=</span> self<span class="token punctuation">.</span>get_graph<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span>GREEN<span class="token punctuation">,</span> x_min<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> x_max<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>
        dot_at_start_graph <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>graph<span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        dot_at_end_grap <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>graph<span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>graph<span class="token punctuation">,</span> dot_at_end_grap<span class="token punctuation">,</span> dot_at_start_graph<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token number">.5</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>move_to<span class="token punctuation">,</span>
                  dot_at_start_graph<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>self<span class="token punctuation">.</span>camera_frame<span class="token punctuation">.</span>move_to<span class="token punctuation">,</span> dot_at_end_grap<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer26" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer26 = new DPlayer({"element":document.getElementById("dplayer26"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ChangePositionAndSizeCameraInAnotherScene.mp4"}});</script><!-- dplayer used1 -->
<h3 id="如何可视化线性变换">如何可视化线性变换</h3>
<p>实现给线性空间应用一个线性变换的动画需要<code>LinearTransformationScene</code>。其中有几个主要用到的方法，分别是<code>apply_matrix</code>、<code>add_vector</code>和<code>add_transformable_mobject</code>。下面给出一个例子，其中的CONFIG包含了几乎所有你可以修改的参数。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">LinearTransformation</span><span class="token punctuation">(</span>LinearTransformationScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"include_background_plane"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"include_foreground_plane"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"foreground_plane_kwargs"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"x_radius"</span><span class="token punctuation">:</span> FRAME_WIDTH<span class="token punctuation">,</span>
            <span class="token string">"y_radius"</span><span class="token punctuation">:</span> FRAME_HEIGHT<span class="token punctuation">,</span>
            <span class="token string">"secondary_line_ratio"</span><span class="token punctuation">:</span> <span class="token number">0</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"background_plane_kwargs"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"color"</span><span class="token punctuation">:</span> GREY<span class="token punctuation">,</span>
            <span class="token string">"secondary_color"</span><span class="token punctuation">:</span> DARK_GREY<span class="token punctuation">,</span>
            <span class="token string">"axes_color"</span><span class="token punctuation">:</span> GREY<span class="token punctuation">,</span>
            <span class="token string">"stroke_width"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token string">"show_coordinates"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
        <span class="token string">"show_basis_vectors"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>
        <span class="token string">"basis_vector_stroke_width"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token string">"i_hat_color"</span><span class="token punctuation">:</span> X_COLOR<span class="token punctuation">,</span>
        <span class="token string">"j_hat_color"</span><span class="token punctuation">:</span> Y_COLOR<span class="token punctuation">,</span>
        <span class="token string">"leave_ghost_vectors"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        mob <span class="token operator">=</span> Circle<span class="token punctuation">(</span><span class="token punctuation">)</span>
        mob<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>RIGHT <span class="token operator">+</span> UP <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>
        vector_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        matrix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

        self<span class="token punctuation">.</span>add_transformable_mobject<span class="token punctuation">(</span>mob<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add_vector<span class="token punctuation">(</span>vector_array<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>apply_matrix<span class="token punctuation">(</span>matrix<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer27" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer27 = new DPlayer({"element":document.getElementById("dplayer27"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_LinearTransformation.mp4"}});</script><!-- dplayer used1 -->
<h3 id="如何清除屏幕上的所有对象">如何清除屏幕上的所有对象</h3>
<p>屏幕上的所有对象都保存在<code>self.mobjects</code>中，因此可以采用如下的方法来清除：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">RemoveAllObjectsInScreen</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            ShowCreation<span class="token punctuation">(</span>
                VGroup<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>
                    VGroup<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>Dot<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>arrange<span class="token punctuation">(</span>RIGHT<span class="token punctuation">)</span>
                    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>arrange<span class="token punctuation">(</span>DOWN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>FadeOut<span class="token punctuation">(</span>mob<span class="token punctuation">)</span> <span class="token keyword">for</span> mob <span class="token keyword">in</span> self<span class="token punctuation">.</span>mobjects<span class="token punctuation">]</span>
                  <span class="token comment"># All mobjects in the screen are saved in self.mobjects</span>
                  <span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div id="dplayer28" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer28 = new DPlayer({"element":document.getElementById("dplayer28"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_RemoveAllObjectsInScreen.mp4"}});</script><!-- dplayer used1 -->
<h3 id="如何实现放大镜效果">如何实现放大镜效果</h3>
<p>需要继承一个新的类<code>ZoomedScene</code>，不多说直接给一个例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ZoomedSceneExample</span><span class="token punctuation">(</span>ZoomedScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    CONFIG <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
        <span class="token string">"zoom_factor"</span><span class="token punctuation">:</span> <span class="token number">0.3</span><span class="token punctuation">,</span>
        <span class="token string">"zoomed_display_height"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">"zoomed_display_width"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token string">"image_frame_stroke_width"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token string">"zoomed_camera_config"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>
            <span class="token string">"default_frame_stroke_width"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Set objects</span>
        dot <span class="token operator">=</span> Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span>UL <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>

        image <span class="token operator">=</span> ImageMobject<span class="token punctuation">(</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        image<span class="token punctuation">.</span>set_height<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
        frame_text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Frame"</span><span class="token punctuation">,</span> color<span class="token operator">=</span>PURPLE<span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span>
        zoomed_camera_text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">"Zommed camera"</span><span class="token punctuation">,</span> color<span class="token operator">=</span>RED<span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">1.4</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>image<span class="token punctuation">,</span> dot<span class="token punctuation">)</span>

        <span class="token comment"># Set camera</span>
        zoomed_camera <span class="token operator">=</span> self<span class="token punctuation">.</span>zoomed_camera
        zoomed_display <span class="token operator">=</span> self<span class="token punctuation">.</span>zoomed_display
        frame <span class="token operator">=</span> zoomed_camera<span class="token punctuation">.</span>frame
        zoomed_display_frame <span class="token operator">=</span> zoomed_display<span class="token punctuation">.</span>display_frame

        frame<span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>dot<span class="token punctuation">)</span>
        frame<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>PURPLE<span class="token punctuation">)</span>

        zoomed_display_frame<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>RED<span class="token punctuation">)</span>
        zoomed_display<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>DOWN<span class="token punctuation">)</span>

        <span class="token comment"># brackground zoomed_display</span>
        zd_rect <span class="token operator">=</span> BackgroundRectangle<span class="token punctuation">(</span>
            zoomed_display<span class="token punctuation">,</span>
            fill_opacity<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
            buff<span class="token operator">=</span>MED_SMALL_BUFF<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>add_foreground_mobject<span class="token punctuation">(</span>zd_rect<span class="token punctuation">)</span>

        <span class="token comment"># animation of unfold camera</span>
        unfold_camera <span class="token operator">=</span> UpdateFromFunc<span class="token punctuation">(</span>
            zd_rect<span class="token punctuation">,</span> <span class="token keyword">lambda</span> rect<span class="token punctuation">:</span> rect<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>zoomed_display<span class="token punctuation">)</span><span class="token punctuation">)</span>

        frame_text<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> DOWN<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">,</span> FadeInFromDown<span class="token punctuation">(</span>frame_text<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># Activate zooming</span>
        self<span class="token punctuation">.</span>activate_zooming<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            <span class="token comment"># You have to add this line</span>
            self<span class="token punctuation">.</span>get_zoomed_display_pop_out_animation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            unfold_camera<span class="token punctuation">)</span>

        zoomed_camera_text<span class="token punctuation">.</span>next_to<span class="token punctuation">(</span>zoomed_display_frame<span class="token punctuation">,</span> DOWN<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>FadeInFromDown<span class="token punctuation">(</span>zoomed_camera_text<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># Scale in     x   y  z</span>
        scale_factor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

        <span class="token comment"># Resize the frame and zoomed camera</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>frame<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> scale_factor<span class="token punctuation">,</span>
                  zoomed_display<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> scale_factor<span class="token punctuation">,</span>
                  FadeOut<span class="token punctuation">(</span>zoomed_camera_text<span class="token punctuation">)</span><span class="token punctuation">,</span> FadeOut<span class="token punctuation">(</span>frame_text<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># Resize the frame</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>frame<span class="token punctuation">.</span>scale<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> frame<span class="token punctuation">.</span>shift<span class="token punctuation">,</span> <span class="token number">2.5</span> <span class="token operator">*</span> DOWN<span class="token punctuation">)</span>

        <span class="token comment"># Resize zoomed camera</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ScaleInPlace<span class="token punctuation">(</span>zoomed_display<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            self<span class="token punctuation">.</span>get_zoomed_display_pop_out_animation<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            unfold_camera<span class="token punctuation">,</span>
            <span class="token comment"># -------> Inverse</span>
            rate_func<span class="token operator">=</span><span class="token keyword">lambda</span> t<span class="token punctuation">:</span> smooth<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>
            Uncreate<span class="token punctuation">(</span>zoomed_display_frame<span class="token punctuation">)</span><span class="token punctuation">,</span>
            FadeOut<span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这一段代码比较复杂，还涉及到了一些陌生的概念，可以不用急着搞懂，先看看效果：</p>
<div id="dplayer29" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer29 = new DPlayer({"element":document.getElementById("dplayer29"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_ZoomedSceneExample.mp4"}});</script><!-- dplayer used1 -->
<h3 id="如何用点集来绘制图像">如何用点集来绘制图像</h3>
<p>之前我们学习了如何用函数来绘制图像，不过知道如何通过点集来绘制图像也很有必要。</p>
<p>点集可以直接在.py文件中声明，但建议从另一个文件导入，最常用的文件有.dat或者.csv文件。</p>
<p>在Manim中，“标准”坐标系总是指屏幕，也就是说。屏幕的中心是XY参考系的原点。这时候，如果使用<code>Dot</code>绘制点，点的坐标总是相对于屏幕中心的。就像下面这样。</p>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_NormalCoordinate.png" alt="NormalCoordinate.png" /><figcaption aria-hidden="true">NormalCoordinate.png</figcaption>
</figure>
<p>但是如果我们想把一组点放到一个特定的图像上，就必须把屏幕坐标转换成图像坐标。</p>
<p>在Manim中的屏幕坐标称为“coords”，图像坐标称为“points”。</p>
<p>来看一个例子：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">GraphFromData</span><span class="token punctuation">(</span>GraphScene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>setup_axes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">import</span> csv
        points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"tutorial/custom_graphs_data.csv"</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
            <span class="token keyword">for</span> row <span class="token keyword">in</span> reader<span class="token punctuation">:</span>
                x<span class="token punctuation">,</span> y <span class="token operator">=</span> row
                point <span class="token operator">=</span> self<span class="token punctuation">.</span>coords_to_point<span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>
                points<span class="token punctuation">.</span>append<span class="token punctuation">(</span>point<span class="token punctuation">)</span>
        dots <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>point<span class="token punctuation">)</span> <span class="token keyword">for</span> point <span class="token keyword">in</span> points<span class="token punctuation">]</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>dots<span class="token punctuation">)</span>
        graph1 <span class="token operator">=</span> VMobject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        graph1<span class="token punctuation">.</span>set_points_as_corners<span class="token punctuation">(</span>points<span class="token punctuation">)</span>
        graph2 <span class="token operator">=</span> VMobject<span class="token punctuation">(</span><span class="token punctuation">)</span>
        graph2<span class="token punctuation">.</span>set_points_smoothly<span class="token punctuation">(</span>points<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>graph1<span class="token punctuation">)</span><span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Uncreate<span class="token punctuation">(</span>graph1<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>ShowCreation<span class="token punctuation">(</span>graph2<span class="token punctuation">)</span><span class="token punctuation">,</span> run_time<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>导入.csv文件可以使用<code>csv</code>模块。</p>
<p>第10行的<code>coords_to_point</code>用来将屏幕坐标转化为图像坐标。</p>
<p>使用<code>VMobject</code>类可以绘制通过点的线。其中<code>set_points_as_corners</code>绘制的是折线，<code>set_points_smoothly</code>绘制的是平滑的曲线。</p>
<div id="dplayer30" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer30 = new DPlayer({"element":document.getElementById("dplayer30"),"video":{"url":"https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_GraphFromData.mp4"}});</script><!-- dplayer used1 -->
<p>当然，使用<code>Scene</code>也能这样做，区别就是坐标轴使用的是屏幕坐标。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CustomGraph</span><span class="token punctuation">(</span>Scene<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">construct</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        axes <span class="token operator">=</span> Axes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        coords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        points <span class="token operator">=</span> <span class="token punctuation">[</span>axes<span class="token punctuation">.</span>coords_to_point<span class="token punctuation">(</span><span class="token operator">*</span>coord<span class="token punctuation">)</span> <span class="token keyword">for</span> coord <span class="token keyword">in</span> coords<span class="token punctuation">]</span>
        dots <span class="token operator">=</span> VGroup<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>Dot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>move_to<span class="token punctuation">(</span>point<span class="token punctuation">)</span> <span class="token keyword">for</span> point <span class="token keyword">in</span> points<span class="token punctuation">]</span><span class="token punctuation">)</span>
        graph <span class="token operator">=</span> VMobject<span class="token punctuation">(</span>color<span class="token operator">=</span>GREEN<span class="token punctuation">)</span>
        graph<span class="token punctuation">.</span>set_points_smoothly<span class="token punctuation">(</span>points<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>axes<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> dots<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<figure>
<img src="https://xfdjblog-1258179712.cos.ap-guangzhou.myqcloud.com/2019_11_24_%E5%AD%A6%E4%B9%A0Manim_CustomGraph.png" alt="CustomGraph.png" /><figcaption aria-hidden="true">CustomGraph.png</figcaption>
</figure>
<h2 id="插入图片和声音">插入图片和声音</h2>
<h3 id="素材文件夹">素材文件夹</h3>
<p>在Manim中使用外部图片或SVG文件时，可以直接使用绝对路径定位文件。例如：<code>D:\\...\\picture.png</code>、<code>/home/.../picture.png</code>。</p>
<p>也可以放在与<code>manim.py</code>、<code>manimlib</code>同级的文件夹内，使用相对路径。例如：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim
┣manim.py
┣manimlib
┣picture.png
┗svg_file.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>不过更推荐使用<code>assets</code>目录，由于此目录并不自带，所以需要自己在<code>manim.py</code>的同级目录中创建此文件夹。并且需要在<code>assets</code>目录下创建三个子目录<code>raster_images</code>、<code>svg_images</code>、<code>sounds</code>。需要使用的图片素材放到<code>raster_images</code>文件夹中，需要使用的SVG素材放到<code>svg_images</code>中。如下所示：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">manim
┣manim.py
┣manimlib
┗assets
  ┣raster_images
    ┗picture.png
  ┣svg_images
    ┗svg_file.svg
  ┗sounds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这样只需要文件名，Manim就能自动定位到对应文件。</p>
<h3 id="插入svg">插入SVG</h3>
<p>在Manim中插入SVG图片直接使用<code>SVGMobject</code>即可。关键字参数和<code>VMobject</code>类似。如下所示。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">mob <span class="token operator">=</span> SVGMobject<span class="token punctuation">(</span>
	<span class="token string">"svg_file.svg"</span><span class="token punctuation">,</span> <span class="token comment"># 唯一参数为一个字符串，表示SVG文件的路径，可用上文方法后直接输入文件名</span>
    color<span class="token operator">=</span>BLUE<span class="token punctuation">,</span> <span class="token comment"># 颜色</span>
    stroke_width<span class="token operator">=</span><span class="token number">0.00</span> <span class="token comment"># 描边宽度</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>由于<code>SVGMobject</code>是<code>VMojbect</code>的子类，所以可以使用所有动画效果。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Uncreate<span class="token punctuation">(</span>mob<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>另外，<code>SVGMobject</code>能够处理的和显示有关的SVG元素只有以下几个：</p>
<p><code>path</code>、<code>rect</code>、<code>circle</code>、<code>ellipse</code>、<code>polygon</code>、<code>polyline</code></p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>?xml</span> <span class="token attr-name">...</span><span class="token punctuation">></span></span>
...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">...</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>... ...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polyline</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>... ...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span> <span class="token attr-name">...</span><span class="token punctuation">></span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其余的元素，如<code>image</code>、<code>text</code>等都会省略。</p>
<h3 id="插入图片">插入图片</h3>
<p>在Manim中插入图片，需要使用<code>ImageMobject</code>。与<code>SVGMobject</code>类似，传入一个参数表示图片文件名（支持格式有：<code>.jpg</code>、<code>.png</code>、<code>.gif</code>）。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">image <span class="token operator">=</span> ImageMobject<span class="token punctuation">(</span>
	<span class="token string">'picture.png'</span><span class="token punctuation">,</span>
    height<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment"># height 表示插入图片的高度，默认为2</span>
    invert<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token comment"># invert 表示是否反色，默认为False</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>ImageMobject</code>不是<code>VMobject</code>的子类，所以很多动画都无法使用。</p>
<h2 id="详解manim文字">详解Manim文字</h2>
<h3 id="textmobject">TextMobject</h3>
<p><code>TextMobject</code>的原理，是用<span class="math inline">\(\LaTeX\)</span>编译出SVG。其他属性和<code>VMobject</code>的均相同，也可以使用所有的动画效果。用法如下。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span>
    <span class="token string">"text"</span><span class="token punctuation">,</span> <span class="token comment"># 要显示的文字，会套入模板中用xelatex编译</span>
    color<span class="token operator">=</span>BLUE<span class="token punctuation">,</span> <span class="token comment"># 字体颜色</span>
    background_stroke_color<span class="token operator">=</span>RED <span class="token comment"># 字体描边颜色</span>
<span class="token punctuation">)</span>
self<span class="token punctuation">.</span>play<span class="token punctuation">(</span>Uncreate<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
text2 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'\\LaTeX\\\\换行'</span><span class="token punctuation">)</span>
text3 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">r'\LaTeX'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：其中需要使用<span class="math inline">\(\LaTeX\)</span>命令的<code>\</code>都需要替换为<code>\\</code>，或在字符串前加<code>r</code>。</p>
<p>一个<code>TextMobject</code>中也可以传入多个字符串，会单独编译，连在一起显示。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">text4 <span class="token operator">=</span> TextMobject<span class="token punctuation">(</span><span class="token string">'ab'</span><span class="token punctuation">,</span> <span class="token string">'cde'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>要访问<code>text4</code>的各个字符串以及单个字符，可以通过下标来访问。</p>
<pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph TD
text(text: abcde)
text0(&quot;text[0]: ab&quot;)
text1(&quot;text[1]: cde&quot;)
text00(&quot;text[0][0]: a&quot;)
text01(&quot;text[0][1]: b&quot;)
text02(&quot;text[0][2]: c&quot;)
text10(&quot;text[1][0]: d&quot;)
text11(&quot;text[1][1]: e&quot;)
text --- text0
text --- text1
text0 --- text00
text0 --- text01
text0 --- text02
text1 --- text10
text1 --- text11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="texmobject">TexMobject</h3>
<p><code>TexMobject</code>，实际上就是<span class="math inline">\(\LaTeX\)</span>的align*环境。使用<span class="math inline">\(\LaTeX\)</span>的数学语法编写公式，结构也和<code>TextMobject</code>类似。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">tex <span class="token operator">=</span> TexMobject<span class="token punctuation">(</span>
    <span class="token string">"\\sum^n_&#123;i=1&#125;i^3=?"</span> <span class="token comment"># 公式的LaTeX编码</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 放大两倍</span>
debugTeX<span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 在manim_sandbox中定义了一个显示子物体下标的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="textmobject和texmobject的区别">TextMobject和TexMobject的区别</h3>
<p>本质区别就是<code>TextMobject</code>直接将内容写在<span class="math inline">\(\LaTeX\)</span>的document中，而<code>TexMobject</code>将内容写在align*公式环境里。</p>
<pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>preview<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">standalone</span><span class="token punctuation">&#125;</span>
<span class="token function selector">\usepackage</span><span class="token punctuation">&#123;</span><span class="token keyword">...</span><span class="token punctuation">&#125;</span>
...
<span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span>
TextMobject
<span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">align*</span><span class="token punctuation">&#125;</span><span class="token equation string">
TexMobject
</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">align*</span><span class="token punctuation">&#125;</span>
<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>所以对于文字和公式，下面两种写法是等价的。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">TextMobject<span class="token punctuation">(</span><span class="token string">"文字$公式$"</span><span class="token punctuation">)</span>
TexMobject<span class="token punctuation">(</span><span class="token string">"\\text&#123;文字&#125;公式"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="text">Text</h3>
<p>如果想自定义字体的话，可以使用<code>Text</code>（需要最新版的Manim）。</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> Text<span class="token punctuation">(</span>
    <span class="token string">"a bcd\n\tfgh"</span><span class="token punctuation">,</span> <span class="token comment"># 只能传入一个字符串，支持\t\n等转义字符</span>
    color<span class="token operator">=</span>BLACK<span class="token punctuation">,</span> <span class="token comment"># 颜色</span>
    font<span class="token operator">=</span><span class="token string">"Consolas"</span><span class="token punctuation">,</span> <span class="token comment"># 字体</span>
    t2c<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"bcd"</span><span class="token punctuation">:</span> BLUE<span class="token punctuation">&#125;</span> <span class="token comment"># 可以通过这个字典来将部分文字上色</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>scale<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Text</code>类是<code>SVGMobject</code>的子类，所以有其全部属性和动画效果。</p>
<p>一个<code>Text</code>的子物体就是他的每个字符，空格和<code>\n</code>算一个字符，<code>\t</code>算作四个空格。</p>
<p>可以前往<a href="https://github.com/manim-kindergarten/manim_sandbox/wiki/text_mobject-%E6%96%87%E5%AD%97%E5%AF%B9%E8%B1%A1">text_mobject 文字对象 · manim-kindergarten/manim_sandbox Wiki</a>查看更多用法。</p>
<h1 id="参考网页">参考网页</h1>
<ul>
<li><a href="https://www.bilibili.com/video/BV19K411V7SV?p=19">Manim tutorial 最新全集_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></li>
<li><a href="https://www.bilibili.com/read/cv3387999/">如何安装Manim - 哔哩哔哩</a></li>
<li><a href="https://umm.js.org/p/637d228f/">manim 安装配置指北 | 三分之七橙</a></li>
<li><a href="https://github.com/Elteoremadebeethoven/AnimationsWithManim">Elteoremadebeethoven/AnimationsWithManim: Animation course with Manim</a></li>
</ul>
]]></content>
      <tags>
        <tag>Manim</tag>
      </tags>
  </entry>
</search>
